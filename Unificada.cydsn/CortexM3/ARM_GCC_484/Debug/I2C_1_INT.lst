ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"I2C_1_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.I2C_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	I2C_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	I2C_1_ISR, %function
  24              	I2C_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\I2C_1_INT.c"
   1:.\Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/I2C_1_INT.c **** * File Name: I2C_1_INT.c
   3:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
   5:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  for I2C component.
   8:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
   9:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  Note:
  10:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  11:.\Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/I2C_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/I2C_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/I2C_1_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  18:.\Generated_Source\PSoC5/I2C_1_INT.c **** #include "I2C_1_PVT.h"
  19:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  20:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  21:.\Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  22:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  Place your includes, defines and code here
  23:.\Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************/
  24:.\Generated_Source\PSoC5/I2C_1_INT.c **** /* `#START I2C_1_ISR_intc` */
  25:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  26:.\Generated_Source\PSoC5/I2C_1_INT.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  28:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  29:.\Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Function Name: I2C_1_ISR
  31:.\Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 2


  32:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  33:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Summary:
  34:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  Handler for I2C interrupt. The Slave and Master operations are handled here.
  35:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  36:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Parameters:
  37:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  void
  38:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  39:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Return:
  40:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  void
  41:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  42:.\Generated_Source\PSoC5/I2C_1_INT.c **** * Reentrant:
  43:.\Generated_Source\PSoC5/I2C_1_INT.c **** *  No
  44:.\Generated_Source\PSoC5/I2C_1_INT.c **** *
  45:.\Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  46:.\Generated_Source\PSoC5/I2C_1_INT.c **** CY_ISR(I2C_1_ISR)
  47:.\Generated_Source\PSoC5/I2C_1_INT.c **** {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 3, -16
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  48:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_SLAVE_ENABLED)
  49:.\Generated_Source\PSoC5/I2C_1_INT.c ****        uint8  tmp8;
  50:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #endif  /* (I2C_1_MODE_SLAVE_ENABLED) */
  51:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  52:.\Generated_Source\PSoC5/I2C_1_INT.c ****     uint8  tmpCsr;
  53:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  54:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_TIMEOUT_FF_ENABLED)
  55:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if(0u != I2C_1_TimeoutGetStatus())
  56:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
  57:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_TimeoutReset();
  58:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_EXIT_IDLE;
  59:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* I2C_1_CSR_REG should be cleared after reset */
  60:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
  61:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_TIMEOUT_FF_ENABLED) */
  62:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  63:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  64:.\Generated_Source\PSoC5/I2C_1_INT.c ****     tmpCsr = I2C_1_CSR_REG;      /* Make copy as interrupts clear */
  37              		.loc 1 64 0
  38 0002 A54B     		ldr	r3, .L26
  39 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
  40 0006 E4B2     		uxtb	r4, r4
  41              	.LVL0:
  65:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  66:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  67:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_START_GEN(I2C_1_MCSR_REG))
  68:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
  69:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_CLEAR_START_GEN;
  70:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  71:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Set READ complete, but was aborted */
  72:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
  73:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                             I2C_1_GET_MSTAT_CMPLT);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 3


  74:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  75:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* The slave was addressed */
  76:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_SLAVE;
  77:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
  78:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  79:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  80:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  81:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_MULTI_MASTER_ENABLED)
  82:.\Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_LOST_ARB(tmpCsr))
  83:.\Generated_Source\PSoC5/I2C_1_INT.c ****         {
  84:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Set errors */
  85:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER     |
  86:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                             I2C_1_MSTAT_ERR_ARB_LOST |
  87:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                             I2C_1_GET_MSTAT_CMPLT);
  88:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  89:.\Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  90:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
  91:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  92:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
  93:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
  94:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* The slave was addressed */
  95:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SLAVE;
  96:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
  97:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else
  98:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
  99:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_BUS_RELEASE;
 100:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 101:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_EXIT_IDLE;
 102:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 103:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 104:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_BUS_RELEASE;
 105:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 106:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_EXIT_IDLE;
 107:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 108:.\Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 109:.\Generated_Source\PSoC5/I2C_1_INT.c ****         }
 110:.\Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_MULTI_MASTER_ENABLED) */
 111:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 112:.\Generated_Source\PSoC5/I2C_1_INT.c ****     /* Check for Master operation mode */
 113:.\Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_SM_MASTER)
  42              		.loc 1 113 0
  43 0008 A44B     		ldr	r3, .L26+4
  44 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  45 000c 13F0400F 		tst	r3, #64
  46 0010 00F03981 		beq	.L2
 114:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
 115:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #if(I2C_1_MODE_MASTER_ENABLED)
 116:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
  47              		.loc 1 116 0
  48 0014 14F0010F 		tst	r4, #1
  49 0018 00F01D81 		beq	.L3
 117:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 118:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 switch (I2C_1_state)
  50              		.loc 1 118 0
  51 001c 9F4B     		ldr	r3, .L26+4
  52 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  53 0020 453B     		subs	r3, r3, #69
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 4


  54 0022 052B     		cmp	r3, #5
  55 0024 00F21481 		bhi	.L4
  56 0028 DFE813F0 		tbh	[pc, r3, lsl #1]
  57              	.L6:
  58 002c 0600     		.2byte	(.L5-.L6)/2
  59 002e 8200     		.2byte	(.L7-.L6)/2
  60 0030 1201     		.2byte	(.L4-.L6)/2
  61 0032 1201     		.2byte	(.L4-.L6)/2
  62 0034 0600     		.2byte	(.L5-.L6)/2
  63 0036 E000     		.2byte	(.L8-.L6)/2
  64              		.p2align 1
  65              	.L5:
 119:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 120:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 case I2C_1_SM_MSTR_WR_ADDR:  /* After address is sent, WRITE data */
 121:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 case I2C_1_SM_MSTR_RD_ADDR:  /* After address is sent, READ  data */
 122:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
  66              		.loc 1 123 0
  67 0038 04F0DF05 		and	r5, r4, #223
  68              	.LVL1:
 124:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     
 125:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_CHECK_ADDR_ACK(tmpCsr))
  69              		.loc 1 125 0
  70 003c 04F00A04 		and	r4, r4, #10
  71 0040 082C     		cmp	r4, #8
  72 0042 42D1     		bne	.L9
 126:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 127:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Setup for transmit or receive of data */
 128:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_state == I2C_1_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
  73              		.loc 1 128 0
  74 0044 954B     		ldr	r3, .L26+4
  75 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76 0048 DBB2     		uxtb	r3, r3
  77 004a 452B     		cmp	r3, #69
  78 004c 35D1     		bne	.L10
 129:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 130:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Check if at least one byte to transfer */
 131:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             if(I2C_1_mstrWrBufSize > 0u)
  79              		.loc 1 131 0
  80 004e 944B     		ldr	r3, .L26+8
  81 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82 0052 13F0FF0F 		tst	r3, #255
  83 0056 10D0     		beq	.L11
 132:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 133:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* Load the 1st data byte */
 134:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_DATA_REG = I2C_1_mstrWrBufPtr[0u];
  84              		.loc 1 134 0
  85 0058 924B     		ldr	r3, .L26+12
  86 005a 1B68     		ldr	r3, [r3]
  87 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  88 005e D2B2     		uxtb	r2, r2
  89 0060 914B     		ldr	r3, .L26+16
  90 0062 1A70     		strb	r2, [r3]
 135:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_TRANSMIT_DATA;
  91              		.loc 1 135 0
  92 0064 0422     		movs	r2, #4
  93 0066 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 5


  94 0068 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
  95              		.loc 1 136 0
  96 006a 0122     		movs	r2, #1
  97 006c 8F4B     		ldr	r3, .L26+20
  98 006e 1A70     		strb	r2, [r3]
 137:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 138:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* Set transmit state until done */
 139:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_state = I2C_1_SM_MSTR_WR_DATA;
  99              		.loc 1 139 0
 100 0070 4622     		movs	r2, #70
 101 0072 8A4B     		ldr	r3, .L26+4
 102 0074 1A70     		strb	r2, [r3]
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 103              		.loc 1 123 0
 104 0076 2C46     		mov	r4, r5
 105 0078 EDE0     		b	.L3
 106              	.L11:
 140:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 141:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* End of buffer: complete writing */
 142:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 107              		.loc 1 142 0
 108 007a 8D4B     		ldr	r3, .L26+24
 109 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 110 007e 13F0020F 		tst	r3, #2
 111 0082 0DD0     		beq	.L12
 143:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 144:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 #if(CY_PSOC5A)
 145:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     /* Do not handles 0 bytes transfer - HALT is NOT allowed */
 146:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_ENABLE_INT_ON_STOP;
 147:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_GENERATE_STOP;
 148:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 
 149:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 #else
 150:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     /* Set WRITE complete and Master HALTED */
 151:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 112              		.loc 1 151 0
 113 0084 8B4B     		ldr	r3, .L26+28
 114 0086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 115 0088 42F00A02 		orr	r2, r2, #10
 116 008c 1A70     		strb	r2, [r3]
 152:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                                     I2C_1_MSTAT_WR_CMPLT);
 153:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 154:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect RESTART */
 117              		.loc 1 154 0
 118 008e 6022     		movs	r2, #96
 119 0090 824B     		ldr	r3, .L26+4
 120 0092 1A70     		strb	r2, [r3]
 155:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_DisableInt();
 121              		.loc 1 155 0
 122 0094 4FF40042 		mov	r2, #32768
 123 0098 874B     		ldr	r3, .L26+32
 124 009a 1A60     		str	r2, [r3]
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 125              		.loc 1 123 0
 126 009c 2C46     		mov	r4, r5
 127 009e DAE0     		b	.L3
 128              	.L12:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 6


 156:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 
 157:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 #endif /* (CY_PSOC5A) */
 158:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 159:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             else
 160:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 161:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it 
 129              		.loc 1 161 0
 130 00a0 864B     		ldr	r3, .L26+36
 131 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 132 00a4 42F01002 		orr	r2, r2, #16
 133 00a8 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_GENERATE_STOP;
 134              		.loc 1 162 0
 135 00aa 1022     		movs	r2, #16
 136 00ac 0333     		adds	r3, r3, #3
 137 00ae 1A70     		strb	r2, [r3]
 138 00b0 0422     		movs	r2, #4
 139 00b2 023B     		subs	r3, r3, #2
 140 00b4 1A70     		strb	r2, [r3]
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 141              		.loc 1 123 0
 142 00b6 2C46     		mov	r4, r5
 143 00b8 CDE0     		b	.L3
 144              	.L10:
 163:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 164:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 165:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else  /* Master Receive data */
 166:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 167:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_READY_TO_READ; /* Release bus to read data */
 145              		.loc 1 167 0
 146 00ba 0022     		movs	r2, #0
 147 00bc 764B     		ldr	r3, .L26
 148 00be 1A70     		strb	r2, [r3]
 168:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 169:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state  = I2C_1_SM_MSTR_RD_DATA;
 149              		.loc 1 169 0
 150 00c0 4A22     		movs	r2, #74
 151 00c2 764B     		ldr	r3, .L26+4
 152 00c4 1A70     		strb	r2, [r3]
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 153              		.loc 1 123 0
 154 00c6 2C46     		mov	r4, r5
 155 00c8 C5E0     		b	.L3
 156              	.L9:
 170:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 171:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 172:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Address is NACKed */
 173:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else if(I2C_1_CHECK_ADDR_NAK(tmpCsr))
 157              		.loc 1 173 0
 158 00ca 0A2C     		cmp	r4, #10
 159 00cc 2BD1     		bne	.L13
 174:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 175:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set Address NAK error */
 176:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
 160              		.loc 1 176 0
 161 00ce 794B     		ldr	r3, .L26+28
 162 00d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 7


 163 00d2 42F0A002 		orr	r2, r2, #160
 164 00d6 1A70     		strb	r2, [r3]
 177:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_ERR_ADDR_NAK);
 178:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         
 179:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 165              		.loc 1 179 0
 166 00d8 754B     		ldr	r3, .L26+24
 167 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 168 00dc 13F0020F 		tst	r3, #2
 169 00e0 14D0     		beq	.L14
 180:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 181:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT | 
 182:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                             I2C_1_GET_MSTAT_CMPLT);
 170              		.loc 1 182 0
 171 00e2 6E4B     		ldr	r3, .L26+4
 172 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 181:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT | 
 173              		.loc 1 181 0
 174 00e6 13F0080F 		tst	r3, #8
 175 00ea 01D0     		beq	.L24
 176 00ec 0921     		movs	r1, #9
 177 00ee 00E0     		b	.L15
 178              	.L24:
 179 00f0 0A21     		movs	r1, #10
 180              	.L15:
 181:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT | 
 181              		.loc 1 181 0 is_stmt 0 discriminator 3
 182 00f2 704B     		ldr	r3, .L26+28
 183 00f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 184 00f6 0A43     		orrs	r2, r2, r1
 185 00f8 1A70     		strb	r2, [r3]
 183:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 184:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect RESTART */
 186              		.loc 1 184 0 is_stmt 1 discriminator 3
 187 00fa 6022     		movs	r2, #96
 188 00fc 674B     		ldr	r3, .L26+4
 189 00fe 1A70     		strb	r2, [r3]
 185:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DisableInt();
 190              		.loc 1 185 0 discriminator 3
 191 0100 4FF40042 		mov	r2, #32768
 192 0104 6C4B     		ldr	r3, .L26+32
 193 0106 1A60     		str	r2, [r3]
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 194              		.loc 1 123 0 discriminator 3
 195 0108 2C46     		mov	r4, r5
 196 010a A4E0     		b	.L3
 197              	.L14:
 186:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 187:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else  /* Do normal Stop */
 188:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 189:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it */
 198              		.loc 1 189 0
 199 010c 6B4B     		ldr	r3, .L26+36
 200 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 201 0110 42F01002 		orr	r2, r2, #16
 202 0114 1A70     		strb	r2, [r3]
 190:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_GENERATE_STOP;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 8


 203              		.loc 1 190 0
 204 0116 1022     		movs	r2, #16
 205 0118 0333     		adds	r3, r3, #3
 206 011a 1A70     		strb	r2, [r3]
 207 011c 0422     		movs	r2, #4
 208 011e 023B     		subs	r3, r3, #2
 209 0120 1A70     		strb	r2, [r3]
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 210              		.loc 1 123 0
 211 0122 2C46     		mov	r4, r5
 212 0124 97E0     		b	.L3
 213              	.L13:
 191:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 192:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 193:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else
 194:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 195:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Address phase is not set for some reason: error */
 196:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         #if(I2C_1_TIMEOUT_ENABLED)
 197:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Exit from interrupt to take a chance for timeout timer handle this c
 198:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DisableInt();
 199:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ClearPendingInt();
 200:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         #else
 201:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Block execution flow: unexpected condition */
 202:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             CYASSERT(0u != 0u);
 214              		.loc 1 202 0 discriminator 1
 215 0126 0020     		movs	r0, #0
 216 0128 FFF7FEFF 		bl	CyHalt
 217              	.LVL2:
 123:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear STOP bit history on addres
 218              		.loc 1 123 0 discriminator 1
 219 012c 2C46     		mov	r4, r5
 220 012e 92E0     		b	.L3
 221              	.LVL3:
 222              	.L7:
 203:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         #endif /* (I2C_1_TIMEOUT_ENABLED) */
 204:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 205:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     break;
 206:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 207:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 case I2C_1_SM_MSTR_WR_DATA:
 208:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 209:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 223              		.loc 1 209 0
 224 0130 14F0020F 		tst	r4, #2
 225 0134 37D1     		bne	.L16
 210:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 211:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Check if end of buffer */
 212:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_mstrWrBufIndex  < I2C_1_mstrWrBufSize)
 226              		.loc 1 212 0
 227 0136 5D4B     		ldr	r3, .L26+20
 228 0138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 229 013a 594B     		ldr	r3, .L26+8
 230 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231 013e D2B2     		uxtb	r2, r2
 232 0140 9A42     		cmp	r2, r3
 233 0142 10D2     		bcs	.L17
 213:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 214:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG =
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 9


 215:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                      I2C_1_mstrWrBufPtr[I2C_1_mstrWrBufIndex];
 234              		.loc 1 215 0
 235 0144 594B     		ldr	r3, .L26+20
 236 0146 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 237 0148 D2B2     		uxtb	r2, r2
 238 014a 5649     		ldr	r1, .L26+12
 239 014c 0968     		ldr	r1, [r1]
 240 014e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 241 0150 C9B2     		uxtb	r1, r1
 214:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG =
 242              		.loc 1 214 0
 243 0152 554A     		ldr	r2, .L26+16
 244 0154 1170     		strb	r1, [r2]
 216:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_TRANSMIT_DATA;
 245              		.loc 1 216 0
 246 0156 0421     		movs	r1, #4
 247 0158 013A     		subs	r2, r2, #1
 248 015a 1170     		strb	r1, [r2]
 217:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrWrBufIndex++;
 249              		.loc 1 217 0
 250 015c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 251 015e 0132     		adds	r2, r2, #1
 252 0160 D2B2     		uxtb	r2, r2
 253 0162 1A70     		strb	r2, [r3]
 254 0164 77E0     		b	.L3
 255              	.L17:
 218:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 219:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* End of buffer: complete writing */
 220:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 256              		.loc 1 220 0
 257 0166 524B     		ldr	r3, .L26+24
 258 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259 016a 13F0020F 		tst	r3, #2
 260 016e 0CD0     		beq	.L18
 221:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 222:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set WRITE complete and Master HALTED */
 223:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 261              		.loc 1 223 0
 262 0170 504B     		ldr	r3, .L26+28
 263 0172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 264 0174 42F00A02 		orr	r2, r2, #10
 265 0178 1A70     		strb	r2, [r3]
 224:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                             I2C_1_MSTAT_WR_CMPLT);
 225:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 226:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect RESTART */
 266              		.loc 1 226 0
 267 017a 6022     		movs	r2, #96
 268 017c 474B     		ldr	r3, .L26+4
 269 017e 1A70     		strb	r2, [r3]
 227:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DisableInt();
 270              		.loc 1 227 0
 271 0180 4FF40042 		mov	r2, #32768
 272 0184 4C4B     		ldr	r3, .L26+32
 273 0186 1A60     		str	r2, [r3]
 274 0188 65E0     		b	.L3
 275              	.L18:
 228:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 10


 229:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else  /* Do normal STOP */
 230:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 231:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_Workaround();          /* Workaround: empty function */
 276              		.loc 1 231 0
 277 018a FFF7FEFF 		bl	I2C_1_Workaround
 278              	.LVL4:
 232:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it *
 279              		.loc 1 232 0
 280 018e 4B4B     		ldr	r3, .L26+36
 281 0190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 282 0192 42F01002 		orr	r2, r2, #16
 283 0196 1A70     		strb	r2, [r3]
 233:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_GENERATE_STOP;
 284              		.loc 1 233 0
 285 0198 1022     		movs	r2, #16
 286 019a 0333     		adds	r3, r3, #3
 287 019c 1A70     		strb	r2, [r3]
 288 019e 0422     		movs	r2, #4
 289 01a0 023B     		subs	r3, r3, #2
 290 01a2 1A70     		strb	r2, [r3]
 291 01a4 57E0     		b	.L3
 292              	.L16:
 234:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 235:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 236:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Last byte NAKed: end writing */
 237:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 293              		.loc 1 237 0
 294 01a6 424B     		ldr	r3, .L26+24
 295 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296 01aa 13F0020F 		tst	r3, #2
 297 01ae 0CD0     		beq	.L19
 238:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 239:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set WRITE complete, SHORT transfer and Master HALTED */
 240:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER       |
 298              		.loc 1 240 0
 299 01b0 404B     		ldr	r3, .L26+28
 300 01b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 301 01b4 42F09A02 		orr	r2, r2, #154
 302 01b8 1A70     		strb	r2, [r3]
 241:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_ERR_SHORT_XFER |
 242:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_XFER_HALT      |
 243:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_WR_CMPLT);
 244:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 245:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect RESTART */
 303              		.loc 1 245 0
 304 01ba 6022     		movs	r2, #96
 305 01bc 374B     		ldr	r3, .L26+4
 306 01be 1A70     		strb	r2, [r3]
 246:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 307              		.loc 1 246 0
 308 01c0 4FF40042 		mov	r2, #32768
 309 01c4 3C4B     		ldr	r3, .L26+32
 310 01c6 1A60     		str	r2, [r3]
 311 01c8 45E0     		b	.L3
 312              	.L19:
 247:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 248:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal STOP */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 11


 249:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 250:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 313              		.loc 1 250 0
 314 01ca 3C4B     		ldr	r3, .L26+36
 315 01cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 316 01ce 42F01002 		orr	r2, r2, #16
 317 01d2 1A70     		strb	r2, [r3]
 251:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 318              		.loc 1 251 0
 319 01d4 1022     		movs	r2, #16
 320 01d6 0333     		adds	r3, r3, #3
 321 01d8 1A70     		strb	r2, [r3]
 322 01da 0422     		movs	r2, #4
 323 01dc 023B     		subs	r3, r3, #2
 324 01de 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 253:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set SHORT and ERR transfer */
 254:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_SHORT_XFER |
 325              		.loc 1 254 0
 326 01e0 344B     		ldr	r3, .L26+28
 327 01e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 328 01e4 42F09002 		orr	r2, r2, #144
 329 01e8 1A70     		strb	r2, [r3]
 330 01ea 34E0     		b	.L3
 331              	.L8:
 255:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_ERR_XFER);
 256:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 257:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     
 258:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     break;
 259:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 260:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 case I2C_1_SM_MSTR_RD_DATA:
 261:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 262:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrRdBufPtr[I2C_1_mstrRdBufIndex] = I2C_1_DATA_REG;
 332              		.loc 1 262 0
 333 01ec 344B     		ldr	r3, .L26+40
 334 01ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 335 01f0 D2B2     		uxtb	r2, r2
 336 01f2 3449     		ldr	r1, .L26+44
 337 01f4 0968     		ldr	r1, [r1]
 338 01f6 2C48     		ldr	r0, .L26+16
 339 01f8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 340 01fa C0B2     		uxtb	r0, r0
 341 01fc 8854     		strb	r0, [r1, r2]
 263:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrRdBufIndex++;
 342              		.loc 1 263 0
 343 01fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 344 0200 0132     		adds	r2, r2, #1
 345 0202 D2B2     		uxtb	r2, r2
 346 0204 1A70     		strb	r2, [r3]
 264:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 265:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Check if end of buffer */
 266:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_mstrRdBufIndex < I2C_1_mstrRdBufSize)
 347              		.loc 1 266 0
 348 0206 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 349 0208 2F4B     		ldr	r3, .L26+48
 350 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 020c D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 12


 352 020e 9A42     		cmp	r2, r3
 353 0210 03D2     		bcs	.L20
 267:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 268:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_RECEIVE;       /* ACK and receive byte */
 354              		.loc 1 268 0
 355 0212 1022     		movs	r2, #16
 356 0214 204B     		ldr	r3, .L26
 357 0216 1A70     		strb	r2, [r3]
 358 0218 1DE0     		b	.L3
 359              	.L20:
 269:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 270:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* End of buffer: complete reading */
 271:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 360              		.loc 1 271 0
 361 021a 254B     		ldr	r3, .L26+24
 362 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 021e 13F0020F 		tst	r3, #2
 364 0222 0CD0     		beq	.L21
 272:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {                        
 273:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set READ complete and Master HALTED */
 274:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 365              		.loc 1 274 0
 366 0224 234B     		ldr	r3, .L26+28
 367 0226 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 368 0228 42F00902 		orr	r2, r2, #9
 369 022c 1A70     		strb	r2, [r3]
 275:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_RD_CMPLT);
 276:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         
 277:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect RESTART */
 370              		.loc 1 277 0
 371 022e 6022     		movs	r2, #96
 372 0230 1A4B     		ldr	r3, .L26+4
 373 0232 1A70     		strb	r2, [r3]
 278:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 374              		.loc 1 278 0
 375 0234 4FF40042 		mov	r2, #32768
 376 0238 1F4B     		ldr	r3, .L26+32
 377 023a 1A60     		str	r2, [r3]
 378 023c 0BE0     		b	.L3
 379              	.L21:
 279:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 280:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else
 281:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 282:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;
 380              		.loc 1 282 0
 381 023e 1F4B     		ldr	r3, .L26+36
 382 0240 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 383 0242 42F01002 		orr	r2, r2, #16
 384 0246 1A70     		strb	r2, [r3]
 283:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_NAK_AND_RECEIVE;       /* NACK and TRY to generate STOP */
 385              		.loc 1 283 0
 386 0248 0022     		movs	r2, #0
 387 024a 0133     		adds	r3, r3, #1
 388 024c 1A70     		strb	r2, [r3]
 389 024e 02E0     		b	.L3
 390              	.L4:
 284:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 13


 285:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     break;
 286:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 287:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 default: /* This is an invalid state and should not occur */
 288:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 289:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #if(I2C_1_TIMEOUT_ENABLED)
 290:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 291:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 292:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ClearPendingInt();
 293:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #else
 294:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Block execution flow: unexpected condition */
 295:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         CYASSERT(0u != 0u);
 391              		.loc 1 295 0 discriminator 1
 392 0250 0020     		movs	r0, #0
 393 0252 FFF7FEFF 		bl	CyHalt
 394              	.LVL5:
 395              	.L3:
 296:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* (I2C_1_TIMEOUT_ENABLED) */
 297:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 298:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     break;
 299:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 300:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 301:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 302:.\Generated_Source\PSoC5/I2C_1_INT.c ****             /* Catches the Stop: end of transaction */
 303:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_STOP_STS(tmpCsr))
 396              		.loc 1 303 0
 397 0256 14F0200F 		tst	r4, #32
 398 025a 1CD0     		beq	.L1
 304:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 305:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrStatus |= I2C_1_GET_MSTAT_CMPLT;
 399              		.loc 1 305 0
 400 025c 0F4B     		ldr	r3, .L26+4
 401 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0260 13F0080F 		tst	r3, #8
 403 0264 01D0     		beq	.L25
 404 0266 0122     		movs	r2, #1
 405 0268 00E0     		b	.L23
 406              	.L25:
 407 026a 0222     		movs	r2, #2
 408              	.L23:
 409              		.loc 1 305 0 is_stmt 0 discriminator 3
 410 026c 114B     		ldr	r3, .L26+28
 411 026e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 412 0270 0A43     		orrs	r2, r2, r1
 413 0272 1A70     		strb	r2, [r3]
 306:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 307:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DISABLE_INT_ON_STOP;
 414              		.loc 1 307 0 is_stmt 1 discriminator 3
 415 0274 114B     		ldr	r3, .L26+36
 416 0276 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 417 0278 02F0EF02 		and	r2, r2, #239
 418 027c 1A70     		strb	r2, [r3]
 308:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_IDLE;
 419              		.loc 1 308 0 discriminator 3
 420 027e 1022     		movs	r2, #16
 421 0280 064B     		ldr	r3, .L26+4
 422 0282 1A70     		strb	r2, [r3]
 423 0284 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 14


 424              	.LVL6:
 425              	.L2:
 309:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 310:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #endif /* (I2C_1_MODE_MASTER_ENABLED) */
 311:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
 312:.\Generated_Source\PSoC5/I2C_1_INT.c ****     else if(I2C_1_CHECK_SM_SLAVE)
 426              		.loc 1 312 0
 427 0286 054B     		ldr	r3, .L26+4
 428 0288 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 028a 13F0100F 		tst	r3, #16
 430 028e 02D1     		bne	.L1
 313:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
 314:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #if(I2C_1_MODE_SLAVE_ENABLED)
 315:.\Generated_Source\PSoC5/I2C_1_INT.c ****             
 316:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if((I2C_1_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
 317:.\Generated_Source\PSoC5/I2C_1_INT.c ****                (I2C_1_CHECK_BYTE_COMPLETE(tmpCsr) && I2C_1_CHECK_ADDRESS_STS(tmpCsr)))
 318:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 319:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Catch end of master write transcation: use interrupt on Stop */
 320:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* The STOP bit history on address phase does not have correct state */
 321:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_SM_SL_WR_DATA == I2C_1_state)
 322:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 323:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DISABLE_INT_ON_STOP;
 324:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 325:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_WR_BUSY);
 326:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_WR_CMPLT);
 327:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 328:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_IDLE;
 329:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 330:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 331:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 332:.\Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
 333:.\Generated_Source\PSoC5/I2C_1_INT.c ****             {
 334:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* The address only issued after Start or ReStart: so check address
 335:.\Generated_Source\PSoC5/I2C_1_INT.c ****                    to catch this events:
 336:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     FF : sets Addr phase with byte_complete interrupt trigger.
 337:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     UDB: sets Addr phase immediately after Start or ReStart. */
 338:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
 339:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 340:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Check for software address detection */
 341:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #if(I2C_1_SW_ADRR_DECODE)
 342:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         tmp8 = I2C_1_GET_SLAVE_ADDR(I2C_1_DATA_REG);
 343:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 344:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(tmp8 == I2C_1_slAddress)   /* Check for address match */
 345:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 346:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
 347:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 348:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* Place code to prepare read buffer here                  */
 349:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* `#START I2C_1_SW_PREPARE_READ_BUF_interrupt` */
 350:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 351:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* `#END` */
 352:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 353:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* Prepare next opeation to read, get data and place in data regist
 354:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 355:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 {
 356:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     /* Load first data byte from array */
 357:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 358:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_ACK_AND_TRANSMIT;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 15


 359:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_slRdBufIndex++;
 360:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 361:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 362:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 }
 363:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 else    /* Overflow: provide 0xFF on the bus */
 364:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 {
 365:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 366:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_ACK_AND_TRANSMIT;
 367:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 368:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                     I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 369:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                                    I2C_1_SSTAT_RD_ERR_OVFL);
 370:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 }
 371:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 372:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_state = I2C_1_SM_SL_RD_DATA;
 373:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 374:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             else  /* Write transaction: receive 1st byte */
 375:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 376:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_ACK_AND_RECEIVE;
 377:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_state = I2C_1_SM_SL_WR_DATA;
 378:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 379:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 380:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_ENABLE_INT_ON_STOP;
 381:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 382:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }    
 383:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else
 384:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 385:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /*     Place code to compare for additional address here    */
 386:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* `#START I2C_1_SW_ADDR_COMPARE_interruptStart` */
 387:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 388:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* `#END` */
 389:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             
 390:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_NAK_AND_RECEIVE;   /* NACK address */
 391:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 392:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Place code to end of condition for NACK generation here */
 393:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* `#START I2C_1_SW_ADDR_COMPARE_interruptEnd`  */
 394:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 395:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* `#END` */
 396:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 397:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         
 398:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #else /* (I2C_1_HW_ADRR_DECODE) */
 399:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         
 400:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
 401:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 402:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Place code to prepare read buffer here                  */
 403:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* `#START I2C_1_HW_PREPARE_READ_BUF_interrupt` */
 404:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 405:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* `#END` */
 406:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 407:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Prepare next opeation to read, get data and place in data register *
 408:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 409:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 410:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 /* Load first data byte from array */
 411:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 412:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_ACK_AND_TRANSMIT;
 413:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_slRdBufIndex++;
 414:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 415:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 16


 416:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 417:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             else    /* Overflow: provide 0xFF on the bus */
 418:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             {
 419:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 420:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_ACK_AND_TRANSMIT;
 421:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 422:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                 I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 423:.\Generated_Source\PSoC5/I2C_1_INT.c ****                                                                I2C_1_SSTAT_RD_ERR_OVFL);
 424:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             }
 425:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 426:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_SL_RD_DATA;
 427:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 428:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else  /* Write transaction: receive 1st byte */
 429:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 430:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_RECEIVE;
 431:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_SL_WR_DATA;
 432:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 433:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 434:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ENABLE_INT_ON_STOP;
 435:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 436:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         
 437:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* (I2C_1_SW_ADRR_DECODE) */
 438:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 439:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Data states */
 440:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Data master writes into slave */
 441:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_state == I2C_1_SM_SL_WR_DATA)
 442:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 443:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slWrBufIndex < I2C_1_slWrBufSize)
 444:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 445:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         tmp8 = I2C_1_DATA_REG;
 446:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_RECEIVE;
 447:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slWrBufPtr[I2C_1_slWrBufIndex] = tmp8;
 448:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slWrBufIndex++;
 449:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 450:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* of array: complete write, send NACK */
 451:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 452:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_NAK_AND_RECEIVE;
 453:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 454:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_WR_ERR_OVFL;
 455:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 456:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 457:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Data master reads from slave */
 458:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_state == I2C_1_SM_SL_RD_DATA)
 459:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 460:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 461:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 462:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 463:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 464:.\Generated_Source\PSoC5/I2C_1_INT.c ****                              /* Get data from array */
 465:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 466:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_TRANSMIT_DATA;
 467:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slRdBufIndex++;
 468:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 469:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         else   /* Overflow: provide 0xFF on the bus */
 470:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 471:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 472:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_TRANSMIT_DATA;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 17


 473:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 474:.\Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus |= I2C_1_SSTAT_RD_ERR_OVFL;
 475:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 476:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 477:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Last byte was NACKed: read complete */
 478:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 479:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Only NACK appears on the bus */
 480:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 481:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_NAK_AND_TRANSMIT;
 482:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 483:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_RD_BUSY);
 484:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_RD_CMPLT);
 485:.\Generated_Source\PSoC5/I2C_1_INT.c **** 
 486:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_IDLE;
 487:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 488:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 489:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 490:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 491:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #if(I2C_1_TIMEOUT_ENABLED)
 492:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 493:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 494:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ClearPendingInt();
 495:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #else
 496:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Block execution flow: unexpected condition */
 497:.\Generated_Source\PSoC5/I2C_1_INT.c ****                         CYASSERT(0u != 0u);
 498:.\Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* (I2C_1_TIMEOUT_ENABLED) */
 499:.\Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 500:.\Generated_Source\PSoC5/I2C_1_INT.c ****             }
 501:.\Generated_Source\PSoC5/I2C_1_INT.c ****         #endif /* (I2C_1_MODE_SLAVE_ENABLED) */
 502:.\Generated_Source\PSoC5/I2C_1_INT.c ****     }
 503:.\Generated_Source\PSoC5/I2C_1_INT.c ****     else
 504:.\Generated_Source\PSoC5/I2C_1_INT.c ****     {
 505:.\Generated_Source\PSoC5/I2C_1_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 506:.\Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_IDLE;
 431              		.loc 1 506 0
 432 0290 1022     		movs	r2, #16
 433 0292 024B     		ldr	r3, .L26+4
 434 0294 1A70     		strb	r2, [r3]
 435              	.LVL7:
 436              	.L1:
 437 0296 38BD     		pop	{r3, r4, r5, pc}
 438              	.L27:
 439              		.align	2
 440              	.L26:
 441 0298 D7490040 		.word	1073760727
 442 029c 00000000 		.word	I2C_1_state
 443 02a0 00000000 		.word	I2C_1_mstrWrBufSize
 444 02a4 00000000 		.word	I2C_1_mstrWrBufPtr
 445 02a8 D8490040 		.word	1073760728
 446 02ac 00000000 		.word	I2C_1_mstrWrBufIndex
 447 02b0 00000000 		.word	I2C_1_mstrControl
 448 02b4 00000000 		.word	I2C_1_mstrStatus
 449 02b8 80E100E0 		.word	-536813184
 450 02bc D6490040 		.word	1073760726
 451 02c0 00000000 		.word	I2C_1_mstrRdBufIndex
 452 02c4 00000000 		.word	I2C_1_mstrRdBufPtr
 453 02c8 00000000 		.word	I2C_1_mstrRdBufSize
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 18


 454              		.cfi_endproc
 455              	.LFE0:
 456              		.size	I2C_1_ISR, .-I2C_1_ISR
 457              		.text
 458              	.Letext0:
 459              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 460              		.file 3 ".\\Generated_Source\\PSoC5\\I2C_1_PVT.h"
 461              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 462              		.file 5 ".\\Generated_Source\\PSoC5\\I2C_1.h"
 463              		.section	.debug_info,"",%progbits
 464              	.Ldebug_info0:
 465 0000 8D010000 		.4byte	0x18d
 466 0004 0400     		.2byte	0x4
 467 0006 00000000 		.4byte	.Ldebug_abbrev0
 468 000a 04       		.byte	0x4
 469 000b 01       		.uleb128 0x1
 470 000c 5F010000 		.4byte	.LASF26
 471 0010 01       		.byte	0x1
 472 0011 E1000000 		.4byte	.LASF27
 473 0015 73000000 		.4byte	.LASF28
 474 0019 00000000 		.4byte	.Ldebug_ranges0+0
 475 001d 00000000 		.4byte	0
 476 0021 00000000 		.4byte	.Ldebug_line0
 477 0025 02       		.uleb128 0x2
 478 0026 01       		.byte	0x1
 479 0027 06       		.byte	0x6
 480 0028 32020000 		.4byte	.LASF0
 481 002c 02       		.uleb128 0x2
 482 002d 01       		.byte	0x1
 483 002e 08       		.byte	0x8
 484 002f AF000000 		.4byte	.LASF1
 485 0033 02       		.uleb128 0x2
 486 0034 02       		.byte	0x2
 487 0035 05       		.byte	0x5
 488 0036 0A020000 		.4byte	.LASF2
 489 003a 02       		.uleb128 0x2
 490 003b 02       		.byte	0x2
 491 003c 07       		.byte	0x7
 492 003d 35000000 		.4byte	.LASF3
 493 0041 02       		.uleb128 0x2
 494 0042 04       		.byte	0x4
 495 0043 05       		.byte	0x5
 496 0044 29020000 		.4byte	.LASF4
 497 0048 02       		.uleb128 0x2
 498 0049 04       		.byte	0x4
 499 004a 07       		.byte	0x7
 500 004b C2000000 		.4byte	.LASF5
 501 004f 02       		.uleb128 0x2
 502 0050 08       		.byte	0x8
 503 0051 05       		.byte	0x5
 504 0052 E4010000 		.4byte	.LASF6
 505 0056 02       		.uleb128 0x2
 506 0057 08       		.byte	0x8
 507 0058 07       		.byte	0x7
 508 0059 30010000 		.4byte	.LASF7
 509 005d 03       		.uleb128 0x3
 510 005e 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 19


 511 005f 05       		.byte	0x5
 512 0060 696E7400 		.ascii	"int\000"
 513 0064 02       		.uleb128 0x2
 514 0065 04       		.byte	0x4
 515 0066 07       		.byte	0x7
 516 0067 23010000 		.4byte	.LASF8
 517 006b 04       		.uleb128 0x4
 518 006c D4000000 		.4byte	.LASF9
 519 0070 02       		.byte	0x2
 520 0071 B4       		.byte	0xb4
 521 0072 2C000000 		.4byte	0x2c
 522 0076 04       		.uleb128 0x4
 523 0077 10010000 		.4byte	.LASF10
 524 007b 02       		.byte	0x2
 525 007c B6       		.byte	0xb6
 526 007d 48000000 		.4byte	0x48
 527 0081 02       		.uleb128 0x2
 528 0082 04       		.byte	0x4
 529 0083 04       		.byte	0x4
 530 0084 5C000000 		.4byte	.LASF11
 531 0088 02       		.uleb128 0x2
 532 0089 08       		.byte	0x8
 533 008a 04       		.byte	0x4
 534 008b DA000000 		.4byte	.LASF12
 535 008f 02       		.uleb128 0x2
 536 0090 01       		.byte	0x1
 537 0091 08       		.byte	0x8
 538 0092 F2010000 		.4byte	.LASF13
 539 0096 05       		.uleb128 0x5
 540 0097 BD000000 		.4byte	.LASF14
 541 009b 02       		.byte	0x2
 542 009c 5E01     		.2byte	0x15e
 543 009e A2000000 		.4byte	0xa2
 544 00a2 06       		.uleb128 0x6
 545 00a3 6B000000 		.4byte	0x6b
 546 00a7 05       		.uleb128 0x5
 547 00a8 07000000 		.4byte	.LASF15
 548 00ac 02       		.byte	0x2
 549 00ad 6001     		.2byte	0x160
 550 00af B3000000 		.4byte	0xb3
 551 00b3 06       		.uleb128 0x6
 552 00b4 76000000 		.4byte	0x76
 553 00b8 02       		.uleb128 0x2
 554 00b9 04       		.byte	0x4
 555 00ba 07       		.byte	0x7
 556 00bb DB010000 		.4byte	.LASF16
 557 00bf 07       		.uleb128 0x7
 558 00c0 06010000 		.4byte	.LASF29
 559 00c4 01       		.byte	0x1
 560 00c5 2E       		.byte	0x2e
 561 00c6 00000000 		.4byte	.LFB0
 562 00ca CC020000 		.4byte	.LFE0-.LFB0
 563 00ce 01       		.uleb128 0x1
 564 00cf 9C       		.byte	0x9c
 565 00d0 0F010000 		.4byte	0x10f
 566 00d4 08       		.uleb128 0x8
 567 00d5 00000000 		.4byte	.LASF30
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 20


 568 00d9 01       		.byte	0x1
 569 00da 34       		.byte	0x34
 570 00db 6B000000 		.4byte	0x6b
 571 00df 00000000 		.4byte	.LLST0
 572 00e3 09       		.uleb128 0x9
 573 00e4 2C010000 		.4byte	.LVL2
 574 00e8 78010000 		.4byte	0x178
 575 00ec F6000000 		.4byte	0xf6
 576 00f0 0A       		.uleb128 0xa
 577 00f1 01       		.uleb128 0x1
 578 00f2 50       		.byte	0x50
 579 00f3 01       		.uleb128 0x1
 580 00f4 30       		.byte	0x30
 581 00f5 00       		.byte	0
 582 00f6 0B       		.uleb128 0xb
 583 00f7 8E010000 		.4byte	.LVL4
 584 00fb 89010000 		.4byte	0x189
 585 00ff 0C       		.uleb128 0xc
 586 0100 56020000 		.4byte	.LVL5
 587 0104 78010000 		.4byte	0x178
 588 0108 0A       		.uleb128 0xa
 589 0109 01       		.uleb128 0x1
 590 010a 50       		.byte	0x50
 591 010b 01       		.uleb128 0x1
 592 010c 30       		.byte	0x30
 593 010d 00       		.byte	0
 594 010e 00       		.byte	0
 595 010f 0D       		.uleb128 0xd
 596 0110 17010000 		.4byte	.LASF17
 597 0114 03       		.byte	0x3
 598 0115 23       		.byte	0x23
 599 0116 A2000000 		.4byte	0xa2
 600 011a 0D       		.uleb128 0xd
 601 011b 47010000 		.4byte	.LASF18
 602 011f 03       		.byte	0x3
 603 0120 27       		.byte	0x27
 604 0121 A2000000 		.4byte	0xa2
 605 0125 0D       		.uleb128 0xd
 606 0126 52020000 		.4byte	.LASF19
 607 012a 03       		.byte	0x3
 608 012b 28       		.byte	0x28
 609 012c A2000000 		.4byte	0xa2
 610 0130 0D       		.uleb128 0xd
 611 0131 F7010000 		.4byte	.LASF20
 612 0135 03       		.byte	0x3
 613 0136 2B       		.byte	0x2b
 614 0137 3B010000 		.4byte	0x13b
 615 013b 0E       		.uleb128 0xe
 616 013c 04       		.byte	0x4
 617 013d A2000000 		.4byte	0xa2
 618 0141 0D       		.uleb128 0xd
 619 0142 3E020000 		.4byte	.LASF21
 620 0146 03       		.byte	0x3
 621 0147 2C       		.byte	0x2c
 622 0148 A2000000 		.4byte	0xa2
 623 014c 0D       		.uleb128 0xd
 624 014d 0D000000 		.4byte	.LASF22
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 21


 625 0151 03       		.byte	0x3
 626 0152 2D       		.byte	0x2d
 627 0153 A2000000 		.4byte	0xa2
 628 0157 0D       		.uleb128 0xd
 629 0158 22000000 		.4byte	.LASF23
 630 015c 03       		.byte	0x3
 631 015d 30       		.byte	0x30
 632 015e 3B010000 		.4byte	0x13b
 633 0162 0D       		.uleb128 0xd
 634 0163 48000000 		.4byte	.LASF24
 635 0167 03       		.byte	0x3
 636 0168 31       		.byte	0x31
 637 0169 A2000000 		.4byte	0xa2
 638 016d 0D       		.uleb128 0xd
 639 016e 14020000 		.4byte	.LASF25
 640 0172 03       		.byte	0x3
 641 0173 32       		.byte	0x32
 642 0174 A2000000 		.4byte	0xa2
 643 0178 0F       		.uleb128 0xf
 644 0179 58010000 		.4byte	.LASF31
 645 017d 04       		.byte	0x4
 646 017e 80       		.byte	0x80
 647 017f 89010000 		.4byte	0x189
 648 0183 10       		.uleb128 0x10
 649 0184 6B000000 		.4byte	0x6b
 650 0188 00       		.byte	0
 651 0189 11       		.uleb128 0x11
 652 018a 62000000 		.4byte	.LASF32
 653 018e 05       		.byte	0x5
 654 018f D3       		.byte	0xd3
 655 0190 00       		.byte	0
 656              		.section	.debug_abbrev,"",%progbits
 657              	.Ldebug_abbrev0:
 658 0000 01       		.uleb128 0x1
 659 0001 11       		.uleb128 0x11
 660 0002 01       		.byte	0x1
 661 0003 25       		.uleb128 0x25
 662 0004 0E       		.uleb128 0xe
 663 0005 13       		.uleb128 0x13
 664 0006 0B       		.uleb128 0xb
 665 0007 03       		.uleb128 0x3
 666 0008 0E       		.uleb128 0xe
 667 0009 1B       		.uleb128 0x1b
 668 000a 0E       		.uleb128 0xe
 669 000b 55       		.uleb128 0x55
 670 000c 17       		.uleb128 0x17
 671 000d 11       		.uleb128 0x11
 672 000e 01       		.uleb128 0x1
 673 000f 10       		.uleb128 0x10
 674 0010 17       		.uleb128 0x17
 675 0011 00       		.byte	0
 676 0012 00       		.byte	0
 677 0013 02       		.uleb128 0x2
 678 0014 24       		.uleb128 0x24
 679 0015 00       		.byte	0
 680 0016 0B       		.uleb128 0xb
 681 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 22


 682 0018 3E       		.uleb128 0x3e
 683 0019 0B       		.uleb128 0xb
 684 001a 03       		.uleb128 0x3
 685 001b 0E       		.uleb128 0xe
 686 001c 00       		.byte	0
 687 001d 00       		.byte	0
 688 001e 03       		.uleb128 0x3
 689 001f 24       		.uleb128 0x24
 690 0020 00       		.byte	0
 691 0021 0B       		.uleb128 0xb
 692 0022 0B       		.uleb128 0xb
 693 0023 3E       		.uleb128 0x3e
 694 0024 0B       		.uleb128 0xb
 695 0025 03       		.uleb128 0x3
 696 0026 08       		.uleb128 0x8
 697 0027 00       		.byte	0
 698 0028 00       		.byte	0
 699 0029 04       		.uleb128 0x4
 700 002a 16       		.uleb128 0x16
 701 002b 00       		.byte	0
 702 002c 03       		.uleb128 0x3
 703 002d 0E       		.uleb128 0xe
 704 002e 3A       		.uleb128 0x3a
 705 002f 0B       		.uleb128 0xb
 706 0030 3B       		.uleb128 0x3b
 707 0031 0B       		.uleb128 0xb
 708 0032 49       		.uleb128 0x49
 709 0033 13       		.uleb128 0x13
 710 0034 00       		.byte	0
 711 0035 00       		.byte	0
 712 0036 05       		.uleb128 0x5
 713 0037 16       		.uleb128 0x16
 714 0038 00       		.byte	0
 715 0039 03       		.uleb128 0x3
 716 003a 0E       		.uleb128 0xe
 717 003b 3A       		.uleb128 0x3a
 718 003c 0B       		.uleb128 0xb
 719 003d 3B       		.uleb128 0x3b
 720 003e 05       		.uleb128 0x5
 721 003f 49       		.uleb128 0x49
 722 0040 13       		.uleb128 0x13
 723 0041 00       		.byte	0
 724 0042 00       		.byte	0
 725 0043 06       		.uleb128 0x6
 726 0044 35       		.uleb128 0x35
 727 0045 00       		.byte	0
 728 0046 49       		.uleb128 0x49
 729 0047 13       		.uleb128 0x13
 730 0048 00       		.byte	0
 731 0049 00       		.byte	0
 732 004a 07       		.uleb128 0x7
 733 004b 2E       		.uleb128 0x2e
 734 004c 01       		.byte	0x1
 735 004d 3F       		.uleb128 0x3f
 736 004e 19       		.uleb128 0x19
 737 004f 03       		.uleb128 0x3
 738 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 23


 739 0051 3A       		.uleb128 0x3a
 740 0052 0B       		.uleb128 0xb
 741 0053 3B       		.uleb128 0x3b
 742 0054 0B       		.uleb128 0xb
 743 0055 27       		.uleb128 0x27
 744 0056 19       		.uleb128 0x19
 745 0057 11       		.uleb128 0x11
 746 0058 01       		.uleb128 0x1
 747 0059 12       		.uleb128 0x12
 748 005a 06       		.uleb128 0x6
 749 005b 40       		.uleb128 0x40
 750 005c 18       		.uleb128 0x18
 751 005d 9742     		.uleb128 0x2117
 752 005f 19       		.uleb128 0x19
 753 0060 01       		.uleb128 0x1
 754 0061 13       		.uleb128 0x13
 755 0062 00       		.byte	0
 756 0063 00       		.byte	0
 757 0064 08       		.uleb128 0x8
 758 0065 34       		.uleb128 0x34
 759 0066 00       		.byte	0
 760 0067 03       		.uleb128 0x3
 761 0068 0E       		.uleb128 0xe
 762 0069 3A       		.uleb128 0x3a
 763 006a 0B       		.uleb128 0xb
 764 006b 3B       		.uleb128 0x3b
 765 006c 0B       		.uleb128 0xb
 766 006d 49       		.uleb128 0x49
 767 006e 13       		.uleb128 0x13
 768 006f 02       		.uleb128 0x2
 769 0070 17       		.uleb128 0x17
 770 0071 00       		.byte	0
 771 0072 00       		.byte	0
 772 0073 09       		.uleb128 0x9
 773 0074 898201   		.uleb128 0x4109
 774 0077 01       		.byte	0x1
 775 0078 11       		.uleb128 0x11
 776 0079 01       		.uleb128 0x1
 777 007a 31       		.uleb128 0x31
 778 007b 13       		.uleb128 0x13
 779 007c 01       		.uleb128 0x1
 780 007d 13       		.uleb128 0x13
 781 007e 00       		.byte	0
 782 007f 00       		.byte	0
 783 0080 0A       		.uleb128 0xa
 784 0081 8A8201   		.uleb128 0x410a
 785 0084 00       		.byte	0
 786 0085 02       		.uleb128 0x2
 787 0086 18       		.uleb128 0x18
 788 0087 9142     		.uleb128 0x2111
 789 0089 18       		.uleb128 0x18
 790 008a 00       		.byte	0
 791 008b 00       		.byte	0
 792 008c 0B       		.uleb128 0xb
 793 008d 898201   		.uleb128 0x4109
 794 0090 00       		.byte	0
 795 0091 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 24


 796 0092 01       		.uleb128 0x1
 797 0093 31       		.uleb128 0x31
 798 0094 13       		.uleb128 0x13
 799 0095 00       		.byte	0
 800 0096 00       		.byte	0
 801 0097 0C       		.uleb128 0xc
 802 0098 898201   		.uleb128 0x4109
 803 009b 01       		.byte	0x1
 804 009c 11       		.uleb128 0x11
 805 009d 01       		.uleb128 0x1
 806 009e 31       		.uleb128 0x31
 807 009f 13       		.uleb128 0x13
 808 00a0 00       		.byte	0
 809 00a1 00       		.byte	0
 810 00a2 0D       		.uleb128 0xd
 811 00a3 34       		.uleb128 0x34
 812 00a4 00       		.byte	0
 813 00a5 03       		.uleb128 0x3
 814 00a6 0E       		.uleb128 0xe
 815 00a7 3A       		.uleb128 0x3a
 816 00a8 0B       		.uleb128 0xb
 817 00a9 3B       		.uleb128 0x3b
 818 00aa 0B       		.uleb128 0xb
 819 00ab 49       		.uleb128 0x49
 820 00ac 13       		.uleb128 0x13
 821 00ad 3F       		.uleb128 0x3f
 822 00ae 19       		.uleb128 0x19
 823 00af 3C       		.uleb128 0x3c
 824 00b0 19       		.uleb128 0x19
 825 00b1 00       		.byte	0
 826 00b2 00       		.byte	0
 827 00b3 0E       		.uleb128 0xe
 828 00b4 0F       		.uleb128 0xf
 829 00b5 00       		.byte	0
 830 00b6 0B       		.uleb128 0xb
 831 00b7 0B       		.uleb128 0xb
 832 00b8 49       		.uleb128 0x49
 833 00b9 13       		.uleb128 0x13
 834 00ba 00       		.byte	0
 835 00bb 00       		.byte	0
 836 00bc 0F       		.uleb128 0xf
 837 00bd 2E       		.uleb128 0x2e
 838 00be 01       		.byte	0x1
 839 00bf 3F       		.uleb128 0x3f
 840 00c0 19       		.uleb128 0x19
 841 00c1 03       		.uleb128 0x3
 842 00c2 0E       		.uleb128 0xe
 843 00c3 3A       		.uleb128 0x3a
 844 00c4 0B       		.uleb128 0xb
 845 00c5 3B       		.uleb128 0x3b
 846 00c6 0B       		.uleb128 0xb
 847 00c7 27       		.uleb128 0x27
 848 00c8 19       		.uleb128 0x19
 849 00c9 3C       		.uleb128 0x3c
 850 00ca 19       		.uleb128 0x19
 851 00cb 01       		.uleb128 0x1
 852 00cc 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 25


 853 00cd 00       		.byte	0
 854 00ce 00       		.byte	0
 855 00cf 10       		.uleb128 0x10
 856 00d0 05       		.uleb128 0x5
 857 00d1 00       		.byte	0
 858 00d2 49       		.uleb128 0x49
 859 00d3 13       		.uleb128 0x13
 860 00d4 00       		.byte	0
 861 00d5 00       		.byte	0
 862 00d6 11       		.uleb128 0x11
 863 00d7 2E       		.uleb128 0x2e
 864 00d8 00       		.byte	0
 865 00d9 3F       		.uleb128 0x3f
 866 00da 19       		.uleb128 0x19
 867 00db 03       		.uleb128 0x3
 868 00dc 0E       		.uleb128 0xe
 869 00dd 3A       		.uleb128 0x3a
 870 00de 0B       		.uleb128 0xb
 871 00df 3B       		.uleb128 0x3b
 872 00e0 0B       		.uleb128 0xb
 873 00e1 27       		.uleb128 0x27
 874 00e2 19       		.uleb128 0x19
 875 00e3 3C       		.uleb128 0x3c
 876 00e4 19       		.uleb128 0x19
 877 00e5 00       		.byte	0
 878 00e6 00       		.byte	0
 879 00e7 00       		.byte	0
 880              		.section	.debug_loc,"",%progbits
 881              	.Ldebug_loc0:
 882              	.LLST0:
 883 0000 08000000 		.4byte	.LVL0
 884 0004 3C000000 		.4byte	.LVL1
 885 0008 0100     		.2byte	0x1
 886 000a 54       		.byte	0x54
 887 000b 3C000000 		.4byte	.LVL1
 888 000f 30010000 		.4byte	.LVL3
 889 0013 0100     		.2byte	0x1
 890 0015 55       		.byte	0x55
 891 0016 30010000 		.4byte	.LVL3
 892 001a 96020000 		.4byte	.LVL7
 893 001e 0100     		.2byte	0x1
 894 0020 54       		.byte	0x54
 895 0021 00000000 		.4byte	0
 896 0025 00000000 		.4byte	0
 897              		.section	.debug_aranges,"",%progbits
 898 0000 1C000000 		.4byte	0x1c
 899 0004 0200     		.2byte	0x2
 900 0006 00000000 		.4byte	.Ldebug_info0
 901 000a 04       		.byte	0x4
 902 000b 00       		.byte	0
 903 000c 0000     		.2byte	0
 904 000e 0000     		.2byte	0
 905 0010 00000000 		.4byte	.LFB0
 906 0014 CC020000 		.4byte	.LFE0-.LFB0
 907 0018 00000000 		.4byte	0
 908 001c 00000000 		.4byte	0
 909              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 26


 910              	.Ldebug_ranges0:
 911 0000 00000000 		.4byte	.LFB0
 912 0004 CC020000 		.4byte	.LFE0
 913 0008 00000000 		.4byte	0
 914 000c 00000000 		.4byte	0
 915              		.section	.debug_line,"",%progbits
 916              	.Ldebug_line0:
 917 0000 26010000 		.section	.debug_str,"MS",%progbits,1
 917      02006D00 
 917      00000201 
 917      FB0E0D00 
 917      01010101 
 918              	.LASF30:
 919 0000 746D7043 		.ascii	"tmpCsr\000"
 919      737200
 920              	.LASF15:
 921 0007 72656733 		.ascii	"reg32\000"
 921      3200
 922              	.LASF22:
 923 000d 4932435F 		.ascii	"I2C_1_mstrRdBufIndex\000"
 923      315F6D73 
 923      74725264 
 923      42756649 
 923      6E646578 
 924              	.LASF23:
 925 0022 4932435F 		.ascii	"I2C_1_mstrWrBufPtr\000"
 925      315F6D73 
 925      74725772 
 925      42756650 
 925      747200
 926              	.LASF3:
 927 0035 73686F72 		.ascii	"short unsigned int\000"
 927      7420756E 
 927      7369676E 
 927      65642069 
 927      6E7400
 928              	.LASF24:
 929 0048 4932435F 		.ascii	"I2C_1_mstrWrBufSize\000"
 929      315F6D73 
 929      74725772 
 929      42756653 
 929      697A6500 
 930              	.LASF11:
 931 005c 666C6F61 		.ascii	"float\000"
 931      7400
 932              	.LASF32:
 933 0062 4932435F 		.ascii	"I2C_1_Workaround\000"
 933      315F576F 
 933      726B6172 
 933      6F756E64 
 933      00
 934              	.LASF28:
 935 0073 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\NMUX\\Unificada\\U"
 935      73657273 
 935      5C526563 
 935      65706369 
 935      6F6E5C44 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 27


 936 00a0 6E696669 		.ascii	"nificada.cydsn\000"
 936      63616461 
 936      2E637964 
 936      736E00
 937              	.LASF1:
 938 00af 756E7369 		.ascii	"unsigned char\000"
 938      676E6564 
 938      20636861 
 938      7200
 939              	.LASF14:
 940 00bd 72656738 		.ascii	"reg8\000"
 940      00
 941              	.LASF5:
 942 00c2 6C6F6E67 		.ascii	"long unsigned int\000"
 942      20756E73 
 942      69676E65 
 942      6420696E 
 942      7400
 943              	.LASF9:
 944 00d4 75696E74 		.ascii	"uint8\000"
 944      3800
 945              	.LASF12:
 946 00da 646F7562 		.ascii	"double\000"
 946      6C6500
 947              	.LASF27:
 948 00e1 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\I2C_1_INT.c\000"
 948      6E657261 
 948      7465645F 
 948      536F7572 
 948      63655C50 
 949              	.LASF29:
 950 0106 4932435F 		.ascii	"I2C_1_ISR\000"
 950      315F4953 
 950      5200
 951              	.LASF10:
 952 0110 75696E74 		.ascii	"uint32\000"
 952      333200
 953              	.LASF17:
 954 0117 4932435F 		.ascii	"I2C_1_state\000"
 954      315F7374 
 954      61746500 
 955              	.LASF8:
 956 0123 756E7369 		.ascii	"unsigned int\000"
 956      676E6564 
 956      20696E74 
 956      00
 957              	.LASF7:
 958 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 958      206C6F6E 
 958      6720756E 
 958      7369676E 
 958      65642069 
 959              	.LASF18:
 960 0147 4932435F 		.ascii	"I2C_1_mstrStatus\000"
 960      315F6D73 
 960      74725374 
 960      61747573 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 28


 960      00
 961              	.LASF31:
 962 0158 43794861 		.ascii	"CyHalt\000"
 962      6C7400
 963              	.LASF26:
 964 015f 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 964      4320342E 
 964      382E3420 
 964      32303134 
 964      30353236 
 965 0192 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 965      20726576 
 965      6973696F 
 965      6E203231 
 965      31333538 
 966 01c5 67202D66 		.ascii	"g -ffunction-sections\000"
 966      66756E63 
 966      74696F6E 
 966      2D736563 
 966      74696F6E 
 967              	.LASF16:
 968 01db 73697A65 		.ascii	"sizetype\000"
 968      74797065 
 968      00
 969              	.LASF6:
 970 01e4 6C6F6E67 		.ascii	"long long int\000"
 970      206C6F6E 
 970      6720696E 
 970      7400
 971              	.LASF13:
 972 01f2 63686172 		.ascii	"char\000"
 972      00
 973              	.LASF20:
 974 01f7 4932435F 		.ascii	"I2C_1_mstrRdBufPtr\000"
 974      315F6D73 
 974      74725264 
 974      42756650 
 974      747200
 975              	.LASF2:
 976 020a 73686F72 		.ascii	"short int\000"
 976      7420696E 
 976      7400
 977              	.LASF25:
 978 0214 4932435F 		.ascii	"I2C_1_mstrWrBufIndex\000"
 978      315F6D73 
 978      74725772 
 978      42756649 
 978      6E646578 
 979              	.LASF4:
 980 0229 6C6F6E67 		.ascii	"long int\000"
 980      20696E74 
 980      00
 981              	.LASF0:
 982 0232 7369676E 		.ascii	"signed char\000"
 982      65642063 
 982      68617200 
 983              	.LASF21:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccD3tjRH.s 			page 29


 984 023e 4932435F 		.ascii	"I2C_1_mstrRdBufSize\000"
 984      315F6D73 
 984      74725264 
 984      42756653 
 984      697A6500 
 985              	.LASF19:
 986 0252 4932435F 		.ascii	"I2C_1_mstrControl\000"
 986      315F6D73 
 986      7472436F 
 986      6E74726F 
 986      6C00
 987              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
