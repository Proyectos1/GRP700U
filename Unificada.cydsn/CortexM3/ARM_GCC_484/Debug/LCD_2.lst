ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LCD_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.LCD_2_Init,"ax",%progbits
  19              		.align	2
  20              		.global	LCD_2_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	LCD_2_Init, %function
  24              	LCD_2_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\LCD_2.c"
   1:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/LCD_2.c **** * File Name: LCD_2.c
   3:.\Generated_Source\PSoC5/LCD_2.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/LCD_2.c **** *
   5:.\Generated_Source\PSoC5/LCD_2.c **** * Description:
   6:.\Generated_Source\PSoC5/LCD_2.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/LCD_2.c **** *
   8:.\Generated_Source\PSoC5/LCD_2.c **** * Note:
   9:.\Generated_Source\PSoC5/LCD_2.c **** *
  10:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/LCD_2.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/LCD_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/LCD_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/LCD_2.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/LCD_2.c **** 
  17:.\Generated_Source\PSoC5/LCD_2.c **** #include "LCD_2.h"
  18:.\Generated_Source\PSoC5/LCD_2.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/LCD_2.c **** #if(LCD_2_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC5/LCD_2.c ****     #include "LCD_2_IntClock.h"
  21:.\Generated_Source\PSoC5/LCD_2.c **** #endif /* End LCD_2_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC5/LCD_2.c **** 
  23:.\Generated_Source\PSoC5/LCD_2.c **** 
  24:.\Generated_Source\PSoC5/LCD_2.c **** /***************************************
  25:.\Generated_Source\PSoC5/LCD_2.c **** * Global data allocation
  26:.\Generated_Source\PSoC5/LCD_2.c **** ***************************************/
  27:.\Generated_Source\PSoC5/LCD_2.c **** 
  28:.\Generated_Source\PSoC5/LCD_2.c **** uint8 LCD_2_initVar = 0u;
  29:.\Generated_Source\PSoC5/LCD_2.c **** #if( LCD_2_TX_ENABLED && (LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH))
  30:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_txBuffer[LCD_2_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_txBufferRead = 0u;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 2


  32:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/LCD_2.c **** #endif /* End LCD_2_TX_ENABLED */
  34:.\Generated_Source\PSoC5/LCD_2.c **** #if( ( LCD_2_RX_ENABLED || LCD_2_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC5/LCD_2.c ****      (LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_rxBuffer[LCD_2_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC5/LCD_2.c ****     volatile uint8 LCD_2_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC5/LCD_2.c ****     #if (LCD_2_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC5/LCD_2.c ****         volatile uint8 LCD_2_rxAddressMode = LCD_2_RXADDRESSMODE;
  43:.\Generated_Source\PSoC5/LCD_2.c ****         volatile uint8 LCD_2_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC5/LCD_2.c **** #endif /* End LCD_2_RX_ENABLED */
  46:.\Generated_Source\PSoC5/LCD_2.c **** 
  47:.\Generated_Source\PSoC5/LCD_2.c **** 
  48:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/LCD_2.c **** * Function Name: LCD_2_Start
  50:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/LCD_2.c **** *
  52:.\Generated_Source\PSoC5/LCD_2.c **** * Summary:
  53:.\Generated_Source\PSoC5/LCD_2.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC5/LCD_2.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC5/LCD_2.c **** *
  56:.\Generated_Source\PSoC5/LCD_2.c **** * Parameters:
  57:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
  58:.\Generated_Source\PSoC5/LCD_2.c **** *
  59:.\Generated_Source\PSoC5/LCD_2.c **** * Return:
  60:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
  61:.\Generated_Source\PSoC5/LCD_2.c **** *
  62:.\Generated_Source\PSoC5/LCD_2.c **** * Global variables:
  63:.\Generated_Source\PSoC5/LCD_2.c **** *  The LCD_2_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC5/LCD_2.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC5/LCD_2.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC5/LCD_2.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC5/LCD_2.c **** *  to the LCD_2_Start() routine.
  68:.\Generated_Source\PSoC5/LCD_2.c **** *
  69:.\Generated_Source\PSoC5/LCD_2.c **** * Reentrant:
  70:.\Generated_Source\PSoC5/LCD_2.c **** *  No.
  71:.\Generated_Source\PSoC5/LCD_2.c **** *
  72:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC5/LCD_2.c **** void LCD_2_Start(void) 
  74:.\Generated_Source\PSoC5/LCD_2.c **** {
  75:.\Generated_Source\PSoC5/LCD_2.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC5/LCD_2.c ****     if(LCD_2_initVar == 0u)
  77:.\Generated_Source\PSoC5/LCD_2.c ****     {
  78:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_Init();
  79:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_initVar = 1u;
  80:.\Generated_Source\PSoC5/LCD_2.c ****     }
  81:.\Generated_Source\PSoC5/LCD_2.c ****     LCD_2_Enable();
  82:.\Generated_Source\PSoC5/LCD_2.c **** }
  83:.\Generated_Source\PSoC5/LCD_2.c **** 
  84:.\Generated_Source\PSoC5/LCD_2.c **** 
  85:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/LCD_2.c **** * Function Name: LCD_2_Init
  87:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
  88:.\Generated_Source\PSoC5/LCD_2.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 3


  89:.\Generated_Source\PSoC5/LCD_2.c **** * Summary:
  90:.\Generated_Source\PSoC5/LCD_2.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC5/LCD_2.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC5/LCD_2.c **** *  LCD_2_Start().
  93:.\Generated_Source\PSoC5/LCD_2.c **** *
  94:.\Generated_Source\PSoC5/LCD_2.c **** * Parameters:
  95:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
  96:.\Generated_Source\PSoC5/LCD_2.c **** *
  97:.\Generated_Source\PSoC5/LCD_2.c **** * Return:
  98:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
  99:.\Generated_Source\PSoC5/LCD_2.c **** *
 100:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/LCD_2.c **** void LCD_2_Init(void) 
 102:.\Generated_Source\PSoC5/LCD_2.c **** {
  27              		.loc 1 102 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 103:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_RX_ENABLED || LCD_2_HD_ENABLED)
 104:.\Generated_Source\PSoC5/LCD_2.c **** 
 105:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RX_INTERRUPT_ENABLED && (LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 106:.\Generated_Source\PSoC5/LCD_2.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC5/LCD_2.c ****             (void)CyIntSetVector(LCD_2_RX_VECT_NUM, &LCD_2_RXISR);
  35              		.loc 1 107 0
  36 0002 0220     		movs	r0, #2
  37 0004 0B49     		ldr	r1, .L2
  38 0006 FFF7FEFF 		bl	CyIntSetVector
  39              	.LVL0:
 108:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntSetPriority(LCD_2_RX_VECT_NUM, LCD_2_RX_PRIOR_NUM);
  40              		.loc 1 108 0
  41 000a 0220     		movs	r0, #2
  42 000c 0721     		movs	r1, #7
  43 000e FFF7FEFF 		bl	CyIntSetPriority
  44              	.LVL1:
 109:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC5/LCD_2.c **** 
 111:.\Generated_Source\PSoC5/LCD_2.c ****         #if (LCD_2_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_SetRxAddressMode(LCD_2_RXAddressMode);
 113:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_SetRxAddress1(LCD_2_RXHWADDRESS1);
 114:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_SetRxAddress2(LCD_2_RXHWADDRESS2);
 115:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC5/LCD_2.c **** 
 117:.\Generated_Source\PSoC5/LCD_2.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXBITCTR_PERIOD_REG = LCD_2_RXBITCTR_INIT;
  45              		.loc 1 118 0
  46 0012 7222     		movs	r2, #114
  47 0014 084B     		ldr	r3, .L2+4
  48 0016 1A70     		strb	r2, [r3]
 119:.\Generated_Source\PSoC5/LCD_2.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXSTATUS_MASK_REG  = LCD_2_INIT_RX_INTERRUPTS_MASK;
  49              		.loc 1 120 0
  50 0018 2022     		movs	r2, #32
  51 001a 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 4


  52 001c 1A70     		strb	r2, [r3]
 121:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_RX_ENABLED || LCD_2_HD_ENABLED*/
 122:.\Generated_Source\PSoC5/LCD_2.c **** 
 123:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_TX_ENABLED)
 124:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TX_INTERRUPT_ENABLED && (LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 125:.\Generated_Source\PSoC5/LCD_2.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC5/LCD_2.c ****             (void)CyIntSetVector(LCD_2_TX_VECT_NUM, &LCD_2_TXISR);
 127:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntSetPriority(LCD_2_TX_VECT_NUM, LCD_2_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC5/LCD_2.c **** 
 130:.\Generated_Source\PSoC5/LCD_2.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXBITCLKGEN_CTR_REG = LCD_2_BIT_CENTER;
  53              		.loc 1 132 0
  54 001e 0722     		movs	r2, #7
  55 0020 643B     		subs	r3, r3, #100
  56 0022 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXBITCLKTX_COMPLETE_REG = (LCD_2_NUMBER_OF_DATA_BITS +
  57              		.loc 1 133 0
  58 0024 4822     		movs	r2, #72
  59 0026 1033     		adds	r3, r3, #16
  60 0028 1A70     		strb	r2, [r3]
 134:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_NUMBER_OF_START_BIT) * LCD_2_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC5/LCD_2.c ****         #else
 136:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXBITCTR_PERIOD_REG = ((LCD_2_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_NUMBER_OF_START_BIT) * LCD_2_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC5/LCD_2.c **** 
 140:.\Generated_Source\PSoC5/LCD_2.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TX_INTERRUPT_ENABLED && (LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 142:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXSTATUS_MASK_REG = LCD_2_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC5/LCD_2.c ****         #else
 144:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXSTATUS_MASK_REG = LCD_2_INIT_TX_INTERRUPTS_MASK;
  61              		.loc 1 144 0
  62 002a 0022     		movs	r2, #0
  63 002c B33B     		subs	r3, r3, #179
  64 002e 1A70     		strb	r2, [r3]
  65 0030 08BD     		pop	{r3, pc}
  66              	.L3:
  67 0032 00BF     		.align	2
  68              	.L2:
  69 0034 00000000 		.word	LCD_2_RXISR
  70 0038 88650040 		.word	1073767816
  71              		.cfi_endproc
  72              	.LFE1:
  73              		.size	LCD_2_Init, .-LCD_2_Init
  74              		.section	.text.LCD_2_Enable,"ax",%progbits
  75              		.align	2
  76              		.global	LCD_2_Enable
  77              		.thumb
  78              		.thumb_func
  79              		.type	LCD_2_Enable, %function
  80              	LCD_2_Enable:
  81              	.LFB2:
 145:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /*End LCD_2_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC5/LCD_2.c **** 
 147:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_TX_ENABLED */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 5


 148:.\Generated_Source\PSoC5/LCD_2.c **** 
 149:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_WriteControlRegister( \
 151:.\Generated_Source\PSoC5/LCD_2.c ****             (LCD_2_ReadControlRegister() & (uint8)~LCD_2_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC5/LCD_2.c ****             (uint8)(LCD_2_PARITY_TYPE << LCD_2_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC5/LCD_2.c **** }
 155:.\Generated_Source\PSoC5/LCD_2.c **** 
 156:.\Generated_Source\PSoC5/LCD_2.c **** 
 157:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC5/LCD_2.c **** * Function Name: LCD_2_Enable
 159:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
 160:.\Generated_Source\PSoC5/LCD_2.c **** *
 161:.\Generated_Source\PSoC5/LCD_2.c **** * Summary:
 162:.\Generated_Source\PSoC5/LCD_2.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC5/LCD_2.c **** *
 164:.\Generated_Source\PSoC5/LCD_2.c **** * Parameters:
 165:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
 166:.\Generated_Source\PSoC5/LCD_2.c **** *
 167:.\Generated_Source\PSoC5/LCD_2.c **** * Return:
 168:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
 169:.\Generated_Source\PSoC5/LCD_2.c **** *
 170:.\Generated_Source\PSoC5/LCD_2.c **** * Global Variables:
 171:.\Generated_Source\PSoC5/LCD_2.c **** *  LCD_2_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC5/LCD_2.c **** *
 173:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC5/LCD_2.c **** void LCD_2_Enable(void) 
 175:.\Generated_Source\PSoC5/LCD_2.c **** {
  82              		.loc 1 175 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
 176:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC5/LCD_2.c ****     enableInterrupts = CyEnterCriticalSection();
  90              		.loc 1 177 0
  91 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  92              	.LVL2:
  93 0006 0446     		mov	r4, r0
  94              	.LVL3:
 178:.\Generated_Source\PSoC5/LCD_2.c **** 
 179:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_RX_ENABLED || LCD_2_HD_ENABLED)
 180:.\Generated_Source\PSoC5/LCD_2.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXBITCTR_CONTROL_REG |= LCD_2_CNTR_ENABLE;
  95              		.loc 1 181 0
  96 0008 0B4B     		ldr	r3, .L5
  97 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 000c 42F02002 		orr	r2, r2, #32
  99 0010 1A70     		strb	r2, [r3]
 182:.\Generated_Source\PSoC5/LCD_2.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXSTATUS_ACTL_REG  |= LCD_2_INT_ENABLE;
 100              		.loc 1 183 0
 101 0012 0333     		adds	r3, r3, #3
 102 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 6


 103 0016 42F01002 		orr	r2, r2, #16
 104 001a 1A70     		strb	r2, [r3]
 184:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RX_INTERRUPT_ENABLED && (LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 185:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntEnable(LCD_2_RX_VECT_NUM);
 105              		.loc 1 185 0
 106 001c 0422     		movs	r2, #4
 107 001e 074B     		ldr	r3, .L5+4
 108 0020 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC5/LCD_2.c ****             #if (LCD_2_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_RX_ENABLED || LCD_2_HD_ENABLED*/
 191:.\Generated_Source\PSoC5/LCD_2.c **** 
 192:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_TX_ENABLED)
 193:.\Generated_Source\PSoC5/LCD_2.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC5/LCD_2.c ****         #if(!LCD_2_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXBITCTR_CONTROL_REG |= LCD_2_CNTR_ENABLE;
 196:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC5/LCD_2.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_TXSTATUS_ACTL_REG |= LCD_2_INT_ENABLE;
 109              		.loc 1 198 0
 110 0022 074B     		ldr	r3, .L5+8
 111 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 112 0026 42F01002 		orr	r2, r2, #16
 113 002a 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TX_INTERRUPT_ENABLED && (LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 200:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntEnable(LCD_2_TX_VECT_NUM);
 201:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC5/LCD_2.c ****      #endif /* End LCD_2_TX_ENABLED */
 203:.\Generated_Source\PSoC5/LCD_2.c **** 
 204:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC5/LCD_2.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_IntClock_Start();
 114              		.loc 1 206 0
 115 002c FFF7FEFF 		bl	LCD_2_IntClock_Start
 116              	.LVL4:
 207:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC5/LCD_2.c **** 
 209:.\Generated_Source\PSoC5/LCD_2.c ****     CyExitCriticalSection(enableInterrupts);
 117              		.loc 1 209 0
 118 0030 2046     		mov	r0, r4
 119 0032 FFF7FEFF 		bl	CyExitCriticalSection
 120              	.LVL5:
 121 0036 10BD     		pop	{r4, pc}
 122              	.LVL6:
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 0038 98650040 		.word	1073767832
 127 003c 00E100E0 		.word	-536813312
 128 0040 94640040 		.word	1073767572
 129              		.cfi_endproc
 130              	.LFE2:
 131              		.size	LCD_2_Enable, .-LCD_2_Enable
 132              		.section	.text.LCD_2_Start,"ax",%progbits
 133              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 7


 134              		.global	LCD_2_Start
 135              		.thumb
 136              		.thumb_func
 137              		.type	LCD_2_Start, %function
 138              	LCD_2_Start:
 139              	.LFB0:
  74:.\Generated_Source\PSoC5/LCD_2.c **** {
 140              		.loc 1 74 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
  76:.\Generated_Source\PSoC5/LCD_2.c ****     if(LCD_2_initVar == 0u)
 148              		.loc 1 76 0
 149 0002 054B     		ldr	r3, .L9
 150 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 151 0006 23B9     		cbnz	r3, .L8
  78:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_Init();
 152              		.loc 1 78 0
 153 0008 FFF7FEFF 		bl	LCD_2_Init
 154              	.LVL7:
  79:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_initVar = 1u;
 155              		.loc 1 79 0
 156 000c 0122     		movs	r2, #1
 157 000e 024B     		ldr	r3, .L9
 158 0010 1A70     		strb	r2, [r3]
 159              	.L8:
  81:.\Generated_Source\PSoC5/LCD_2.c ****     LCD_2_Enable();
 160              		.loc 1 81 0
 161 0012 FFF7FEFF 		bl	LCD_2_Enable
 162              	.LVL8:
 163 0016 08BD     		pop	{r3, pc}
 164              	.L10:
 165              		.align	2
 166              	.L9:
 167 0018 00000000 		.word	.LANCHOR0
 168              		.cfi_endproc
 169              	.LFE0:
 170              		.size	LCD_2_Start, .-LCD_2_Start
 171              		.section	.text.LCD_2_ReadControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	LCD_2_ReadControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	LCD_2_ReadControlRegister, %function
 177              	LCD_2_ReadControlRegister:
 178              	.LFB4:
 210:.\Generated_Source\PSoC5/LCD_2.c **** }
 211:.\Generated_Source\PSoC5/LCD_2.c **** 
 212:.\Generated_Source\PSoC5/LCD_2.c **** 
 213:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC5/LCD_2.c **** * Function Name: LCD_2_Stop
 215:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
 216:.\Generated_Source\PSoC5/LCD_2.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 8


 217:.\Generated_Source\PSoC5/LCD_2.c **** * Summary:
 218:.\Generated_Source\PSoC5/LCD_2.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC5/LCD_2.c **** *
 220:.\Generated_Source\PSoC5/LCD_2.c **** * Parameters:
 221:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
 222:.\Generated_Source\PSoC5/LCD_2.c **** *
 223:.\Generated_Source\PSoC5/LCD_2.c **** * Return:
 224:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
 225:.\Generated_Source\PSoC5/LCD_2.c **** *
 226:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/LCD_2.c **** void LCD_2_Stop(void) 
 228:.\Generated_Source\PSoC5/LCD_2.c **** {
 229:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC5/LCD_2.c ****     enableInterrupts = CyEnterCriticalSection();
 231:.\Generated_Source\PSoC5/LCD_2.c **** 
 232:.\Generated_Source\PSoC5/LCD_2.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_RX_ENABLED || LCD_2_HD_ENABLED)
 234:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXBITCTR_CONTROL_REG &= (uint8)~LCD_2_CNTR_ENABLE;
 235:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_RX_ENABLED */
 236:.\Generated_Source\PSoC5/LCD_2.c **** 
 237:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_TX_ENABLED)
 238:.\Generated_Source\PSoC5/LCD_2.c ****         #if(!LCD_2_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_TXBITCTR_CONTROL_REG &= (uint8)~LCD_2_CNTR_ENABLE;
 240:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* LCD_2_TX_ENABLED */
 242:.\Generated_Source\PSoC5/LCD_2.c **** 
 243:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC5/LCD_2.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_IntClock_Stop();
 246:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC5/LCD_2.c **** 
 248:.\Generated_Source\PSoC5/LCD_2.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_RX_ENABLED || LCD_2_HD_ENABLED)
 250:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXSTATUS_ACTL_REG  &= (uint8)~LCD_2_INT_ENABLE;
 251:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RX_INTERRUPT_ENABLED && (LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 252:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_DisableRxInt();
 253:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_RX_ENABLED */
 255:.\Generated_Source\PSoC5/LCD_2.c **** 
 256:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_TX_ENABLED)
 257:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_TXSTATUS_ACTL_REG &= (uint8)~LCD_2_INT_ENABLE;
 258:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TX_INTERRUPT_ENABLED && (LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH))
 259:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_DisableTxInt();
 260:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_TX_ENABLED */
 262:.\Generated_Source\PSoC5/LCD_2.c **** 
 263:.\Generated_Source\PSoC5/LCD_2.c ****     CyExitCriticalSection(enableInterrupts);
 264:.\Generated_Source\PSoC5/LCD_2.c **** }
 265:.\Generated_Source\PSoC5/LCD_2.c **** 
 266:.\Generated_Source\PSoC5/LCD_2.c **** 
 267:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC5/LCD_2.c **** * Function Name: LCD_2_ReadControlRegister
 269:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
 270:.\Generated_Source\PSoC5/LCD_2.c **** *
 271:.\Generated_Source\PSoC5/LCD_2.c **** * Summary:
 272:.\Generated_Source\PSoC5/LCD_2.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC5/LCD_2.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 9


 274:.\Generated_Source\PSoC5/LCD_2.c **** * Parameters:
 275:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
 276:.\Generated_Source\PSoC5/LCD_2.c **** *
 277:.\Generated_Source\PSoC5/LCD_2.c **** * Return:
 278:.\Generated_Source\PSoC5/LCD_2.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC5/LCD_2.c **** *
 280:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC5/LCD_2.c **** uint8 LCD_2_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC5/LCD_2.c **** {
 179              		.loc 1 282 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 283:.\Generated_Source\PSoC5/LCD_2.c ****     #if( LCD_2_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC5/LCD_2.c ****         return(0u);
 285:.\Generated_Source\PSoC5/LCD_2.c ****     #else
 286:.\Generated_Source\PSoC5/LCD_2.c ****         return(LCD_2_CONTROL_REG);
 287:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC5/LCD_2.c **** }
 184              		.loc 1 288 0
 185 0000 0020     		movs	r0, #0
 186 0002 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE4:
 189              		.size	LCD_2_ReadControlRegister, .-LCD_2_ReadControlRegister
 190              		.section	.text.LCD_2_WriteControlRegister,"ax",%progbits
 191              		.align	2
 192              		.global	LCD_2_WriteControlRegister
 193              		.thumb
 194              		.thumb_func
 195              		.type	LCD_2_WriteControlRegister, %function
 196              	LCD_2_WriteControlRegister:
 197              	.LFB5:
 289:.\Generated_Source\PSoC5/LCD_2.c **** 
 290:.\Generated_Source\PSoC5/LCD_2.c **** 
 291:.\Generated_Source\PSoC5/LCD_2.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC5/LCD_2.c **** * Function Name: LCD_2_WriteControlRegister
 293:.\Generated_Source\PSoC5/LCD_2.c **** ********************************************************************************
 294:.\Generated_Source\PSoC5/LCD_2.c **** *
 295:.\Generated_Source\PSoC5/LCD_2.c **** * Summary:
 296:.\Generated_Source\PSoC5/LCD_2.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC5/LCD_2.c **** *
 298:.\Generated_Source\PSoC5/LCD_2.c **** * Parameters:
 299:.\Generated_Source\PSoC5/LCD_2.c **** *  control:  control register value
 300:.\Generated_Source\PSoC5/LCD_2.c **** *
 301:.\Generated_Source\PSoC5/LCD_2.c **** * Return:
 302:.\Generated_Source\PSoC5/LCD_2.c **** *  None.
 303:.\Generated_Source\PSoC5/LCD_2.c **** *
 304:.\Generated_Source\PSoC5/LCD_2.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC5/LCD_2.c **** void  LCD_2_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC5/LCD_2.c **** {
 198              		.loc 1 306 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 10


 203              	.LVL9:
 204 0000 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE5:
 207              		.size	LCD_2_WriteControlRegister, .-LCD_2_WriteControlRegister
 208 0002 00BF     		.section	.text.LCD_2_EnableRxInt,"ax",%progbits
 209              		.align	2
 210              		.global	LCD_2_EnableRxInt
 211              		.thumb
 212              		.thumb_func
 213              		.type	LCD_2_EnableRxInt, %function
 214              	LCD_2_EnableRxInt:
 215              	.LFB6:
 307:.\Generated_Source\PSoC5/LCD_2.c ****     #if( LCD_2_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC5/LCD_2.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC5/LCD_2.c ****     #else
 310:.\Generated_Source\PSoC5/LCD_2.c ****        LCD_2_CONTROL_REG = control;
 311:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* End LCD_2_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC5/LCD_2.c **** }
 313:.\Generated_Source\PSoC5/LCD_2.c **** 
 314:.\Generated_Source\PSoC5/LCD_2.c **** 
 315:.\Generated_Source\PSoC5/LCD_2.c **** #if(LCD_2_RX_ENABLED || LCD_2_HD_ENABLED)
 316:.\Generated_Source\PSoC5/LCD_2.c **** 
 317:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC5/LCD_2.c **** 
 319:.\Generated_Source\PSoC5/LCD_2.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC5/LCD_2.c ****         * Function Name: LCD_2_EnableRxInt
 321:.\Generated_Source\PSoC5/LCD_2.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC5/LCD_2.c ****         *
 323:.\Generated_Source\PSoC5/LCD_2.c ****         * Summary:
 324:.\Generated_Source\PSoC5/LCD_2.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC5/LCD_2.c ****         *
 326:.\Generated_Source\PSoC5/LCD_2.c ****         * Parameters:
 327:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 328:.\Generated_Source\PSoC5/LCD_2.c ****         *
 329:.\Generated_Source\PSoC5/LCD_2.c ****         * Return:
 330:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 331:.\Generated_Source\PSoC5/LCD_2.c ****         *
 332:.\Generated_Source\PSoC5/LCD_2.c ****         * Theory:
 333:.\Generated_Source\PSoC5/LCD_2.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC5/LCD_2.c ****         *
 335:.\Generated_Source\PSoC5/LCD_2.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC5/LCD_2.c ****         void LCD_2_EnableRxInt(void) 
 337:.\Generated_Source\PSoC5/LCD_2.c ****         {
 216              		.loc 1 337 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 338:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntEnable(LCD_2_RX_VECT_NUM);
 221              		.loc 1 338 0
 222 0000 0422     		movs	r2, #4
 223 0002 014B     		ldr	r3, .L14
 224 0004 1A60     		str	r2, [r3]
 225 0006 7047     		bx	lr
 226              	.L15:
 227              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 11


 228              	.L14:
 229 0008 00E100E0 		.word	-536813312
 230              		.cfi_endproc
 231              	.LFE6:
 232              		.size	LCD_2_EnableRxInt, .-LCD_2_EnableRxInt
 233              		.section	.text.LCD_2_DisableRxInt,"ax",%progbits
 234              		.align	2
 235              		.global	LCD_2_DisableRxInt
 236              		.thumb
 237              		.thumb_func
 238              		.type	LCD_2_DisableRxInt, %function
 239              	LCD_2_DisableRxInt:
 240              	.LFB7:
 339:.\Generated_Source\PSoC5/LCD_2.c ****         }
 340:.\Generated_Source\PSoC5/LCD_2.c **** 
 341:.\Generated_Source\PSoC5/LCD_2.c **** 
 342:.\Generated_Source\PSoC5/LCD_2.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC5/LCD_2.c ****         * Function Name: LCD_2_DisableRxInt
 344:.\Generated_Source\PSoC5/LCD_2.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC5/LCD_2.c ****         *
 346:.\Generated_Source\PSoC5/LCD_2.c ****         * Summary:
 347:.\Generated_Source\PSoC5/LCD_2.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC5/LCD_2.c ****         *
 349:.\Generated_Source\PSoC5/LCD_2.c ****         * Parameters:
 350:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 351:.\Generated_Source\PSoC5/LCD_2.c ****         *
 352:.\Generated_Source\PSoC5/LCD_2.c ****         * Return:
 353:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 354:.\Generated_Source\PSoC5/LCD_2.c ****         *
 355:.\Generated_Source\PSoC5/LCD_2.c ****         * Theory:
 356:.\Generated_Source\PSoC5/LCD_2.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC5/LCD_2.c ****         *
 358:.\Generated_Source\PSoC5/LCD_2.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC5/LCD_2.c ****         void LCD_2_DisableRxInt(void) 
 360:.\Generated_Source\PSoC5/LCD_2.c ****         {
 241              		.loc 1 360 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 361:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntDisable(LCD_2_RX_VECT_NUM);
 246              		.loc 1 361 0
 247 0000 0422     		movs	r2, #4
 248 0002 014B     		ldr	r3, .L17
 249 0004 1A60     		str	r2, [r3]
 250 0006 7047     		bx	lr
 251              	.L18:
 252              		.align	2
 253              	.L17:
 254 0008 80E100E0 		.word	-536813184
 255              		.cfi_endproc
 256              	.LFE7:
 257              		.size	LCD_2_DisableRxInt, .-LCD_2_DisableRxInt
 258              		.section	.text.LCD_2_Stop,"ax",%progbits
 259              		.align	2
 260              		.global	LCD_2_Stop
 261              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 12


 262              		.thumb_func
 263              		.type	LCD_2_Stop, %function
 264              	LCD_2_Stop:
 265              	.LFB3:
 228:.\Generated_Source\PSoC5/LCD_2.c **** {
 266              		.loc 1 228 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 10B5     		push	{r4, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 4, -8
 273              		.cfi_offset 14, -4
 230:.\Generated_Source\PSoC5/LCD_2.c ****     enableInterrupts = CyEnterCriticalSection();
 274              		.loc 1 230 0
 275 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 276              	.LVL10:
 277 0006 0446     		mov	r4, r0
 278              	.LVL11:
 234:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXBITCTR_CONTROL_REG &= (uint8)~LCD_2_CNTR_ENABLE;
 279              		.loc 1 234 0
 280 0008 0B4B     		ldr	r3, .L20
 281 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 282 000c 02F0DF02 		and	r2, r2, #223
 283 0010 1A70     		strb	r2, [r3]
 245:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_IntClock_Stop();
 284              		.loc 1 245 0
 285 0012 FFF7FEFF 		bl	LCD_2_IntClock_Stop
 286              	.LVL12:
 250:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXSTATUS_ACTL_REG  &= (uint8)~LCD_2_INT_ENABLE;
 287              		.loc 1 250 0
 288 0016 094B     		ldr	r3, .L20+4
 289 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 290 001a 02F0EF02 		and	r2, r2, #239
 291 001e 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_DisableRxInt();
 292              		.loc 1 252 0
 293 0020 FFF7FEFF 		bl	LCD_2_DisableRxInt
 294              	.LVL13:
 257:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_TXSTATUS_ACTL_REG &= (uint8)~LCD_2_INT_ENABLE;
 295              		.loc 1 257 0
 296 0024 064B     		ldr	r3, .L20+8
 297 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 298 0028 02F0EF02 		and	r2, r2, #239
 299 002c 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/LCD_2.c ****     CyExitCriticalSection(enableInterrupts);
 300              		.loc 1 263 0
 301 002e 2046     		mov	r0, r4
 302 0030 FFF7FEFF 		bl	CyExitCriticalSection
 303              	.LVL14:
 304 0034 10BD     		pop	{r4, pc}
 305              	.LVL15:
 306              	.L21:
 307 0036 00BF     		.align	2
 308              	.L20:
 309 0038 98650040 		.word	1073767832
 310 003c 9B650040 		.word	1073767835
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 13


 311 0040 94640040 		.word	1073767572
 312              		.cfi_endproc
 313              	.LFE3:
 314              		.size	LCD_2_Stop, .-LCD_2_Stop
 315              		.section	.text.LCD_2_SetRxInterruptMode,"ax",%progbits
 316              		.align	2
 317              		.global	LCD_2_SetRxInterruptMode
 318              		.thumb
 319              		.thumb_func
 320              		.type	LCD_2_SetRxInterruptMode, %function
 321              	LCD_2_SetRxInterruptMode:
 322              	.LFB8:
 362:.\Generated_Source\PSoC5/LCD_2.c ****         }
 363:.\Generated_Source\PSoC5/LCD_2.c **** 
 364:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* LCD_2_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC5/LCD_2.c **** 
 366:.\Generated_Source\PSoC5/LCD_2.c **** 
 367:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SetRxInterruptMode
 369:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC5/LCD_2.c ****     *
 371:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 372:.\Generated_Source\PSoC5/LCD_2.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC5/LCD_2.c ****     *
 374:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 375:.\Generated_Source\PSoC5/LCD_2.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC5/LCD_2.c ****     *           the header file)
 377:.\Generated_Source\PSoC5/LCD_2.c ****     *
 378:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 379:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 380:.\Generated_Source\PSoC5/LCD_2.c ****     *
 381:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
 382:.\Generated_Source\PSoC5/LCD_2.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC5/LCD_2.c ****     *
 384:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC5/LCD_2.c ****     {
 323              		.loc 1 386 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL16:
 387:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXSTATUS_MASK_REG  = intSrc;
 329              		.loc 1 387 0
 330 0000 014B     		ldr	r3, .L23
 331 0002 1870     		strb	r0, [r3]
 332 0004 7047     		bx	lr
 333              	.L24:
 334 0006 00BF     		.align	2
 335              	.L23:
 336 0008 8B650040 		.word	1073767819
 337              		.cfi_endproc
 338              	.LFE8:
 339              		.size	LCD_2_SetRxInterruptMode, .-LCD_2_SetRxInterruptMode
 340              		.section	.text.LCD_2_ReadRxData,"ax",%progbits
 341              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 14


 342              		.global	LCD_2_ReadRxData
 343              		.thumb
 344              		.thumb_func
 345              		.type	LCD_2_ReadRxData, %function
 346              	LCD_2_ReadRxData:
 347              	.LFB9:
 388:.\Generated_Source\PSoC5/LCD_2.c ****     }
 389:.\Generated_Source\PSoC5/LCD_2.c **** 
 390:.\Generated_Source\PSoC5/LCD_2.c **** 
 391:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_ReadRxData
 393:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/LCD_2.c ****     *
 395:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 396:.\Generated_Source\PSoC5/LCD_2.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC5/LCD_2.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC5/LCD_2.c ****     *
 399:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 400:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 401:.\Generated_Source\PSoC5/LCD_2.c ****     *
 402:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 403:.\Generated_Source\PSoC5/LCD_2.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC5/LCD_2.c ****     *
 405:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 406:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC5/LCD_2.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC5/LCD_2.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC5/LCD_2.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC5/LCD_2.c ****     *
 414:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
 415:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
 416:.\Generated_Source\PSoC5/LCD_2.c ****     *
 417:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_ReadRxData(void) 
 419:.\Generated_Source\PSoC5/LCD_2.c ****     {
 348              		.loc 1 419 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 10B5     		push	{r4, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 420:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC5/LCD_2.c **** 
 422:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH)
 423:.\Generated_Source\PSoC5/LCD_2.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC5/LCD_2.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC5/LCD_2.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC5/LCD_2.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_DisableRxInt();
 356              		.loc 1 428 0
 357 0002 FFF7FEFF 		bl	LCD_2_DisableRxInt
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 15


 358              	.LVL17:
 429:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* LCD_2_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC5/LCD_2.c ****             loc_rxBufferRead = LCD_2_rxBufferRead;
 359              		.loc 1 430 0
 360 0006 124B     		ldr	r3, .L31
 361 0008 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 362 000a D2B2     		uxtb	r2, r2
 363              	.LVL18:
 431:.\Generated_Source\PSoC5/LCD_2.c ****             loc_rxBufferWrite = LCD_2_rxBufferWrite;
 364              		.loc 1 431 0
 365 000c 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 366 000e C9B2     		uxtb	r1, r1
 367              	.LVL19:
 432:.\Generated_Source\PSoC5/LCD_2.c **** 
 433:.\Generated_Source\PSoC5/LCD_2.c ****             if( (LCD_2_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 368              		.loc 1 433 0
 369 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 370 0012 13F0FF0F 		tst	r3, #255
 371 0016 01D1     		bne	.L26
 372              		.loc 1 433 0 is_stmt 0 discriminator 1
 373 0018 8A42     		cmp	r2, r1
 374 001a 11D0     		beq	.L27
 375              	.L26:
 434:.\Generated_Source\PSoC5/LCD_2.c ****             {
 435:.\Generated_Source\PSoC5/LCD_2.c ****                 rxData = LCD_2_rxBuffer[loc_rxBufferRead];
 376              		.loc 1 435 0 is_stmt 1
 377 001c 0D4B     		ldr	r3, .L31+4
 378 001e 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
 379 0020 E4B2     		uxtb	r4, r4
 380              	.LVL20:
 436:.\Generated_Source\PSoC5/LCD_2.c ****                 loc_rxBufferRead++;
 381              		.loc 1 436 0
 382 0022 0132     		adds	r2, r2, #1
 383              	.LVL21:
 384 0024 D2B2     		uxtb	r2, r2
 385              	.LVL22:
 437:.\Generated_Source\PSoC5/LCD_2.c **** 
 438:.\Generated_Source\PSoC5/LCD_2.c ****                 if(loc_rxBufferRead >= LCD_2_RXBUFFERSIZE)
 386              		.loc 1 438 0
 387 0026 132A     		cmp	r2, #19
 388 0028 00D9     		bls	.L28
 439:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 440:.\Generated_Source\PSoC5/LCD_2.c ****                     loc_rxBufferRead = 0u;
 389              		.loc 1 440 0
 390 002a 0022     		movs	r2, #0
 391              	.LVL23:
 392              	.L28:
 441:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 442:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_rxBufferRead = loc_rxBufferRead;
 393              		.loc 1 443 0
 394 002c 084B     		ldr	r3, .L31
 395 002e 5A70     		strb	r2, [r3, #1]
 444:.\Generated_Source\PSoC5/LCD_2.c **** 
 445:.\Generated_Source\PSoC5/LCD_2.c ****                 if(LCD_2_rxBufferLoopDetect != 0u )
 396              		.loc 1 445 0
 397 0030 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 16


 398 0032 13F0FF0F 		tst	r3, #255
 399 0036 06D0     		beq	.L29
 446:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 447:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_rxBufferLoopDetect = 0u;
 400              		.loc 1 447 0
 401 0038 0022     		movs	r2, #0
 402              	.LVL24:
 403 003a 054B     		ldr	r3, .L31
 404 003c DA70     		strb	r2, [r3, #3]
 405 003e 02E0     		b	.L29
 406              	.LVL25:
 407              	.L27:
 448:.\Generated_Source\PSoC5/LCD_2.c ****                     #if( (LCD_2_RX_INTERRUPT_ENABLED) && (LCD_2_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC5/LCD_2.c ****                          (LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC5/LCD_2.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC5/LCD_2.c ****                         #if( LCD_2_HD_ENABLED )
 452:.\Generated_Source\PSoC5/LCD_2.c ****                             if((LCD_2_CONTROL_REG & LCD_2_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC5/LCD_2.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC5/LCD_2.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC5/LCD_2.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC5/LCD_2.c ****                                 */
 457:.\Generated_Source\PSoC5/LCD_2.c ****                                 LCD_2_RXSTATUS_MASK_REG  |= LCD_2_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC5/LCD_2.c ****                             }
 459:.\Generated_Source\PSoC5/LCD_2.c ****                         #else
 460:.\Generated_Source\PSoC5/LCD_2.c ****                             LCD_2_RXSTATUS_MASK_REG  |= LCD_2_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC5/LCD_2.c ****                         #endif /* end LCD_2_HD_ENABLED */
 462:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* LCD_2_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 464:.\Generated_Source\PSoC5/LCD_2.c ****             }
 465:.\Generated_Source\PSoC5/LCD_2.c ****             else
 466:.\Generated_Source\PSoC5/LCD_2.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC5/LCD_2.c ****                 rxData = LCD_2_RXDATA_REG;
 408              		.loc 1 467 0
 409 0040 054B     		ldr	r3, .L31+8
 410 0042 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 411 0044 E4B2     		uxtb	r4, r4
 412              	.LVL26:
 413              	.L29:
 468:.\Generated_Source\PSoC5/LCD_2.c ****             }
 469:.\Generated_Source\PSoC5/LCD_2.c **** 
 470:.\Generated_Source\PSoC5/LCD_2.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_EnableRxInt();
 414              		.loc 1 472 0
 415 0046 FFF7FEFF 		bl	LCD_2_EnableRxInt
 416              	.LVL27:
 473:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC5/LCD_2.c **** 
 475:.\Generated_Source\PSoC5/LCD_2.c ****         #else /* LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 476:.\Generated_Source\PSoC5/LCD_2.c **** 
 477:.\Generated_Source\PSoC5/LCD_2.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC5/LCD_2.c ****             rxData = LCD_2_RXDATA_REG;
 479:.\Generated_Source\PSoC5/LCD_2.c **** 
 480:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 481:.\Generated_Source\PSoC5/LCD_2.c **** 
 482:.\Generated_Source\PSoC5/LCD_2.c ****         return(rxData);
 483:.\Generated_Source\PSoC5/LCD_2.c ****     }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 17


 417              		.loc 1 483 0
 418 004a 2046     		mov	r0, r4
 419 004c 10BD     		pop	{r4, pc}
 420              	.LVL28:
 421              	.L32:
 422 004e 00BF     		.align	2
 423              	.L31:
 424 0050 00000000 		.word	.LANCHOR0
 425 0054 00000000 		.word	LCD_2_rxBuffer
 426 0058 48650040 		.word	1073767752
 427              		.cfi_endproc
 428              	.LFE9:
 429              		.size	LCD_2_ReadRxData, .-LCD_2_ReadRxData
 430              		.section	.text.LCD_2_ReadRxStatus,"ax",%progbits
 431              		.align	2
 432              		.global	LCD_2_ReadRxStatus
 433              		.thumb
 434              		.thumb_func
 435              		.type	LCD_2_ReadRxStatus, %function
 436              	LCD_2_ReadRxStatus:
 437              	.LFB10:
 484:.\Generated_Source\PSoC5/LCD_2.c **** 
 485:.\Generated_Source\PSoC5/LCD_2.c **** 
 486:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_ReadRxStatus
 488:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC5/LCD_2.c ****     *
 490:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 491:.\Generated_Source\PSoC5/LCD_2.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC5/LCD_2.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC5/LCD_2.c ****     *
 494:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 495:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 496:.\Generated_Source\PSoC5/LCD_2.c ****     *
 497:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 498:.\Generated_Source\PSoC5/LCD_2.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC5/LCD_2.c ****     *
 500:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 501:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC5/LCD_2.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC5/LCD_2.c ****     *   LCD_2_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC5/LCD_2.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC5/LCD_2.c ****     *   LCD_2_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC5/LCD_2.c ****     *   bits.
 507:.\Generated_Source\PSoC5/LCD_2.c ****     *
 508:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC5/LCD_2.c ****     {
 438              		.loc 1 510 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 511:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 status;
 512:.\Generated_Source\PSoC5/LCD_2.c **** 
 513:.\Generated_Source\PSoC5/LCD_2.c ****         status = LCD_2_RXSTATUS_REG & LCD_2_RX_HW_MASK;
 443              		.loc 1 513 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 18


 444 0000 074B     		ldr	r3, .L35
 445 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 446 0004 00F07F00 		and	r0, r0, #127
 447              	.LVL29:
 514:.\Generated_Source\PSoC5/LCD_2.c **** 
 515:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH)
 516:.\Generated_Source\PSoC5/LCD_2.c ****             if( LCD_2_rxBufferOverflow != 0u )
 448              		.loc 1 516 0
 449 0008 064B     		ldr	r3, .L35+4
 450 000a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 451 000c 13F0FF0F 		tst	r3, #255
 452 0010 04D0     		beq	.L34
 517:.\Generated_Source\PSoC5/LCD_2.c ****             {
 518:.\Generated_Source\PSoC5/LCD_2.c ****                 status |= LCD_2_RX_STS_SOFT_BUFF_OVER;
 453              		.loc 1 518 0
 454 0012 40F08000 		orr	r0, r0, #128
 455              	.LVL30:
 519:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_rxBufferOverflow = 0u;
 456              		.loc 1 519 0
 457 0016 0022     		movs	r2, #0
 458 0018 024B     		ldr	r3, .L35+4
 459 001a 1A71     		strb	r2, [r3, #4]
 460              	.LVL31:
 461              	.L34:
 520:.\Generated_Source\PSoC5/LCD_2.c ****             }
 521:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* LCD_2_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC5/LCD_2.c **** 
 523:.\Generated_Source\PSoC5/LCD_2.c ****         return(status);
 524:.\Generated_Source\PSoC5/LCD_2.c ****     }
 462              		.loc 1 524 0
 463 001c 7047     		bx	lr
 464              	.L36:
 465 001e 00BF     		.align	2
 466              	.L35:
 467 0020 6B650040 		.word	1073767787
 468 0024 00000000 		.word	.LANCHOR0
 469              		.cfi_endproc
 470              	.LFE10:
 471              		.size	LCD_2_ReadRxStatus, .-LCD_2_ReadRxStatus
 472              		.section	.text.LCD_2_GetChar,"ax",%progbits
 473              		.align	2
 474              		.global	LCD_2_GetChar
 475              		.thumb
 476              		.thumb_func
 477              		.type	LCD_2_GetChar, %function
 478              	LCD_2_GetChar:
 479              	.LFB11:
 525:.\Generated_Source\PSoC5/LCD_2.c **** 
 526:.\Generated_Source\PSoC5/LCD_2.c **** 
 527:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_GetChar
 529:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC5/LCD_2.c ****     *
 531:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 532:.\Generated_Source\PSoC5/LCD_2.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC5/LCD_2.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC5/LCD_2.c ****     *  returned.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 19


 535:.\Generated_Source\PSoC5/LCD_2.c ****     *
 536:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 537:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 538:.\Generated_Source\PSoC5/LCD_2.c ****     *
 539:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 540:.\Generated_Source\PSoC5/LCD_2.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC5/LCD_2.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC5/LCD_2.c ****     *
 543:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 544:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC5/LCD_2.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC5/LCD_2.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC5/LCD_2.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC5/LCD_2.c ****     *
 552:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
 553:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
 554:.\Generated_Source\PSoC5/LCD_2.c ****     *
 555:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_GetChar(void) 
 557:.\Generated_Source\PSoC5/LCD_2.c ****     {
 480              		.loc 1 557 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484 0000 10B5     		push	{r4, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 4, -8
 487              		.cfi_offset 14, -4
 488              	.LVL32:
 558:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 rxData = 0u;
 559:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC5/LCD_2.c **** 
 561:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH)
 562:.\Generated_Source\PSoC5/LCD_2.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC5/LCD_2.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC5/LCD_2.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC5/LCD_2.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_DisableRxInt();
 489              		.loc 1 567 0
 490 0002 FFF7FEFF 		bl	LCD_2_DisableRxInt
 491              	.LVL33:
 568:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* LCD_2_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC5/LCD_2.c ****             loc_rxBufferRead = LCD_2_rxBufferRead;
 492              		.loc 1 569 0
 493 0006 184B     		ldr	r3, .L45
 494 0008 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 495 000a D2B2     		uxtb	r2, r2
 496              	.LVL34:
 570:.\Generated_Source\PSoC5/LCD_2.c ****             loc_rxBufferWrite = LCD_2_rxBufferWrite;
 497              		.loc 1 570 0
 498 000c 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 499 000e C9B2     		uxtb	r1, r1
 500              	.LVL35:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 20


 571:.\Generated_Source\PSoC5/LCD_2.c **** 
 572:.\Generated_Source\PSoC5/LCD_2.c ****             if( (LCD_2_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 501              		.loc 1 572 0
 502 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 503 0012 13F0FF0F 		tst	r3, #255
 504 0016 01D1     		bne	.L38
 505              		.loc 1 572 0 is_stmt 0 discriminator 1
 506 0018 8A42     		cmp	r2, r1
 507 001a 11D0     		beq	.L39
 508              	.L38:
 573:.\Generated_Source\PSoC5/LCD_2.c ****             {
 574:.\Generated_Source\PSoC5/LCD_2.c ****                 rxData = LCD_2_rxBuffer[loc_rxBufferRead];
 509              		.loc 1 574 0 is_stmt 1
 510 001c 134B     		ldr	r3, .L45+4
 511 001e 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
 512 0020 E4B2     		uxtb	r4, r4
 513              	.LVL36:
 575:.\Generated_Source\PSoC5/LCD_2.c ****                 loc_rxBufferRead++;
 514              		.loc 1 575 0
 515 0022 0132     		adds	r2, r2, #1
 516              	.LVL37:
 517 0024 D2B2     		uxtb	r2, r2
 518              	.LVL38:
 576:.\Generated_Source\PSoC5/LCD_2.c ****                 if(loc_rxBufferRead >= LCD_2_RXBUFFERSIZE)
 519              		.loc 1 576 0
 520 0026 132A     		cmp	r2, #19
 521 0028 00D9     		bls	.L40
 577:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 578:.\Generated_Source\PSoC5/LCD_2.c ****                     loc_rxBufferRead = 0u;
 522              		.loc 1 578 0
 523 002a 0022     		movs	r2, #0
 524              	.LVL39:
 525              	.L40:
 579:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 580:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_rxBufferRead = loc_rxBufferRead;
 526              		.loc 1 581 0
 527 002c 0E4B     		ldr	r3, .L45
 528 002e 5A70     		strb	r2, [r3, #1]
 582:.\Generated_Source\PSoC5/LCD_2.c **** 
 583:.\Generated_Source\PSoC5/LCD_2.c ****                 if(LCD_2_rxBufferLoopDetect > 0u )
 529              		.loc 1 583 0
 530 0030 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 531 0032 13F0FF0F 		tst	r3, #255
 532 0036 13D0     		beq	.L41
 584:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 585:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_rxBufferLoopDetect = 0u;
 533              		.loc 1 585 0
 534 0038 0022     		movs	r2, #0
 535              	.LVL40:
 536 003a 0B4B     		ldr	r3, .L45
 537 003c DA70     		strb	r2, [r3, #3]
 538 003e 0FE0     		b	.L41
 539              	.LVL41:
 540              	.L39:
 586:.\Generated_Source\PSoC5/LCD_2.c ****                     #if( (LCD_2_RX_INTERRUPT_ENABLED) && (LCD_2_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC5/LCD_2.c ****                         /* When Hardware Flow Control selected - return RX mask */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 21


 588:.\Generated_Source\PSoC5/LCD_2.c ****                         #if( LCD_2_HD_ENABLED )
 589:.\Generated_Source\PSoC5/LCD_2.c ****                             if((LCD_2_CONTROL_REG & LCD_2_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC5/LCD_2.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC5/LCD_2.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC5/LCD_2.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC5/LCD_2.c ****                                 */
 594:.\Generated_Source\PSoC5/LCD_2.c ****                                 LCD_2_RXSTATUS_MASK_REG  |= LCD_2_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC5/LCD_2.c ****                             }
 596:.\Generated_Source\PSoC5/LCD_2.c ****                         #else
 597:.\Generated_Source\PSoC5/LCD_2.c ****                             LCD_2_RXSTATUS_MASK_REG  |= LCD_2_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC5/LCD_2.c ****                         #endif /* end LCD_2_HD_ENABLED */
 599:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* LCD_2_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 601:.\Generated_Source\PSoC5/LCD_2.c **** 
 602:.\Generated_Source\PSoC5/LCD_2.c ****             }
 603:.\Generated_Source\PSoC5/LCD_2.c ****             else
 604:.\Generated_Source\PSoC5/LCD_2.c ****             {   rxStatus = LCD_2_RXSTATUS_REG;
 541              		.loc 1 604 0
 542 0040 0B4B     		ldr	r3, .L45+8
 543 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 544 0044 DBB2     		uxtb	r3, r3
 545              	.LVL42:
 605:.\Generated_Source\PSoC5/LCD_2.c ****                 if((rxStatus & LCD_2_RX_STS_FIFO_NOTEMPTY) != 0u)
 546              		.loc 1 605 0
 547 0046 13F0200F 		tst	r3, #32
 548 004a 06D0     		beq	.L43
 606:.\Generated_Source\PSoC5/LCD_2.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC5/LCD_2.c ****                     rxData = LCD_2_RXDATA_REG;
 549              		.loc 1 607 0
 550 004c 094A     		ldr	r2, .L45+12
 551              	.LVL43:
 552 004e 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 553 0050 E4B2     		uxtb	r4, r4
 554              	.LVL44:
 608:.\Generated_Source\PSoC5/LCD_2.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC5/LCD_2.c ****                     if((rxStatus & (LCD_2_RX_STS_BREAK | LCD_2_RX_STS_PAR_ERROR |
 555              		.loc 1 609 0
 556 0052 13F01E0F 		tst	r3, #30
 557 0056 02D1     		bne	.L44
 558 0058 02E0     		b	.L41
 559              	.LVL45:
 560              	.L43:
 558:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 rxData = 0u;
 561              		.loc 1 558 0
 562 005a 0024     		movs	r4, #0
 563 005c 00E0     		b	.L41
 564              	.LVL46:
 565              	.L44:
 610:.\Generated_Source\PSoC5/LCD_2.c ****                                    LCD_2_RX_STS_STOP_ERROR | LCD_2_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC5/LCD_2.c ****                     {
 612:.\Generated_Source\PSoC5/LCD_2.c ****                         rxData = 0u;
 566              		.loc 1 612 0
 567 005e 0024     		movs	r4, #0
 568              	.LVL47:
 569              	.L41:
 613:.\Generated_Source\PSoC5/LCD_2.c ****                     }
 614:.\Generated_Source\PSoC5/LCD_2.c ****                 }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 22


 615:.\Generated_Source\PSoC5/LCD_2.c ****             }
 616:.\Generated_Source\PSoC5/LCD_2.c **** 
 617:.\Generated_Source\PSoC5/LCD_2.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_EnableRxInt();
 570              		.loc 1 619 0
 571 0060 FFF7FEFF 		bl	LCD_2_EnableRxInt
 572              	.LVL48:
 620:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* LCD_2_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC5/LCD_2.c **** 
 622:.\Generated_Source\PSoC5/LCD_2.c ****         #else /* LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 623:.\Generated_Source\PSoC5/LCD_2.c **** 
 624:.\Generated_Source\PSoC5/LCD_2.c ****             rxStatus =LCD_2_RXSTATUS_REG;
 625:.\Generated_Source\PSoC5/LCD_2.c ****             if((rxStatus & LCD_2_RX_STS_FIFO_NOTEMPTY) != 0u)
 626:.\Generated_Source\PSoC5/LCD_2.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC5/LCD_2.c ****                 rxData = LCD_2_RXDATA_REG;
 628:.\Generated_Source\PSoC5/LCD_2.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC5/LCD_2.c ****                 if((rxStatus & (LCD_2_RX_STS_BREAK | LCD_2_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC5/LCD_2.c ****                                LCD_2_RX_STS_STOP_ERROR | LCD_2_RX_STS_OVERRUN)) != 0u)
 631:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 632:.\Generated_Source\PSoC5/LCD_2.c ****                     rxData = 0u;
 633:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 634:.\Generated_Source\PSoC5/LCD_2.c ****             }
 635:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 636:.\Generated_Source\PSoC5/LCD_2.c **** 
 637:.\Generated_Source\PSoC5/LCD_2.c ****         return(rxData);
 638:.\Generated_Source\PSoC5/LCD_2.c ****     }
 573              		.loc 1 638 0
 574 0064 2046     		mov	r0, r4
 575 0066 10BD     		pop	{r4, pc}
 576              	.LVL49:
 577              	.L46:
 578              		.align	2
 579              	.L45:
 580 0068 00000000 		.word	.LANCHOR0
 581 006c 00000000 		.word	LCD_2_rxBuffer
 582 0070 6B650040 		.word	1073767787
 583 0074 48650040 		.word	1073767752
 584              		.cfi_endproc
 585              	.LFE11:
 586              		.size	LCD_2_GetChar, .-LCD_2_GetChar
 587              		.section	.text.LCD_2_GetByte,"ax",%progbits
 588              		.align	2
 589              		.global	LCD_2_GetByte
 590              		.thumb
 591              		.thumb_func
 592              		.type	LCD_2_GetByte, %function
 593              	LCD_2_GetByte:
 594              	.LFB12:
 639:.\Generated_Source\PSoC5/LCD_2.c **** 
 640:.\Generated_Source\PSoC5/LCD_2.c **** 
 641:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_GetByte
 643:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC5/LCD_2.c ****     *
 645:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 646:.\Generated_Source\PSoC5/LCD_2.c ****     *  Grab the next available byte of data from the recieve FIFO
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 23


 647:.\Generated_Source\PSoC5/LCD_2.c ****     *
 648:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 649:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 650:.\Generated_Source\PSoC5/LCD_2.c ****     *
 651:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 652:.\Generated_Source\PSoC5/LCD_2.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC5/LCD_2.c ****     *
 654:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
 655:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
 656:.\Generated_Source\PSoC5/LCD_2.c ****     *
 657:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC5/LCD_2.c ****     uint16 LCD_2_GetByte(void) 
 659:.\Generated_Source\PSoC5/LCD_2.c ****     {
 595              		.loc 1 659 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599 0000 10B5     		push	{r4, lr}
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 4, -8
 602              		.cfi_offset 14, -4
 660:.\Generated_Source\PSoC5/LCD_2.c ****         return ( ((uint16)LCD_2_ReadRxStatus() << 8u) | LCD_2_ReadRxData() );
 603              		.loc 1 660 0
 604 0002 FFF7FEFF 		bl	LCD_2_ReadRxStatus
 605              	.LVL50:
 606 0006 0402     		lsls	r4, r0, #8
 607 0008 FFF7FEFF 		bl	LCD_2_ReadRxData
 608              	.LVL51:
 609 000c 2043     		orrs	r0, r0, r4
 661:.\Generated_Source\PSoC5/LCD_2.c ****     }
 610              		.loc 1 661 0
 611 000e 80B2     		uxth	r0, r0
 612 0010 10BD     		pop	{r4, pc}
 613              		.cfi_endproc
 614              	.LFE12:
 615              		.size	LCD_2_GetByte, .-LCD_2_GetByte
 616 0012 00BF     		.section	.text.LCD_2_GetRxBufferSize,"ax",%progbits
 617              		.align	2
 618              		.global	LCD_2_GetRxBufferSize
 619              		.thumb
 620              		.thumb_func
 621              		.type	LCD_2_GetRxBufferSize, %function
 622              	LCD_2_GetRxBufferSize:
 623              	.LFB13:
 662:.\Generated_Source\PSoC5/LCD_2.c **** 
 663:.\Generated_Source\PSoC5/LCD_2.c **** 
 664:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_GetRxBufferSize
 666:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC5/LCD_2.c ****     *
 668:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 669:.\Generated_Source\PSoC5/LCD_2.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC5/LCD_2.c ****     *  bytes
 671:.\Generated_Source\PSoC5/LCD_2.c ****     *
 672:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 673:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 674:.\Generated_Source\PSoC5/LCD_2.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 24


 675:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 676:.\Generated_Source\PSoC5/LCD_2.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC5/LCD_2.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC5/LCD_2.c ****     *
 679:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 680:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC5/LCD_2.c ****     *
 684:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
 685:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
 686:.\Generated_Source\PSoC5/LCD_2.c ****     *
 687:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
 688:.\Generated_Source\PSoC5/LCD_2.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC5/LCD_2.c ****     *
 690:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC5/LCD_2.c ****                                                             
 693:.\Generated_Source\PSoC5/LCD_2.c ****     {
 624              		.loc 1 693 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628 0000 10B5     		push	{r4, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 4, -8
 631              		.cfi_offset 14, -4
 694:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 size;
 695:.\Generated_Source\PSoC5/LCD_2.c **** 
 696:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH)
 697:.\Generated_Source\PSoC5/LCD_2.c **** 
 698:.\Generated_Source\PSoC5/LCD_2.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC5/LCD_2.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_DisableRxInt();
 632              		.loc 1 701 0
 633 0002 FFF7FEFF 		bl	LCD_2_DisableRxInt
 634              	.LVL52:
 702:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* LCD_2_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC5/LCD_2.c **** 
 704:.\Generated_Source\PSoC5/LCD_2.c ****             if(LCD_2_rxBufferRead == LCD_2_rxBufferWrite)
 635              		.loc 1 704 0
 636 0006 124B     		ldr	r3, .L53
 637 0008 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 638 000a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 639 000c D2B2     		uxtb	r2, r2
 640 000e 9A42     		cmp	r2, r3
 641 0010 06D1     		bne	.L49
 705:.\Generated_Source\PSoC5/LCD_2.c ****             {
 706:.\Generated_Source\PSoC5/LCD_2.c ****                 if(LCD_2_rxBufferLoopDetect > 0u)
 642              		.loc 1 706 0
 643 0012 0F4B     		ldr	r3, .L53
 644 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 645 0016 13F0FF0F 		tst	r3, #255
 646 001a 14D0     		beq	.L52
 707:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 708:.\Generated_Source\PSoC5/LCD_2.c ****                     size = LCD_2_RXBUFFERSIZE;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 25


 647              		.loc 1 708 0
 648 001c 1424     		movs	r4, #20
 649 001e 13E0     		b	.L50
 650              	.L49:
 709:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 710:.\Generated_Source\PSoC5/LCD_2.c ****                 else
 711:.\Generated_Source\PSoC5/LCD_2.c ****                 {
 712:.\Generated_Source\PSoC5/LCD_2.c ****                     size = 0u;
 713:.\Generated_Source\PSoC5/LCD_2.c ****                 }
 714:.\Generated_Source\PSoC5/LCD_2.c ****             }
 715:.\Generated_Source\PSoC5/LCD_2.c ****             else if(LCD_2_rxBufferRead < LCD_2_rxBufferWrite)
 651              		.loc 1 715 0
 652 0020 0B4B     		ldr	r3, .L53
 653 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 654 0024 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 655 0026 D2B2     		uxtb	r2, r2
 656 0028 9A42     		cmp	r2, r3
 657 002a 05D2     		bcs	.L51
 716:.\Generated_Source\PSoC5/LCD_2.c ****             {
 717:.\Generated_Source\PSoC5/LCD_2.c ****                 size = (LCD_2_rxBufferWrite - LCD_2_rxBufferRead);
 658              		.loc 1 717 0
 659 002c 084B     		ldr	r3, .L53
 660 002e 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 661 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 662 0032 E41A     		subs	r4, r4, r3
 663 0034 E4B2     		uxtb	r4, r4
 664              	.LVL53:
 665 0036 07E0     		b	.L50
 666              	.LVL54:
 667              	.L51:
 718:.\Generated_Source\PSoC5/LCD_2.c ****             }
 719:.\Generated_Source\PSoC5/LCD_2.c ****             else
 720:.\Generated_Source\PSoC5/LCD_2.c ****             {
 721:.\Generated_Source\PSoC5/LCD_2.c ****                 size = (LCD_2_RXBUFFERSIZE - LCD_2_rxBufferRead) + LCD_2_rxBufferWrite;
 668              		.loc 1 721 0
 669 0038 054B     		ldr	r3, .L53
 670 003a 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 671 003c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 672 003e E41A     		subs	r4, r4, r3
 673 0040 1434     		adds	r4, r4, #20
 674 0042 E4B2     		uxtb	r4, r4
 675              	.LVL55:
 676 0044 00E0     		b	.L50
 677              	.LVL56:
 678              	.L52:
 712:.\Generated_Source\PSoC5/LCD_2.c ****                     size = 0u;
 679              		.loc 1 712 0
 680 0046 0024     		movs	r4, #0
 681              	.L50:
 682              	.LVL57:
 722:.\Generated_Source\PSoC5/LCD_2.c ****             }
 723:.\Generated_Source\PSoC5/LCD_2.c **** 
 724:.\Generated_Source\PSoC5/LCD_2.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_EnableRxInt();
 683              		.loc 1 726 0
 684 0048 FFF7FEFF 		bl	LCD_2_EnableRxInt
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 26


 685              	.LVL58:
 727:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC5/LCD_2.c **** 
 729:.\Generated_Source\PSoC5/LCD_2.c ****         #else /* LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 730:.\Generated_Source\PSoC5/LCD_2.c **** 
 731:.\Generated_Source\PSoC5/LCD_2.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC5/LCD_2.c ****             size = ((LCD_2_RXSTATUS_REG & LCD_2_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 733:.\Generated_Source\PSoC5/LCD_2.c **** 
 734:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 735:.\Generated_Source\PSoC5/LCD_2.c **** 
 736:.\Generated_Source\PSoC5/LCD_2.c ****         return(size);
 737:.\Generated_Source\PSoC5/LCD_2.c ****     }
 686              		.loc 1 737 0
 687 004c 2046     		mov	r0, r4
 688 004e 10BD     		pop	{r4, pc}
 689              	.LVL59:
 690              	.L54:
 691              		.align	2
 692              	.L53:
 693 0050 00000000 		.word	.LANCHOR0
 694              		.cfi_endproc
 695              	.LFE13:
 696              		.size	LCD_2_GetRxBufferSize, .-LCD_2_GetRxBufferSize
 697              		.section	.text.LCD_2_ClearRxBuffer,"ax",%progbits
 698              		.align	2
 699              		.global	LCD_2_ClearRxBuffer
 700              		.thumb
 701              		.thumb_func
 702              		.type	LCD_2_ClearRxBuffer, %function
 703              	LCD_2_ClearRxBuffer:
 704              	.LFB14:
 738:.\Generated_Source\PSoC5/LCD_2.c **** 
 739:.\Generated_Source\PSoC5/LCD_2.c **** 
 740:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_ClearRxBuffer
 742:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/LCD_2.c ****     *
 744:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 745:.\Generated_Source\PSoC5/LCD_2.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC5/LCD_2.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC5/LCD_2.c ****     *
 748:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 749:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 750:.\Generated_Source\PSoC5/LCD_2.c ****     *
 751:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 752:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 753:.\Generated_Source\PSoC5/LCD_2.c ****     *
 754:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 755:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC5/LCD_2.c ****     *
 760:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
 761:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
 762:.\Generated_Source\PSoC5/LCD_2.c ****     *
 763:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 27


 764:.\Generated_Source\PSoC5/LCD_2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC5/LCD_2.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC5/LCD_2.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC5/LCD_2.c ****     *
 768:.\Generated_Source\PSoC5/LCD_2.c ****     * Side Effects:
 769:.\Generated_Source\PSoC5/LCD_2.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 770:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC5/LCD_2.c ****     {
 705              		.loc 1 772 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 08B5     		push	{r3, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 3, -8
 712              		.cfi_offset 14, -4
 773:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC5/LCD_2.c **** 
 775:.\Generated_Source\PSoC5/LCD_2.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC5/LCD_2.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC5/LCD_2.c ****         enableInterrupts = CyEnterCriticalSection();
 713              		.loc 1 777 0
 714 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 715              	.LVL60:
 778:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXDATA_AUX_CTL_REG |=  LCD_2_RX_FIFO_CLR;
 716              		.loc 1 778 0
 717 0006 0B4B     		ldr	r3, .L56
 718 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 719 000a 42F00102 		orr	r2, r2, #1
 720 000e 1A70     		strb	r2, [r3]
 779:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXDATA_AUX_CTL_REG &= (uint8)~LCD_2_RX_FIFO_CLR;
 721              		.loc 1 779 0
 722 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 723 0012 02F0FE02 		and	r2, r2, #254
 724 0016 1A70     		strb	r2, [r3]
 780:.\Generated_Source\PSoC5/LCD_2.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC5/LCD_2.c ****         CyExitCriticalSection(enableInterrupts);
 725              		.loc 1 781 0
 726 0018 FFF7FEFF 		bl	CyExitCriticalSection
 727              	.LVL61:
 782:.\Generated_Source\PSoC5/LCD_2.c **** 
 783:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH)
 784:.\Generated_Source\PSoC5/LCD_2.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC5/LCD_2.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_DisableRxInt();
 728              		.loc 1 787 0
 729 001c FFF7FEFF 		bl	LCD_2_DisableRxInt
 730              	.LVL62:
 788:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC5/LCD_2.c **** 
 790:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_rxBufferRead = 0u;
 731              		.loc 1 790 0
 732 0020 054B     		ldr	r3, .L56+4
 733 0022 0022     		movs	r2, #0
 734 0024 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 28


 791:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_rxBufferWrite = 0u;
 735              		.loc 1 791 0
 736 0026 9A70     		strb	r2, [r3, #2]
 792:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_rxBufferLoopDetect = 0u;
 737              		.loc 1 792 0
 738 0028 DA70     		strb	r2, [r3, #3]
 793:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_rxBufferOverflow = 0u;
 739              		.loc 1 793 0
 740 002a 1A71     		strb	r2, [r3, #4]
 794:.\Generated_Source\PSoC5/LCD_2.c **** 
 795:.\Generated_Source\PSoC5/LCD_2.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_EnableRxInt();
 741              		.loc 1 797 0
 742 002c FFF7FEFF 		bl	LCD_2_EnableRxInt
 743              	.LVL63:
 744 0030 08BD     		pop	{r3, pc}
 745              	.L57:
 746 0032 00BF     		.align	2
 747              	.L56:
 748 0034 98650040 		.word	1073767832
 749 0038 00000000 		.word	.LANCHOR0
 750              		.cfi_endproc
 751              	.LFE14:
 752              		.size	LCD_2_ClearRxBuffer, .-LCD_2_ClearRxBuffer
 753              		.section	.text.LCD_2_SetRxAddressMode,"ax",%progbits
 754              		.align	2
 755              		.global	LCD_2_SetRxAddressMode
 756              		.thumb
 757              		.thumb_func
 758              		.type	LCD_2_SetRxAddressMode, %function
 759              	LCD_2_SetRxAddressMode:
 760              	.LFB15:
 798:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH */
 800:.\Generated_Source\PSoC5/LCD_2.c **** 
 801:.\Generated_Source\PSoC5/LCD_2.c ****     }
 802:.\Generated_Source\PSoC5/LCD_2.c **** 
 803:.\Generated_Source\PSoC5/LCD_2.c **** 
 804:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SetRxAddressMode
 806:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC5/LCD_2.c ****     *
 808:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 809:.\Generated_Source\PSoC5/LCD_2.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC5/LCD_2.c ****     *
 811:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 812:.\Generated_Source\PSoC5/LCD_2.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC5/LCD_2.c ****     *                                               detection
 815:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC5/LCD_2.c ****     *                                               address detection
 817:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC5/LCD_2.c ****     *                                               detection
 819:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC5/LCD_2.c ****     *                                               address detection
 821:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2__B_UART__AM_NONE - No address detection
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 29


 822:.\Generated_Source\PSoC5/LCD_2.c ****     *
 823:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 824:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 825:.\Generated_Source\PSoC5/LCD_2.c ****     *
 826:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 827:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC5/LCD_2.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC5/LCD_2.c ****     *
 831:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC5/LCD_2.c ****                                                         
 834:.\Generated_Source\PSoC5/LCD_2.c ****     {
 761              		.loc 1 834 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL64:
 767 0000 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE15:
 770              		.size	LCD_2_SetRxAddressMode, .-LCD_2_SetRxAddressMode
 771 0002 00BF     		.section	.text.LCD_2_SetRxAddress1,"ax",%progbits
 772              		.align	2
 773              		.global	LCD_2_SetRxAddress1
 774              		.thumb
 775              		.thumb_func
 776              		.type	LCD_2_SetRxAddress1, %function
 777              	LCD_2_SetRxAddress1:
 778              	.LFB16:
 835:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC5/LCD_2.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC5/LCD_2.c ****             #else /* LCD_2_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC5/LCD_2.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC5/LCD_2.c ****                 tmpCtrl = LCD_2_CONTROL_REG & (uint8)~LCD_2_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC5/LCD_2.c ****                 tmpCtrl |= (uint8)(addressMode << LCD_2_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC5/LCD_2.c ****                 #if(LCD_2_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC5/LCD_2.c ****                    (LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC5/LCD_2.c ****                 #endif /* End LCD_2_RXBUFFERSIZE > LCD_2_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC5/LCD_2.c ****         #else /* LCD_2_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC5/LCD_2.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC5/LCD_2.c ****     }
 853:.\Generated_Source\PSoC5/LCD_2.c **** 
 854:.\Generated_Source\PSoC5/LCD_2.c **** 
 855:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SetRxAddress1
 857:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC5/LCD_2.c ****     *
 859:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 860:.\Generated_Source\PSoC5/LCD_2.c ****     *  Set the first hardware address compare value
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 30


 861:.\Generated_Source\PSoC5/LCD_2.c ****     *
 862:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 863:.\Generated_Source\PSoC5/LCD_2.c ****     *  address
 864:.\Generated_Source\PSoC5/LCD_2.c ****     *
 865:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 866:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 867:.\Generated_Source\PSoC5/LCD_2.c ****     *
 868:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC5/LCD_2.c **** 
 871:.\Generated_Source\PSoC5/LCD_2.c ****     {
 779              		.loc 1 871 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784              	.LVL65:
 872:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXADDRESS1_REG = address;
 785              		.loc 1 872 0
 786 0000 014B     		ldr	r3, .L60
 787 0002 1870     		strb	r0, [r3]
 788 0004 7047     		bx	lr
 789              	.L61:
 790 0006 00BF     		.align	2
 791              	.L60:
 792 0008 28650040 		.word	1073767720
 793              		.cfi_endproc
 794              	.LFE16:
 795              		.size	LCD_2_SetRxAddress1, .-LCD_2_SetRxAddress1
 796              		.section	.text.LCD_2_SetRxAddress2,"ax",%progbits
 797              		.align	2
 798              		.global	LCD_2_SetRxAddress2
 799              		.thumb
 800              		.thumb_func
 801              		.type	LCD_2_SetRxAddress2, %function
 802              	LCD_2_SetRxAddress2:
 803              	.LFB17:
 873:.\Generated_Source\PSoC5/LCD_2.c ****     }
 874:.\Generated_Source\PSoC5/LCD_2.c **** 
 875:.\Generated_Source\PSoC5/LCD_2.c **** 
 876:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SetRxAddress2
 878:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC5/LCD_2.c ****     *
 880:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 881:.\Generated_Source\PSoC5/LCD_2.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC5/LCD_2.c ****     *
 883:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 884:.\Generated_Source\PSoC5/LCD_2.c ****     *  address
 885:.\Generated_Source\PSoC5/LCD_2.c ****     *
 886:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 887:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 888:.\Generated_Source\PSoC5/LCD_2.c ****     *
 889:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC5/LCD_2.c ****     {
 804              		.loc 1 891 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 31


 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL66:
 892:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_RXADDRESS2_REG = address;
 810              		.loc 1 892 0
 811 0000 014B     		ldr	r3, .L63
 812 0002 1870     		strb	r0, [r3]
 813 0004 7047     		bx	lr
 814              	.L64:
 815 0006 00BF     		.align	2
 816              	.L63:
 817 0008 38650040 		.word	1073767736
 818              		.cfi_endproc
 819              	.LFE17:
 820              		.size	LCD_2_SetRxAddress2, .-LCD_2_SetRxAddress2
 821              		.section	.text.LCD_2_SetTxInterruptMode,"ax",%progbits
 822              		.align	2
 823              		.global	LCD_2_SetTxInterruptMode
 824              		.thumb
 825              		.thumb_func
 826              		.type	LCD_2_SetTxInterruptMode, %function
 827              	LCD_2_SetTxInterruptMode:
 828              	.LFB18:
 893:.\Generated_Source\PSoC5/LCD_2.c ****     }
 894:.\Generated_Source\PSoC5/LCD_2.c **** 
 895:.\Generated_Source\PSoC5/LCD_2.c **** #endif  /* LCD_2_RX_ENABLED || LCD_2_HD_ENABLED*/
 896:.\Generated_Source\PSoC5/LCD_2.c **** 
 897:.\Generated_Source\PSoC5/LCD_2.c **** 
 898:.\Generated_Source\PSoC5/LCD_2.c **** #if( (LCD_2_TX_ENABLED) || (LCD_2_HD_ENABLED) )
 899:.\Generated_Source\PSoC5/LCD_2.c **** 
 900:.\Generated_Source\PSoC5/LCD_2.c ****     #if(LCD_2_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC5/LCD_2.c **** 
 902:.\Generated_Source\PSoC5/LCD_2.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC5/LCD_2.c ****         * Function Name: LCD_2_EnableTxInt
 904:.\Generated_Source\PSoC5/LCD_2.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC5/LCD_2.c ****         *
 906:.\Generated_Source\PSoC5/LCD_2.c ****         * Summary:
 907:.\Generated_Source\PSoC5/LCD_2.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC5/LCD_2.c ****         *
 909:.\Generated_Source\PSoC5/LCD_2.c ****         * Parameters:
 910:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 911:.\Generated_Source\PSoC5/LCD_2.c ****         *
 912:.\Generated_Source\PSoC5/LCD_2.c ****         * Return:
 913:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 914:.\Generated_Source\PSoC5/LCD_2.c ****         *
 915:.\Generated_Source\PSoC5/LCD_2.c ****         * Theory:
 916:.\Generated_Source\PSoC5/LCD_2.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC5/LCD_2.c ****         *
 918:.\Generated_Source\PSoC5/LCD_2.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC5/LCD_2.c ****         void LCD_2_EnableTxInt(void) 
 920:.\Generated_Source\PSoC5/LCD_2.c ****         {
 921:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntEnable(LCD_2_TX_VECT_NUM);
 922:.\Generated_Source\PSoC5/LCD_2.c ****         }
 923:.\Generated_Source\PSoC5/LCD_2.c **** 
 924:.\Generated_Source\PSoC5/LCD_2.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 32


 925:.\Generated_Source\PSoC5/LCD_2.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC5/LCD_2.c ****         * Function Name: LCD_2_DisableTxInt
 927:.\Generated_Source\PSoC5/LCD_2.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC5/LCD_2.c ****         *
 929:.\Generated_Source\PSoC5/LCD_2.c ****         * Summary:
 930:.\Generated_Source\PSoC5/LCD_2.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC5/LCD_2.c ****         *
 932:.\Generated_Source\PSoC5/LCD_2.c ****         * Parameters:
 933:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 934:.\Generated_Source\PSoC5/LCD_2.c ****         *
 935:.\Generated_Source\PSoC5/LCD_2.c ****         * Return:
 936:.\Generated_Source\PSoC5/LCD_2.c ****         *  None.
 937:.\Generated_Source\PSoC5/LCD_2.c ****         *
 938:.\Generated_Source\PSoC5/LCD_2.c ****         * Theory:
 939:.\Generated_Source\PSoC5/LCD_2.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC5/LCD_2.c ****         *
 941:.\Generated_Source\PSoC5/LCD_2.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC5/LCD_2.c ****         void LCD_2_DisableTxInt(void) 
 943:.\Generated_Source\PSoC5/LCD_2.c ****         {
 944:.\Generated_Source\PSoC5/LCD_2.c ****             CyIntDisable(LCD_2_TX_VECT_NUM);
 945:.\Generated_Source\PSoC5/LCD_2.c ****         }
 946:.\Generated_Source\PSoC5/LCD_2.c **** 
 947:.\Generated_Source\PSoC5/LCD_2.c ****     #endif /* LCD_2_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC5/LCD_2.c **** 
 949:.\Generated_Source\PSoC5/LCD_2.c **** 
 950:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SetTxInterruptMode
 952:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC5/LCD_2.c ****     *
 954:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 955:.\Generated_Source\PSoC5/LCD_2.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC5/LCD_2.c ****     *
 957:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 958:.\Generated_Source\PSoC5/LCD_2.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC5/LCD_2.c ****     *          the header file)
 960:.\Generated_Source\PSoC5/LCD_2.c ****     *
 961:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 962:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
 963:.\Generated_Source\PSoC5/LCD_2.c ****     *
 964:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
 965:.\Generated_Source\PSoC5/LCD_2.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC5/LCD_2.c ****     *
 967:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC5/LCD_2.c ****     {
 829              		.loc 1 969 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              	.LVL67:
 970:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_TXSTATUS_MASK_REG = intSrc;
 835              		.loc 1 970 0
 836 0000 014B     		ldr	r3, .L66
 837 0002 1870     		strb	r0, [r3]
 838 0004 7047     		bx	lr
 839              	.L67:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 33


 840 0006 00BF     		.align	2
 841              	.L66:
 842 0008 84640040 		.word	1073767556
 843              		.cfi_endproc
 844              	.LFE18:
 845              		.size	LCD_2_SetTxInterruptMode, .-LCD_2_SetTxInterruptMode
 846              		.section	.text.LCD_2_WriteTxData,"ax",%progbits
 847              		.align	2
 848              		.global	LCD_2_WriteTxData
 849              		.thumb
 850              		.thumb_func
 851              		.type	LCD_2_WriteTxData, %function
 852              	LCD_2_WriteTxData:
 853              	.LFB19:
 971:.\Generated_Source\PSoC5/LCD_2.c ****     }
 972:.\Generated_Source\PSoC5/LCD_2.c **** 
 973:.\Generated_Source\PSoC5/LCD_2.c **** 
 974:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_WriteTxData
 976:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC5/LCD_2.c ****     *
 978:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
 979:.\Generated_Source\PSoC5/LCD_2.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC5/LCD_2.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC5/LCD_2.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC5/LCD_2.c ****     *
 983:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
 984:.\Generated_Source\PSoC5/LCD_2.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC5/LCD_2.c ****     *
 986:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
 987:.\Generated_Source\PSoC5/LCD_2.c ****     * void
 988:.\Generated_Source\PSoC5/LCD_2.c ****     *
 989:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
 990:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC5/LCD_2.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC5/LCD_2.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC5/LCD_2.c ****     *    initialized.
 997:.\Generated_Source\PSoC5/LCD_2.c ****     *
 998:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
 999:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1000:.\Generated_Source\PSoC5/LCD_2.c ****     *
1001:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC5/LCD_2.c ****     {
 854              		.loc 1 1003 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL68:
1004:.\Generated_Source\PSoC5/LCD_2.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC5/LCD_2.c ****         if(LCD_2_initVar != 0u)
 860              		.loc 1 1005 0
 861 0000 024B     		ldr	r3, .L70
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 34


 862 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 0004 0BB1     		cbz	r3, .L68
1006:.\Generated_Source\PSoC5/LCD_2.c ****         {
1007:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH)
1008:.\Generated_Source\PSoC5/LCD_2.c **** 
1009:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC5/LCD_2.c ****                 #if(LCD_2_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_DisableTxInt();
1013:.\Generated_Source\PSoC5/LCD_2.c ****                 #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC5/LCD_2.c **** 
1015:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (LCD_2_txBufferRead == LCD_2_txBufferWrite) &&
1016:.\Generated_Source\PSoC5/LCD_2.c ****                     ((LCD_2_TXSTATUS_REG & LCD_2_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1018:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1021:.\Generated_Source\PSoC5/LCD_2.c ****                 else
1022:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1023:.\Generated_Source\PSoC5/LCD_2.c ****                     if(LCD_2_txBufferWrite >= LCD_2_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC5/LCD_2.c ****                     {
1025:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC5/LCD_2.c ****                     }
1027:.\Generated_Source\PSoC5/LCD_2.c **** 
1028:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_txBuffer[LCD_2_txBufferWrite] = txDataByte;
1029:.\Generated_Source\PSoC5/LCD_2.c **** 
1030:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_txBufferWrite++;
1032:.\Generated_Source\PSoC5/LCD_2.c **** 
1033:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1034:.\Generated_Source\PSoC5/LCD_2.c **** 
1035:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC5/LCD_2.c ****                 #if(LCD_2_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_EnableTxInt();
1038:.\Generated_Source\PSoC5/LCD_2.c ****                 #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC5/LCD_2.c **** 
1040:.\Generated_Source\PSoC5/LCD_2.c ****             #else /* LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1041:.\Generated_Source\PSoC5/LCD_2.c **** 
1042:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_TXDATA_REG = txDataByte;
 864              		.loc 1 1043 0
 865 0006 024B     		ldr	r3, .L70+4
 866 0008 1870     		strb	r0, [r3]
 867              	.L68:
 868 000a 7047     		bx	lr
 869              	.L71:
 870              		.align	2
 871              	.L70:
 872 000c 00000000 		.word	.LANCHOR0
 873 0010 44640040 		.word	1073767492
 874              		.cfi_endproc
 875              	.LFE19:
 876              		.size	LCD_2_WriteTxData, .-LCD_2_WriteTxData
 877              		.section	.text.LCD_2_ReadTxStatus,"ax",%progbits
 878              		.align	2
 879              		.global	LCD_2_ReadTxStatus
 880              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 35


 881              		.thumb_func
 882              		.type	LCD_2_ReadTxStatus, %function
 883              	LCD_2_ReadTxStatus:
 884              	.LFB20:
1044:.\Generated_Source\PSoC5/LCD_2.c **** 
1045:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1046:.\Generated_Source\PSoC5/LCD_2.c ****         }
1047:.\Generated_Source\PSoC5/LCD_2.c ****     }
1048:.\Generated_Source\PSoC5/LCD_2.c **** 
1049:.\Generated_Source\PSoC5/LCD_2.c **** 
1050:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_ReadTxStatus
1052:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC5/LCD_2.c ****     *
1054:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1055:.\Generated_Source\PSoC5/LCD_2.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC5/LCD_2.c ****     *
1057:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1058:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1059:.\Generated_Source\PSoC5/LCD_2.c ****     *
1060:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1061:.\Generated_Source\PSoC5/LCD_2.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC5/LCD_2.c ****     *
1063:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
1064:.\Generated_Source\PSoC5/LCD_2.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC5/LCD_2.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC5/LCD_2.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC5/LCD_2.c ****     *  accordingly.
1068:.\Generated_Source\PSoC5/LCD_2.c ****     *
1069:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC5/LCD_2.c ****     {
 885              		.loc 1 1071 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		@ link register save eliminated.
1072:.\Generated_Source\PSoC5/LCD_2.c ****         return(LCD_2_TXSTATUS_REG);
 890              		.loc 1 1072 0
 891 0000 014B     		ldr	r3, .L73
 892 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1073:.\Generated_Source\PSoC5/LCD_2.c ****     }
 893              		.loc 1 1073 0
 894 0004 7047     		bx	lr
 895              	.L74:
 896 0006 00BF     		.align	2
 897              	.L73:
 898 0008 64640040 		.word	1073767524
 899              		.cfi_endproc
 900              	.LFE20:
 901              		.size	LCD_2_ReadTxStatus, .-LCD_2_ReadTxStatus
 902              		.section	.text.LCD_2_PutChar,"ax",%progbits
 903              		.align	2
 904              		.global	LCD_2_PutChar
 905              		.thumb
 906              		.thumb_func
 907              		.type	LCD_2_PutChar, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 36


 908              	LCD_2_PutChar:
 909              	.LFB21:
1074:.\Generated_Source\PSoC5/LCD_2.c **** 
1075:.\Generated_Source\PSoC5/LCD_2.c **** 
1076:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_PutChar
1078:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC5/LCD_2.c ****     *
1080:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1081:.\Generated_Source\PSoC5/LCD_2.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC5/LCD_2.c ****     *
1083:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1084:.\Generated_Source\PSoC5/LCD_2.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC5/LCD_2.c ****     *
1086:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1087:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1088:.\Generated_Source\PSoC5/LCD_2.c ****     *
1089:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1090:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC5/LCD_2.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC5/LCD_2.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC5/LCD_2.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC5/LCD_2.c ****     *     initialized.
1098:.\Generated_Source\PSoC5/LCD_2.c ****     *
1099:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1100:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1101:.\Generated_Source\PSoC5/LCD_2.c ****     *
1102:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
1103:.\Generated_Source\PSoC5/LCD_2.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC5/LCD_2.c ****     *
1105:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC5/LCD_2.c ****     {
 910              		.loc 1 1107 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915              	.LVL69:
1108:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH)
1109:.\Generated_Source\PSoC5/LCD_2.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC5/LCD_2.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC5/LCD_2.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC5/LCD_2.c ****                 */
1113:.\Generated_Source\PSoC5/LCD_2.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC5/LCD_2.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC5/LCD_2.c **** 
1116:.\Generated_Source\PSoC5/LCD_2.c ****                 do{
1117:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC5/LCD_2.c ****                     #if ((LCD_2_TXBUFFERSIZE > LCD_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC5/LCD_2.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC5/LCD_2.c ****                         CyIntDisable(LCD_2_TX_VECT_NUM);
1121:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC5/LCD_2.c ****                     loc_txBufferWrite = LCD_2_txBufferWrite;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 37


1123:.\Generated_Source\PSoC5/LCD_2.c ****                     loc_txBufferRead = LCD_2_txBufferRead;
1124:.\Generated_Source\PSoC5/LCD_2.c ****                     #if ((LCD_2_TXBUFFERSIZE > LCD_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC5/LCD_2.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC5/LCD_2.c ****                         CyIntEnable(LCD_2_TX_VECT_NUM);
1127:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC5/LCD_2.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
1129:.\Generated_Source\PSoC5/LCD_2.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC5/LCD_2.c ****                                         (uint8)(LCD_2_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC5/LCD_2.c **** 
1132:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC5/LCD_2.c ****                     ((LCD_2_TXSTATUS_REG & LCD_2_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1135:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1138:.\Generated_Source\PSoC5/LCD_2.c ****                 else
1139:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1140:.\Generated_Source\PSoC5/LCD_2.c ****                     if(loc_txBufferWrite >= LCD_2_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC5/LCD_2.c ****                     {
1142:.\Generated_Source\PSoC5/LCD_2.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC5/LCD_2.c ****                     }
1144:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC5/LCD_2.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC5/LCD_2.c **** 
1148:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC5/LCD_2.c ****                     #if ((LCD_2_TXBUFFERSIZE > LCD_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC5/LCD_2.c ****                         CyIntDisable(LCD_2_TX_VECT_NUM);
1151:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC5/LCD_2.c ****                     #if ((LCD_2_TXBUFFERSIZE > LCD_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC5/LCD_2.c ****                         CyIntEnable(LCD_2_TX_VECT_NUM);
1155:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1157:.\Generated_Source\PSoC5/LCD_2.c **** 
1158:.\Generated_Source\PSoC5/LCD_2.c ****             #else /* LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1159:.\Generated_Source\PSoC5/LCD_2.c **** 
1160:.\Generated_Source\PSoC5/LCD_2.c ****                 while((LCD_2_TXSTATUS_REG & LCD_2_TX_STS_FIFO_FULL) != 0u)
 916              		.loc 1 1160 0
 917 0000 034A     		ldr	r2, .L78
 918              	.L76:
 919              		.loc 1 1160 0 is_stmt 0 discriminator 1
 920 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 921 0004 13F0040F 		tst	r3, #4
 922 0008 FBD1     		bne	.L76
1161:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1162:.\Generated_Source\PSoC5/LCD_2.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1164:.\Generated_Source\PSoC5/LCD_2.c **** 
1165:.\Generated_Source\PSoC5/LCD_2.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_TXDATA_REG = txDataByte;
 923              		.loc 1 1166 0 is_stmt 1
 924 000a 024B     		ldr	r3, .L78+4
 925 000c 1870     		strb	r0, [r3]
 926 000e 7047     		bx	lr
 927              	.L79:
 928              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 38


 929              	.L78:
 930 0010 64640040 		.word	1073767524
 931 0014 44640040 		.word	1073767492
 932              		.cfi_endproc
 933              	.LFE21:
 934              		.size	LCD_2_PutChar, .-LCD_2_PutChar
 935              		.section	.text.LCD_2_PutString,"ax",%progbits
 936              		.align	2
 937              		.global	LCD_2_PutString
 938              		.thumb
 939              		.thumb_func
 940              		.type	LCD_2_PutString, %function
 941              	LCD_2_PutString:
 942              	.LFB22:
1167:.\Generated_Source\PSoC5/LCD_2.c **** 
1168:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1169:.\Generated_Source\PSoC5/LCD_2.c ****     }
1170:.\Generated_Source\PSoC5/LCD_2.c **** 
1171:.\Generated_Source\PSoC5/LCD_2.c **** 
1172:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_PutString
1174:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC5/LCD_2.c ****     *
1176:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1177:.\Generated_Source\PSoC5/LCD_2.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC5/LCD_2.c ****     *
1179:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1180:.\Generated_Source\PSoC5/LCD_2.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC5/LCD_2.c ****     *
1182:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1183:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1184:.\Generated_Source\PSoC5/LCD_2.c ****     *
1185:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1186:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC5/LCD_2.c ****     *     initialized.
1188:.\Generated_Source\PSoC5/LCD_2.c ****     *
1189:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1190:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1191:.\Generated_Source\PSoC5/LCD_2.c ****     *
1192:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
1193:.\Generated_Source\PSoC5/LCD_2.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC5/LCD_2.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC5/LCD_2.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC5/LCD_2.c ****     *
1197:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC5/LCD_2.c ****     {
 943              		.loc 1 1199 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              	.LVL70:
 948 0000 38B5     		push	{r3, r4, r5, lr}
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 3, -16
 951              		.cfi_offset 4, -12
 952              		.cfi_offset 5, -8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 39


 953              		.cfi_offset 14, -4
 954 0002 0546     		mov	r5, r0
 955              	.LVL71:
1200:.\Generated_Source\PSoC5/LCD_2.c ****         uint16 buf_index = 0u;
1201:.\Generated_Source\PSoC5/LCD_2.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC5/LCD_2.c ****         if(LCD_2_initVar != 0u)
 956              		.loc 1 1202 0
 957 0004 064B     		ldr	r3, .L85
 958 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 0008 2BB9     		cbnz	r3, .L84
 960 000a 38BD     		pop	{r3, r4, r5, pc}
 961              	.LVL72:
 962              	.L83:
1203:.\Generated_Source\PSoC5/LCD_2.c ****         {
1204:.\Generated_Source\PSoC5/LCD_2.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC5/LCD_2.c ****             while(string[buf_index] != (char8)0)
1206:.\Generated_Source\PSoC5/LCD_2.c ****             {
1207:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_PutChar((uint8)string[buf_index]);
 963              		.loc 1 1207 0
 964 000c FFF7FEFF 		bl	LCD_2_PutChar
 965              	.LVL73:
1208:.\Generated_Source\PSoC5/LCD_2.c ****                 buf_index++;
 966              		.loc 1 1208 0
 967 0010 0134     		adds	r4, r4, #1
 968              	.LVL74:
 969 0012 A4B2     		uxth	r4, r4
 970              	.LVL75:
 971 0014 00E0     		b	.L81
 972              	.LVL76:
 973              	.L84:
 974 0016 0024     		movs	r4, #0
 975              	.LVL77:
 976              	.L81:
1205:.\Generated_Source\PSoC5/LCD_2.c ****             while(string[buf_index] != (char8)0)
 977              		.loc 1 1205 0 discriminator 1
 978 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 979 001a 0028     		cmp	r0, #0
 980 001c F6D1     		bne	.L83
 981 001e 38BD     		pop	{r3, r4, r5, pc}
 982              	.LVL78:
 983              	.L86:
 984              		.align	2
 985              	.L85:
 986 0020 00000000 		.word	.LANCHOR0
 987              		.cfi_endproc
 988              	.LFE22:
 989              		.size	LCD_2_PutString, .-LCD_2_PutString
 990              		.section	.text.LCD_2_PutArray,"ax",%progbits
 991              		.align	2
 992              		.global	LCD_2_PutArray
 993              		.thumb
 994              		.thumb_func
 995              		.type	LCD_2_PutArray, %function
 996              	LCD_2_PutArray:
 997              	.LFB23:
1209:.\Generated_Source\PSoC5/LCD_2.c ****             }
1210:.\Generated_Source\PSoC5/LCD_2.c ****         }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 40


1211:.\Generated_Source\PSoC5/LCD_2.c ****     }
1212:.\Generated_Source\PSoC5/LCD_2.c **** 
1213:.\Generated_Source\PSoC5/LCD_2.c **** 
1214:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_PutArray
1216:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC5/LCD_2.c ****     *
1218:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1219:.\Generated_Source\PSoC5/LCD_2.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC5/LCD_2.c ****     *
1221:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1222:.\Generated_Source\PSoC5/LCD_2.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC5/LCD_2.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC5/LCD_2.c ****     *
1225:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1226:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1227:.\Generated_Source\PSoC5/LCD_2.c ****     *
1228:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1229:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC5/LCD_2.c ****     *     initialized.
1231:.\Generated_Source\PSoC5/LCD_2.c ****     *
1232:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1233:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1234:.\Generated_Source\PSoC5/LCD_2.c ****     *
1235:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC5/LCD_2.c ****                                                                     
1238:.\Generated_Source\PSoC5/LCD_2.c ****     {
 998              		.loc 1 1238 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              	.LVL79:
 1003 0000 70B5     		push	{r4, r5, r6, lr}
 1004              		.cfi_def_cfa_offset 16
 1005              		.cfi_offset 4, -16
 1006              		.cfi_offset 5, -12
 1007              		.cfi_offset 6, -8
 1008              		.cfi_offset 14, -4
 1009 0002 0546     		mov	r5, r0
 1010 0004 0E46     		mov	r6, r1
 1011              	.LVL80:
1239:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 buf_index = 0u;
1240:.\Generated_Source\PSoC5/LCD_2.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC5/LCD_2.c ****         if(LCD_2_initVar != 0u)
 1012              		.loc 1 1241 0
 1013 0006 064B     		ldr	r3, .L91
 1014 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 000a 3BB1     		cbz	r3, .L87
 1016 000c 0024     		movs	r4, #0
 1017              	.LVL81:
 1018              	.L89:
1242:.\Generated_Source\PSoC5/LCD_2.c ****         {
1243:.\Generated_Source\PSoC5/LCD_2.c ****             do
1244:.\Generated_Source\PSoC5/LCD_2.c ****             {
1245:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_PutChar(string[buf_index]);
 1019              		.loc 1 1245 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 41


 1020 000e 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1021 0010 FFF7FEFF 		bl	LCD_2_PutChar
 1022              	.LVL82:
1246:.\Generated_Source\PSoC5/LCD_2.c ****                 buf_index++;
 1023              		.loc 1 1246 0 discriminator 1
 1024 0014 0134     		adds	r4, r4, #1
 1025              	.LVL83:
 1026 0016 E4B2     		uxtb	r4, r4
 1027              	.LVL84:
1247:.\Generated_Source\PSoC5/LCD_2.c ****             }while(buf_index < byteCount);
 1028              		.loc 1 1247 0 discriminator 1
 1029 0018 B442     		cmp	r4, r6
 1030 001a F8D3     		bcc	.L89
 1031              	.LVL85:
 1032              	.L87:
 1033 001c 70BD     		pop	{r4, r5, r6, pc}
 1034              	.LVL86:
 1035              	.L92:
 1036 001e 00BF     		.align	2
 1037              	.L91:
 1038 0020 00000000 		.word	.LANCHOR0
 1039              		.cfi_endproc
 1040              	.LFE23:
 1041              		.size	LCD_2_PutArray, .-LCD_2_PutArray
 1042              		.section	.text.LCD_2_PutCRLF,"ax",%progbits
 1043              		.align	2
 1044              		.global	LCD_2_PutCRLF
 1045              		.thumb
 1046              		.thumb_func
 1047              		.type	LCD_2_PutCRLF, %function
 1048              	LCD_2_PutCRLF:
 1049              	.LFB24:
1248:.\Generated_Source\PSoC5/LCD_2.c ****         }
1249:.\Generated_Source\PSoC5/LCD_2.c ****     }
1250:.\Generated_Source\PSoC5/LCD_2.c **** 
1251:.\Generated_Source\PSoC5/LCD_2.c **** 
1252:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_PutCRLF
1254:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC5/LCD_2.c ****     *
1256:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1257:.\Generated_Source\PSoC5/LCD_2.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC5/LCD_2.c ****     *
1259:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1260:.\Generated_Source\PSoC5/LCD_2.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC5/LCD_2.c ****     *
1262:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1263:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1264:.\Generated_Source\PSoC5/LCD_2.c ****     *
1265:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1266:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC5/LCD_2.c ****     *     initialized.
1268:.\Generated_Source\PSoC5/LCD_2.c ****     *
1269:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1270:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1271:.\Generated_Source\PSoC5/LCD_2.c ****     *
1272:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 42


1273:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC5/LCD_2.c ****     {
 1050              		.loc 1 1274 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              	.LVL87:
 1055 0000 08B5     		push	{r3, lr}
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
1275:.\Generated_Source\PSoC5/LCD_2.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC5/LCD_2.c ****         if(LCD_2_initVar != 0u)
 1059              		.loc 1 1276 0
 1060 0002 064B     		ldr	r3, .L95
 1061 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 0006 3BB1     		cbz	r3, .L93
1277:.\Generated_Source\PSoC5/LCD_2.c ****         {
1278:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_PutChar(txDataByte);
 1063              		.loc 1 1278 0
 1064 0008 FFF7FEFF 		bl	LCD_2_PutChar
 1065              	.LVL88:
1279:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_PutChar(0x0Du);
 1066              		.loc 1 1279 0
 1067 000c 0D20     		movs	r0, #13
 1068 000e FFF7FEFF 		bl	LCD_2_PutChar
 1069              	.LVL89:
1280:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_PutChar(0x0Au);
 1070              		.loc 1 1280 0
 1071 0012 0A20     		movs	r0, #10
 1072 0014 FFF7FEFF 		bl	LCD_2_PutChar
 1073              	.LVL90:
 1074              	.L93:
 1075 0018 08BD     		pop	{r3, pc}
 1076              	.L96:
 1077 001a 00BF     		.align	2
 1078              	.L95:
 1079 001c 00000000 		.word	.LANCHOR0
 1080              		.cfi_endproc
 1081              	.LFE24:
 1082              		.size	LCD_2_PutCRLF, .-LCD_2_PutCRLF
 1083              		.section	.text.LCD_2_GetTxBufferSize,"ax",%progbits
 1084              		.align	2
 1085              		.global	LCD_2_GetTxBufferSize
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	LCD_2_GetTxBufferSize, %function
 1089              	LCD_2_GetTxBufferSize:
 1090              	.LFB25:
1281:.\Generated_Source\PSoC5/LCD_2.c ****         }
1282:.\Generated_Source\PSoC5/LCD_2.c ****     }
1283:.\Generated_Source\PSoC5/LCD_2.c **** 
1284:.\Generated_Source\PSoC5/LCD_2.c **** 
1285:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_GetTxBufferSize
1287:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC5/LCD_2.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 43


1289:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1290:.\Generated_Source\PSoC5/LCD_2.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC5/LCD_2.c ****     *  bytes
1292:.\Generated_Source\PSoC5/LCD_2.c ****     *
1293:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1294:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1295:.\Generated_Source\PSoC5/LCD_2.c ****     *
1296:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1297:.\Generated_Source\PSoC5/LCD_2.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC5/LCD_2.c ****     *
1299:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1300:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC5/LCD_2.c ****     *
1303:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1304:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1305:.\Generated_Source\PSoC5/LCD_2.c ****     *
1306:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
1307:.\Generated_Source\PSoC5/LCD_2.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC5/LCD_2.c ****     *
1309:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC5/LCD_2.c ****     uint8 LCD_2_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC5/LCD_2.c ****                                                             
1312:.\Generated_Source\PSoC5/LCD_2.c ****     {
 1091              		.loc 1 1312 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
1313:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 size;
1314:.\Generated_Source\PSoC5/LCD_2.c **** 
1315:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH)
1316:.\Generated_Source\PSoC5/LCD_2.c **** 
1317:.\Generated_Source\PSoC5/LCD_2.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC5/LCD_2.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_DisableTxInt();
1321:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC5/LCD_2.c **** 
1323:.\Generated_Source\PSoC5/LCD_2.c ****             if(LCD_2_txBufferRead == LCD_2_txBufferWrite)
1324:.\Generated_Source\PSoC5/LCD_2.c ****             {
1325:.\Generated_Source\PSoC5/LCD_2.c ****                 size = 0u;
1326:.\Generated_Source\PSoC5/LCD_2.c ****             }
1327:.\Generated_Source\PSoC5/LCD_2.c ****             else if(LCD_2_txBufferRead < LCD_2_txBufferWrite)
1328:.\Generated_Source\PSoC5/LCD_2.c ****             {
1329:.\Generated_Source\PSoC5/LCD_2.c ****                 size = (LCD_2_txBufferWrite - LCD_2_txBufferRead);
1330:.\Generated_Source\PSoC5/LCD_2.c ****             }
1331:.\Generated_Source\PSoC5/LCD_2.c ****             else
1332:.\Generated_Source\PSoC5/LCD_2.c ****             {
1333:.\Generated_Source\PSoC5/LCD_2.c ****                 size = (LCD_2_TXBUFFERSIZE - LCD_2_txBufferRead) + LCD_2_txBufferWrite;
1334:.\Generated_Source\PSoC5/LCD_2.c ****             }
1335:.\Generated_Source\PSoC5/LCD_2.c **** 
1336:.\Generated_Source\PSoC5/LCD_2.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_EnableTxInt();
1339:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC5/LCD_2.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 44


1341:.\Generated_Source\PSoC5/LCD_2.c ****         #else /* LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1342:.\Generated_Source\PSoC5/LCD_2.c **** 
1343:.\Generated_Source\PSoC5/LCD_2.c ****             size = LCD_2_TXSTATUS_REG;
 1096              		.loc 1 1343 0
 1097 0000 074B     		ldr	r3, .L101
 1098 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1099 0004 DBB2     		uxtb	r3, r3
 1100              	.LVL91:
1344:.\Generated_Source\PSoC5/LCD_2.c **** 
1345:.\Generated_Source\PSoC5/LCD_2.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC5/LCD_2.c ****             if((size & LCD_2_TX_STS_FIFO_FULL) != 0u)
 1101              		.loc 1 1346 0
 1102 0006 13F0040F 		tst	r3, #4
 1103 000a 04D1     		bne	.L99
1347:.\Generated_Source\PSoC5/LCD_2.c ****             {
1348:.\Generated_Source\PSoC5/LCD_2.c ****                 size = LCD_2_FIFO_LENGTH;
1349:.\Generated_Source\PSoC5/LCD_2.c ****             }
1350:.\Generated_Source\PSoC5/LCD_2.c ****             else if((size & LCD_2_TX_STS_FIFO_EMPTY) != 0u)
 1104              		.loc 1 1350 0
 1105 000c 13F0020F 		tst	r3, #2
 1106 0010 03D0     		beq	.L100
1351:.\Generated_Source\PSoC5/LCD_2.c ****             {
1352:.\Generated_Source\PSoC5/LCD_2.c ****                 size = 0u;
 1107              		.loc 1 1352 0
 1108 0012 0020     		movs	r0, #0
 1109 0014 7047     		bx	lr
 1110              	.L99:
1348:.\Generated_Source\PSoC5/LCD_2.c ****                 size = LCD_2_FIFO_LENGTH;
 1111              		.loc 1 1348 0
 1112 0016 0420     		movs	r0, #4
 1113 0018 7047     		bx	lr
 1114              	.L100:
1353:.\Generated_Source\PSoC5/LCD_2.c ****             }
1354:.\Generated_Source\PSoC5/LCD_2.c ****             else
1355:.\Generated_Source\PSoC5/LCD_2.c ****             {
1356:.\Generated_Source\PSoC5/LCD_2.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC5/LCD_2.c ****                 size = 1u;
 1115              		.loc 1 1357 0
 1116 001a 0120     		movs	r0, #1
 1117              	.LVL92:
1358:.\Generated_Source\PSoC5/LCD_2.c ****             }
1359:.\Generated_Source\PSoC5/LCD_2.c **** 
1360:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1361:.\Generated_Source\PSoC5/LCD_2.c **** 
1362:.\Generated_Source\PSoC5/LCD_2.c ****         return(size);
1363:.\Generated_Source\PSoC5/LCD_2.c ****     }
 1118              		.loc 1 1363 0
 1119 001c 7047     		bx	lr
 1120              	.L102:
 1121 001e 00BF     		.align	2
 1122              	.L101:
 1123 0020 64640040 		.word	1073767524
 1124              		.cfi_endproc
 1125              	.LFE25:
 1126              		.size	LCD_2_GetTxBufferSize, .-LCD_2_GetTxBufferSize
 1127              		.section	.text.LCD_2_ClearTxBuffer,"ax",%progbits
 1128              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 45


 1129              		.global	LCD_2_ClearTxBuffer
 1130              		.thumb
 1131              		.thumb_func
 1132              		.type	LCD_2_ClearTxBuffer, %function
 1133              	LCD_2_ClearTxBuffer:
 1134              	.LFB26:
1364:.\Generated_Source\PSoC5/LCD_2.c **** 
1365:.\Generated_Source\PSoC5/LCD_2.c **** 
1366:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_ClearTxBuffer
1368:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC5/LCD_2.c ****     *
1370:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1371:.\Generated_Source\PSoC5/LCD_2.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC5/LCD_2.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC5/LCD_2.c ****     *
1374:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1375:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1376:.\Generated_Source\PSoC5/LCD_2.c ****     *
1377:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1378:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1379:.\Generated_Source\PSoC5/LCD_2.c ****     *
1380:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1381:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC5/LCD_2.c ****     *
1384:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1385:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1386:.\Generated_Source\PSoC5/LCD_2.c ****     *
1387:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
1388:.\Generated_Source\PSoC5/LCD_2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC5/LCD_2.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC5/LCD_2.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC5/LCD_2.c ****     *
1392:.\Generated_Source\PSoC5/LCD_2.c ****     * Side Effects:
1393:.\Generated_Source\PSoC5/LCD_2.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC5/LCD_2.c ****     *
1395:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC5/LCD_2.c ****     {
 1135              		.loc 1 1397 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 0
 1138              		@ frame_needed = 0, uses_anonymous_args = 0
 1139 0000 08B5     		push	{r3, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 3, -8
 1142              		.cfi_offset 14, -4
1398:.\Generated_Source\PSoC5/LCD_2.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC5/LCD_2.c **** 
1400:.\Generated_Source\PSoC5/LCD_2.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC5/LCD_2.c ****         enableInterrupts = CyEnterCriticalSection();
 1143              		.loc 1 1401 0
 1144 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1145              	.LVL93:
1402:.\Generated_Source\PSoC5/LCD_2.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_TXDATA_AUX_CTL_REG |=  LCD_2_TX_FIFO_CLR;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 46


 1146              		.loc 1 1403 0
 1147 0006 064B     		ldr	r3, .L104
 1148 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1149 000a 42F00102 		orr	r2, r2, #1
 1150 000e 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC5/LCD_2.c ****         LCD_2_TXDATA_AUX_CTL_REG &= (uint8)~LCD_2_TX_FIFO_CLR;
 1151              		.loc 1 1404 0
 1152 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1153 0012 02F0FE02 		and	r2, r2, #254
 1154 0016 1A70     		strb	r2, [r3]
1405:.\Generated_Source\PSoC5/LCD_2.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC5/LCD_2.c ****         CyExitCriticalSection(enableInterrupts);
 1155              		.loc 1 1406 0
 1156 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1157              	.LVL94:
 1158 001c 08BD     		pop	{r3, pc}
 1159              	.L105:
 1160 001e 00BF     		.align	2
 1161              	.L104:
 1162 0020 94640040 		.word	1073767572
 1163              		.cfi_endproc
 1164              	.LFE26:
 1165              		.size	LCD_2_ClearTxBuffer, .-LCD_2_ClearTxBuffer
 1166              		.section	.text.LCD_2_SendBreak,"ax",%progbits
 1167              		.align	2
 1168              		.global	LCD_2_SendBreak
 1169              		.thumb
 1170              		.thumb_func
 1171              		.type	LCD_2_SendBreak, %function
 1172              	LCD_2_SendBreak:
 1173              	.LFB27:
1407:.\Generated_Source\PSoC5/LCD_2.c **** 
1408:.\Generated_Source\PSoC5/LCD_2.c ****         #if(LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH)
1409:.\Generated_Source\PSoC5/LCD_2.c **** 
1410:.\Generated_Source\PSoC5/LCD_2.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC5/LCD_2.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_DisableTxInt();
1414:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC5/LCD_2.c **** 
1416:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_txBufferRead = 0u;
1417:.\Generated_Source\PSoC5/LCD_2.c ****             LCD_2_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC5/LCD_2.c **** 
1419:.\Generated_Source\PSoC5/LCD_2.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC5/LCD_2.c ****                 LCD_2_EnableTxInt();
1422:.\Generated_Source\PSoC5/LCD_2.c ****             #endif /* End LCD_2_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC5/LCD_2.c **** 
1424:.\Generated_Source\PSoC5/LCD_2.c ****         #endif /* End LCD_2_TXBUFFERSIZE > LCD_2_FIFO_LENGTH */
1425:.\Generated_Source\PSoC5/LCD_2.c ****     }
1426:.\Generated_Source\PSoC5/LCD_2.c **** 
1427:.\Generated_Source\PSoC5/LCD_2.c **** 
1428:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SendBreak
1430:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC5/LCD_2.c ****     *
1432:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 47


1433:.\Generated_Source\PSoC5/LCD_2.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC5/LCD_2.c ****     *
1435:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1436:.\Generated_Source\PSoC5/LCD_2.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC5/LCD_2.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC5/LCD_2.c ****     *       imediately.
1439:.\Generated_Source\PSoC5/LCD_2.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC5/LCD_2.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC5/LCD_2.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC5/LCD_2.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC5/LCD_2.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC5/LCD_2.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC5/LCD_2.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC5/LCD_2.c ****     *
1447:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1448:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1449:.\Generated_Source\PSoC5/LCD_2.c ****     *
1450:.\Generated_Source\PSoC5/LCD_2.c ****     * Global Variables:
1451:.\Generated_Source\PSoC5/LCD_2.c ****     *  LCD_2_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC5/LCD_2.c ****     *     initialized.
1453:.\Generated_Source\PSoC5/LCD_2.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC5/LCD_2.c ****     *
1455:.\Generated_Source\PSoC5/LCD_2.c ****     * Reentrant:
1456:.\Generated_Source\PSoC5/LCD_2.c ****     *  No.
1457:.\Generated_Source\PSoC5/LCD_2.c ****     *
1458:.\Generated_Source\PSoC5/LCD_2.c ****     * Theory:
1459:.\Generated_Source\PSoC5/LCD_2.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC5/LCD_2.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC5/LCD_2.c ****     *  operation.
1462:.\Generated_Source\PSoC5/LCD_2.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC5/LCD_2.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC5/LCD_2.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC5/LCD_2.c ****     *     complete.
1466:.\Generated_Source\PSoC5/LCD_2.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC5/LCD_2.c ****     *     operation
1468:.\Generated_Source\PSoC5/LCD_2.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC5/LCD_2.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC5/LCD_2.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC5/LCD_2.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC5/LCD_2.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC5/LCD_2.c ****     *     break operation.
1474:.\Generated_Source\PSoC5/LCD_2.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC5/LCD_2.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC5/LCD_2.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC5/LCD_2.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC5/LCD_2.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC5/LCD_2.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC5/LCD_2.c ****     *
1481:.\Generated_Source\PSoC5/LCD_2.c ****     * Side Effects:
1482:.\Generated_Source\PSoC5/LCD_2.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC5/LCD_2.c ****     *
1484:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC5/LCD_2.c ****     {
 1174              		.loc 1 1486 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 48


 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              		@ link register save eliminated.
 1179              	.LVL95:
1487:.\Generated_Source\PSoC5/LCD_2.c **** 
1488:.\Generated_Source\PSoC5/LCD_2.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC5/LCD_2.c ****         if(LCD_2_initVar != 0u)
 1180              		.loc 1 1489 0
 1181 0000 124B     		ldr	r3, .L116
 1182 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1183 0004 0BB3     		cbz	r3, .L106
 1184              	.LBB2:
1490:.\Generated_Source\PSoC5/LCD_2.c ****         {
1491:.\Generated_Source\PSoC5/LCD_2.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC5/LCD_2.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC5/LCD_2.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC5/LCD_2.c **** 
1495:.\Generated_Source\PSoC5/LCD_2.c ****             #if(LCD_2_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC5/LCD_2.c **** 
1497:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_SEND_BREAK) ||
1498:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1500:.\Generated_Source\PSoC5/LCD_2.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_WriteControlRegister(LCD_2_ReadControlRegister() |
1502:.\Generated_Source\PSoC5/LCD_2.c ****                                                           LCD_2_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC5/LCD_2.c **** 
1506:.\Generated_Source\PSoC5/LCD_2.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC5/LCD_2.c ****                     {
1508:.\Generated_Source\PSoC5/LCD_2.c ****                         tmpStat = LCD_2_TXSTATUS_REG;
1509:.\Generated_Source\PSoC5/LCD_2.c ****                     }while((tmpStat & LCD_2_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1511:.\Generated_Source\PSoC5/LCD_2.c **** 
1512:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1515:.\Generated_Source\PSoC5/LCD_2.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC5/LCD_2.c ****                     {
1517:.\Generated_Source\PSoC5/LCD_2.c ****                         tmpStat = LCD_2_TXSTATUS_REG;
1518:.\Generated_Source\PSoC5/LCD_2.c ****                     }while(((uint8)~tmpStat & LCD_2_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1520:.\Generated_Source\PSoC5/LCD_2.c **** 
1521:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_REINIT) ||
1523:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1525:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_WriteControlRegister(LCD_2_ReadControlRegister() &
1526:.\Generated_Source\PSoC5/LCD_2.c ****                                                   (uint8)~LCD_2_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1528:.\Generated_Source\PSoC5/LCD_2.c **** 
1529:.\Generated_Source\PSoC5/LCD_2.c ****             #else /* LCD_2_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC5/LCD_2.c **** 
1531:.\Generated_Source\PSoC5/LCD_2.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC5/LCD_2.c **** 
1533:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_SEND_BREAK) ||
 1185              		.loc 1 1533 0
 1186 0006 08B1     		cbz	r0, .L108
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 49


 1187              		.loc 1 1533 0 is_stmt 0 discriminator 1
 1188 0008 0328     		cmp	r0, #3
 1189 000a 0DD1     		bne	.L109
 1190              	.L108:
1534:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1536:.\Generated_Source\PSoC5/LCD_2.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC5/LCD_2.c ****                     #if( (LCD_2_PARITY_TYPE != LCD_2__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC5/LCD_2.c ****                                         (LCD_2_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_WriteControlRegister(LCD_2_ReadControlRegister() |
1540:.\Generated_Source\PSoC5/LCD_2.c ****                                                               LCD_2_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End LCD_2_PARITY_TYPE != LCD_2__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC5/LCD_2.c **** 
1543:.\Generated_Source\PSoC5/LCD_2.c ****                     #if(LCD_2_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC5/LCD_2.c ****                         tx_period = LCD_2_TXBITCLKTX_COMPLETE_REG;
 1191              		.loc 1 1544 0 is_stmt 1
 1192 000c 104B     		ldr	r3, .L116+4
 1193 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1194 0010 0E4A     		ldr	r2, .L116
 1195 0012 5171     		strb	r1, [r2, #5]
1545:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_TXBITCLKTX_COMPLETE_REG = LCD_2_TXBITCTR_BREAKBITS;
 1196              		.loc 1 1545 0
 1197 0014 6722     		movs	r2, #103
 1198 0016 1A70     		strb	r2, [r3]
1546:.\Generated_Source\PSoC5/LCD_2.c ****                     #else
1547:.\Generated_Source\PSoC5/LCD_2.c ****                         tx_period = LCD_2_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_TXBITCTR_PERIOD_REG = LCD_2_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End LCD_2_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC5/LCD_2.c **** 
1551:.\Generated_Source\PSoC5/LCD_2.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC5/LCD_2.c ****                     LCD_2_TXDATA_REG = 0u;
 1199              		.loc 1 1552 0
 1200 0018 0022     		movs	r2, #0
 1201 001a F33B     		subs	r3, r3, #243
 1202 001c 1A70     		strb	r2, [r3]
1553:.\Generated_Source\PSoC5/LCD_2.c **** 
1554:.\Generated_Source\PSoC5/LCD_2.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC5/LCD_2.c ****                     {
1556:.\Generated_Source\PSoC5/LCD_2.c ****                         tmpStat = LCD_2_TXSTATUS_REG;
 1203              		.loc 1 1556 0
 1204 001e 0D4A     		ldr	r2, .L116+8
 1205              	.L110:
 1206              		.loc 1 1556 0 is_stmt 0 discriminator 1
 1207 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1208              	.LVL96:
1557:.\Generated_Source\PSoC5/LCD_2.c ****                     }while((tmpStat & LCD_2_TX_STS_FIFO_EMPTY) != 0u);
 1209              		.loc 1 1557 0 is_stmt 1 discriminator 1
 1210 0022 13F0020F 		tst	r3, #2
 1211 0026 FBD1     		bne	.L110
 1212              	.LVL97:
 1213              	.L109:
1558:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1559:.\Generated_Source\PSoC5/LCD_2.c **** 
1560:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_WAIT_FOR_COMPLETE_REINIT) ||
 1214              		.loc 1 1560 0
 1215 0028 0128     		cmp	r0, #1
 1216 002a 01D0     		beq	.L111
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 50


 1217              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1218 002c 0328     		cmp	r0, #3
 1219 002e 04D1     		bne	.L112
 1220              	.L111:
1561:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1563:.\Generated_Source\PSoC5/LCD_2.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC5/LCD_2.c ****                     {
1565:.\Generated_Source\PSoC5/LCD_2.c ****                         tmpStat = LCD_2_TXSTATUS_REG;
 1221              		.loc 1 1565 0 is_stmt 1 discriminator 1
 1222 0030 084A     		ldr	r2, .L116+8
 1223              	.L113:
 1224 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1225              	.LVL98:
1566:.\Generated_Source\PSoC5/LCD_2.c ****                     }while(((uint8)~tmpStat & LCD_2_TX_STS_COMPLETE) != 0u);
 1226              		.loc 1 1566 0 discriminator 1
 1227 0034 13F0010F 		tst	r3, #1
 1228 0038 FBD0     		beq	.L113
 1229              	.LVL99:
 1230              	.L112:
1567:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1568:.\Generated_Source\PSoC5/LCD_2.c **** 
1569:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_WAIT_FOR_COMPLETE_REINIT) ||
1570:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_REINIT) ||
 1231              		.loc 1 1570 0
 1232 003a 0138     		subs	r0, r0, #1
 1233              	.LVL100:
 1234 003c C0B2     		uxtb	r0, r0
1569:.\Generated_Source\PSoC5/LCD_2.c ****                 if( (retMode == LCD_2_WAIT_FOR_COMPLETE_REINIT) ||
 1235              		.loc 1 1569 0
 1236 003e 0228     		cmp	r0, #2
 1237 0040 03D8     		bhi	.L106
1571:.\Generated_Source\PSoC5/LCD_2.c ****                     (retMode == LCD_2_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC5/LCD_2.c ****                 {
1573:.\Generated_Source\PSoC5/LCD_2.c **** 
1574:.\Generated_Source\PSoC5/LCD_2.c ****                     #if(LCD_2_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_TXBITCLKTX_COMPLETE_REG = tx_period;
 1238              		.loc 1 1575 0
 1239 0042 024B     		ldr	r3, .L116
 1240 0044 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1241 0046 024B     		ldr	r3, .L116+4
 1242 0048 1A70     		strb	r2, [r3]
 1243              	.L106:
 1244 004a 7047     		bx	lr
 1245              	.L117:
 1246              		.align	2
 1247              	.L116:
 1248 004c 00000000 		.word	.LANCHOR0
 1249 0050 37650040 		.word	1073767735
 1250 0054 64640040 		.word	1073767524
 1251              	.LBE2:
 1252              		.cfi_endproc
 1253              	.LFE27:
 1254              		.size	LCD_2_SendBreak, .-LCD_2_SendBreak
 1255              		.section	.text.LCD_2_SetTxAddressMode,"ax",%progbits
 1256              		.align	2
 1257              		.global	LCD_2_SetTxAddressMode
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 51


 1258              		.thumb
 1259              		.thumb_func
 1260              		.type	LCD_2_SetTxAddressMode, %function
 1261              	LCD_2_SetTxAddressMode:
 1262              	.LFB28:
1576:.\Generated_Source\PSoC5/LCD_2.c ****                     #else
1577:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End LCD_2_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC5/LCD_2.c **** 
1580:.\Generated_Source\PSoC5/LCD_2.c ****                     #if( (LCD_2_PARITY_TYPE != LCD_2__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC5/LCD_2.c ****                          (LCD_2_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC5/LCD_2.c ****                         LCD_2_WriteControlRegister(LCD_2_ReadControlRegister() &
1583:.\Generated_Source\PSoC5/LCD_2.c ****                                                       (uint8)~LCD_2_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC5/LCD_2.c ****                     #endif /* End LCD_2_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC5/LCD_2.c ****                 }
1586:.\Generated_Source\PSoC5/LCD_2.c ****             #endif    /* End LCD_2_HD_ENABLED */
1587:.\Generated_Source\PSoC5/LCD_2.c ****         }
1588:.\Generated_Source\PSoC5/LCD_2.c ****     }
1589:.\Generated_Source\PSoC5/LCD_2.c **** 
1590:.\Generated_Source\PSoC5/LCD_2.c **** 
1591:.\Generated_Source\PSoC5/LCD_2.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC5/LCD_2.c ****     * Function Name: LCD_2_SetTxAddressMode
1593:.\Generated_Source\PSoC5/LCD_2.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC5/LCD_2.c ****     *
1595:.\Generated_Source\PSoC5/LCD_2.c ****     * Summary:
1596:.\Generated_Source\PSoC5/LCD_2.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC5/LCD_2.c ****     *
1598:.\Generated_Source\PSoC5/LCD_2.c ****     * Parameters:
1599:.\Generated_Source\PSoC5/LCD_2.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC5/LCD_2.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC5/LCD_2.c ****     *
1602:.\Generated_Source\PSoC5/LCD_2.c ****     * Return:
1603:.\Generated_Source\PSoC5/LCD_2.c ****     *  None.
1604:.\Generated_Source\PSoC5/LCD_2.c ****     *
1605:.\Generated_Source\PSoC5/LCD_2.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/LCD_2.c ****     void LCD_2_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC5/LCD_2.c ****     {
 1263              		.loc 1 1607 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268              	.LVL101:
 1269 0000 7047     		bx	lr
 1270              		.cfi_endproc
 1271              	.LFE28:
 1272              		.size	LCD_2_SetTxAddressMode, .-LCD_2_SetTxAddressMode
 1273              		.global	LCD_2_rxBufferOverflow
 1274              		.global	LCD_2_rxBufferLoopDetect
 1275              		.global	LCD_2_rxBufferWrite
 1276              		.global	LCD_2_rxBufferRead
 1277              		.comm	LCD_2_rxBuffer,20,4
 1278              		.global	LCD_2_initVar
 1279 0002 00BF     		.bss
 1280              		.set	.LANCHOR0,. + 0
 1281              		.type	LCD_2_initVar, %object
 1282              		.size	LCD_2_initVar, 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 52


 1283              	LCD_2_initVar:
 1284 0000 00       		.space	1
 1285              		.type	LCD_2_rxBufferRead, %object
 1286              		.size	LCD_2_rxBufferRead, 1
 1287              	LCD_2_rxBufferRead:
 1288 0001 00       		.space	1
 1289              		.type	LCD_2_rxBufferWrite, %object
 1290              		.size	LCD_2_rxBufferWrite, 1
 1291              	LCD_2_rxBufferWrite:
 1292 0002 00       		.space	1
 1293              		.type	LCD_2_rxBufferLoopDetect, %object
 1294              		.size	LCD_2_rxBufferLoopDetect, 1
 1295              	LCD_2_rxBufferLoopDetect:
 1296 0003 00       		.space	1
 1297              		.type	LCD_2_rxBufferOverflow, %object
 1298              		.size	LCD_2_rxBufferOverflow, 1
 1299              	LCD_2_rxBufferOverflow:
 1300 0004 00       		.space	1
 1301              		.type	tx_period.5019, %object
 1302              		.size	tx_period.5019, 1
 1303              	tx_period.5019:
 1304 0005 00       		.space	1
 1305              		.text
 1306              	.Letext0:
 1307              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1308              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1309              		.file 4 ".\\Generated_Source\\PSoC5\\LCD_2_IntClock.h"
 1310              		.section	.debug_info,"",%progbits
 1311              	.Ldebug_info0:
 1312 0000 AA070000 		.4byte	0x7aa
 1313 0004 0400     		.2byte	0x4
 1314 0006 00000000 		.4byte	.Ldebug_abbrev0
 1315 000a 04       		.byte	0x4
 1316 000b 01       		.uleb128 0x1
 1317 000c 3E000000 		.4byte	.LASF77
 1318 0010 01       		.byte	0x1
 1319 0011 3E030000 		.4byte	.LASF78
 1320 0015 CD010000 		.4byte	.LASF79
 1321 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1322 001d 00000000 		.4byte	0
 1323 0021 00000000 		.4byte	.Ldebug_line0
 1324 0025 02       		.uleb128 0x2
 1325 0026 01       		.byte	0x1
 1326 0027 06       		.byte	0x6
 1327 0028 21010000 		.4byte	.LASF0
 1328 002c 02       		.uleb128 0x2
 1329 002d 01       		.byte	0x1
 1330 002e 08       		.byte	0x8
 1331 002f 8E030000 		.4byte	.LASF1
 1332 0033 02       		.uleb128 0x2
 1333 0034 02       		.byte	0x2
 1334 0035 05       		.byte	0x5
 1335 0036 9C030000 		.4byte	.LASF2
 1336 003a 02       		.uleb128 0x2
 1337 003b 02       		.byte	0x2
 1338 003c 07       		.byte	0x7
 1339 003d 39020000 		.4byte	.LASF3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 53


 1340 0041 02       		.uleb128 0x2
 1341 0042 04       		.byte	0x4
 1342 0043 05       		.byte	0x5
 1343 0044 3B010000 		.4byte	.LASF4
 1344 0048 02       		.uleb128 0x2
 1345 0049 04       		.byte	0x4
 1346 004a 07       		.byte	0x7
 1347 004b BB010000 		.4byte	.LASF5
 1348 004f 02       		.uleb128 0x2
 1349 0050 08       		.byte	0x8
 1350 0051 05       		.byte	0x5
 1351 0052 13010000 		.4byte	.LASF6
 1352 0056 02       		.uleb128 0x2
 1353 0057 08       		.byte	0x8
 1354 0058 07       		.byte	0x7
 1355 0059 F0000000 		.4byte	.LASF7
 1356 005d 03       		.uleb128 0x3
 1357 005e 04       		.byte	0x4
 1358 005f 05       		.byte	0x5
 1359 0060 696E7400 		.ascii	"int\000"
 1360 0064 02       		.uleb128 0x2
 1361 0065 04       		.byte	0x4
 1362 0066 07       		.byte	0x7
 1363 0067 AE010000 		.4byte	.LASF8
 1364 006b 04       		.uleb128 0x4
 1365 006c 57010000 		.4byte	.LASF9
 1366 0070 02       		.byte	0x2
 1367 0071 B4       		.byte	0xb4
 1368 0072 2C000000 		.4byte	0x2c
 1369 0076 04       		.uleb128 0x4
 1370 0077 00000000 		.4byte	.LASF10
 1371 007b 02       		.byte	0x2
 1372 007c B5       		.byte	0xb5
 1373 007d 3A000000 		.4byte	0x3a
 1374 0081 04       		.uleb128 0x4
 1375 0082 86010000 		.4byte	.LASF11
 1376 0086 02       		.byte	0x2
 1377 0087 B6       		.byte	0xb6
 1378 0088 48000000 		.4byte	0x48
 1379 008c 02       		.uleb128 0x2
 1380 008d 04       		.byte	0x4
 1381 008e 04       		.byte	0x4
 1382 008f 73030000 		.4byte	.LASF12
 1383 0093 02       		.uleb128 0x2
 1384 0094 08       		.byte	0x8
 1385 0095 04       		.byte	0x4
 1386 0096 73010000 		.4byte	.LASF13
 1387 009a 04       		.uleb128 0x4
 1388 009b 6D040000 		.4byte	.LASF14
 1389 009f 02       		.byte	0x2
 1390 00a0 C5       		.byte	0xc5
 1391 00a1 A5000000 		.4byte	0xa5
 1392 00a5 02       		.uleb128 0x2
 1393 00a6 01       		.byte	0x1
 1394 00a7 08       		.byte	0x8
 1395 00a8 17040000 		.4byte	.LASF15
 1396 00ac 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 54


 1397 00ad 89030000 		.4byte	.LASF16
 1398 00b1 02       		.byte	0x2
 1399 00b2 5E01     		.2byte	0x15e
 1400 00b4 B8000000 		.4byte	0xb8
 1401 00b8 06       		.uleb128 0x6
 1402 00b9 6B000000 		.4byte	0x6b
 1403 00bd 05       		.uleb128 0x5
 1404 00be 01030000 		.4byte	.LASF17
 1405 00c2 02       		.byte	0x2
 1406 00c3 6001     		.2byte	0x160
 1407 00c5 C9000000 		.4byte	0xc9
 1408 00c9 06       		.uleb128 0x6
 1409 00ca 81000000 		.4byte	0x81
 1410 00ce 05       		.uleb128 0x5
 1411 00cf 3E040000 		.4byte	.LASF18
 1412 00d3 02       		.byte	0x2
 1413 00d4 7001     		.2byte	0x170
 1414 00d6 DA000000 		.4byte	0xda
 1415 00da 07       		.uleb128 0x7
 1416 00db 04       		.byte	0x4
 1417 00dc E0000000 		.4byte	0xe0
 1418 00e0 08       		.uleb128 0x8
 1419 00e1 02       		.uleb128 0x2
 1420 00e2 04       		.byte	0x4
 1421 00e3 07       		.byte	0x7
 1422 00e4 2D030000 		.4byte	.LASF19
 1423 00e8 09       		.uleb128 0x9
 1424 00e9 38050000 		.4byte	.LASF20
 1425 00ed 01       		.byte	0x1
 1426 00ee 65       		.byte	0x65
 1427 00ef 00000000 		.4byte	.LFB1
 1428 00f3 3C000000 		.4byte	.LFE1-.LFB1
 1429 00f7 01       		.uleb128 0x1
 1430 00f8 9C       		.byte	0x9c
 1431 00f9 25010000 		.4byte	0x125
 1432 00fd 0A       		.uleb128 0xa
 1433 00fe 0A000000 		.4byte	.LVL0
 1434 0102 53070000 		.4byte	0x753
 1435 0106 10010000 		.4byte	0x110
 1436 010a 0B       		.uleb128 0xb
 1437 010b 01       		.uleb128 0x1
 1438 010c 50       		.byte	0x50
 1439 010d 01       		.uleb128 0x1
 1440 010e 32       		.byte	0x32
 1441 010f 00       		.byte	0
 1442 0110 0C       		.uleb128 0xc
 1443 0111 12000000 		.4byte	.LVL1
 1444 0115 6D070000 		.4byte	0x76d
 1445 0119 0B       		.uleb128 0xb
 1446 011a 01       		.uleb128 0x1
 1447 011b 51       		.byte	0x51
 1448 011c 01       		.uleb128 0x1
 1449 011d 37       		.byte	0x37
 1450 011e 0B       		.uleb128 0xb
 1451 011f 01       		.uleb128 0x1
 1452 0120 50       		.byte	0x50
 1453 0121 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 55


 1454 0122 32       		.byte	0x32
 1455 0123 00       		.byte	0
 1456 0124 00       		.byte	0
 1457 0125 09       		.uleb128 0x9
 1458 0126 0F030000 		.4byte	.LASF21
 1459 012a 01       		.byte	0x1
 1460 012b AE       		.byte	0xae
 1461 012c 00000000 		.4byte	.LFB2
 1462 0130 44000000 		.4byte	.LFE2-.LFB2
 1463 0134 01       		.uleb128 0x1
 1464 0135 9C       		.byte	0x9c
 1465 0136 6C010000 		.4byte	0x16c
 1466 013a 0D       		.uleb128 0xd
 1467 013b 88040000 		.4byte	.LASF27
 1468 013f 01       		.byte	0x1
 1469 0140 B0       		.byte	0xb0
 1470 0141 6B000000 		.4byte	0x6b
 1471 0145 00000000 		.4byte	.LLST0
 1472 0149 0E       		.uleb128 0xe
 1473 014a 06000000 		.4byte	.LVL2
 1474 014e 83070000 		.4byte	0x783
 1475 0152 0E       		.uleb128 0xe
 1476 0153 30000000 		.4byte	.LVL4
 1477 0157 8E070000 		.4byte	0x78e
 1478 015b 0C       		.uleb128 0xc
 1479 015c 36000000 		.4byte	.LVL5
 1480 0160 95070000 		.4byte	0x795
 1481 0164 0B       		.uleb128 0xb
 1482 0165 01       		.uleb128 0x1
 1483 0166 50       		.byte	0x50
 1484 0167 02       		.uleb128 0x2
 1485 0168 74       		.byte	0x74
 1486 0169 00       		.sleb128 0
 1487 016a 00       		.byte	0
 1488 016b 00       		.byte	0
 1489 016c 09       		.uleb128 0x9
 1490 016d 07010000 		.4byte	.LASF22
 1491 0171 01       		.byte	0x1
 1492 0172 49       		.byte	0x49
 1493 0173 00000000 		.4byte	.LFB0
 1494 0177 1C000000 		.4byte	.LFE0-.LFB0
 1495 017b 01       		.uleb128 0x1
 1496 017c 9C       		.byte	0x9c
 1497 017d 94010000 		.4byte	0x194
 1498 0181 0E       		.uleb128 0xe
 1499 0182 0C000000 		.4byte	.LVL7
 1500 0186 E8000000 		.4byte	0xe8
 1501 018a 0E       		.uleb128 0xe
 1502 018b 16000000 		.4byte	.LVL8
 1503 018f 25010000 		.4byte	0x125
 1504 0193 00       		.byte	0
 1505 0194 0F       		.uleb128 0xf
 1506 0195 B9020000 		.4byte	.LASF51
 1507 0199 01       		.byte	0x1
 1508 019a 1901     		.2byte	0x119
 1509 019c 6B000000 		.4byte	0x6b
 1510 01a0 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 56


 1511 01a4 04000000 		.4byte	.LFE4-.LFB4
 1512 01a8 01       		.uleb128 0x1
 1513 01a9 9C       		.byte	0x9c
 1514 01aa 10       		.uleb128 0x10
 1515 01ab D3020000 		.4byte	.LASF23
 1516 01af 01       		.byte	0x1
 1517 01b0 3101     		.2byte	0x131
 1518 01b2 00000000 		.4byte	.LFB5
 1519 01b6 02000000 		.4byte	.LFE5-.LFB5
 1520 01ba 01       		.uleb128 0x1
 1521 01bb 9C       		.byte	0x9c
 1522 01bc CF010000 		.4byte	0x1cf
 1523 01c0 11       		.uleb128 0x11
 1524 01c1 8D010000 		.4byte	.LASF29
 1525 01c5 01       		.byte	0x1
 1526 01c6 3101     		.2byte	0x131
 1527 01c8 6B000000 		.4byte	0x6b
 1528 01cc 01       		.uleb128 0x1
 1529 01cd 50       		.byte	0x50
 1530 01ce 00       		.byte	0
 1531 01cf 12       		.uleb128 0x12
 1532 01d0 A7020000 		.4byte	.LASF24
 1533 01d4 01       		.byte	0x1
 1534 01d5 5001     		.2byte	0x150
 1535 01d7 00000000 		.4byte	.LFB6
 1536 01db 0C000000 		.4byte	.LFE6-.LFB6
 1537 01df 01       		.uleb128 0x1
 1538 01e0 9C       		.byte	0x9c
 1539 01e1 12       		.uleb128 0x12
 1540 01e2 44010000 		.4byte	.LASF25
 1541 01e6 01       		.byte	0x1
 1542 01e7 6701     		.2byte	0x167
 1543 01e9 00000000 		.4byte	.LFB7
 1544 01ed 0C000000 		.4byte	.LFE7-.LFB7
 1545 01f1 01       		.uleb128 0x1
 1546 01f2 9C       		.byte	0x9c
 1547 01f3 09       		.uleb128 0x9
 1548 01f4 68030000 		.4byte	.LASF26
 1549 01f8 01       		.byte	0x1
 1550 01f9 E3       		.byte	0xe3
 1551 01fa 00000000 		.4byte	.LFB3
 1552 01fe 44000000 		.4byte	.LFE3-.LFB3
 1553 0202 01       		.uleb128 0x1
 1554 0203 9C       		.byte	0x9c
 1555 0204 43020000 		.4byte	0x243
 1556 0208 0D       		.uleb128 0xd
 1557 0209 88040000 		.4byte	.LASF27
 1558 020d 01       		.byte	0x1
 1559 020e E5       		.byte	0xe5
 1560 020f 6B000000 		.4byte	0x6b
 1561 0213 1E000000 		.4byte	.LLST1
 1562 0217 0E       		.uleb128 0xe
 1563 0218 06000000 		.4byte	.LVL10
 1564 021c 83070000 		.4byte	0x783
 1565 0220 0E       		.uleb128 0xe
 1566 0221 16000000 		.4byte	.LVL12
 1567 0225 A6070000 		.4byte	0x7a6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 57


 1568 0229 0E       		.uleb128 0xe
 1569 022a 24000000 		.4byte	.LVL13
 1570 022e E1010000 		.4byte	0x1e1
 1571 0232 0C       		.uleb128 0xc
 1572 0233 34000000 		.4byte	.LVL14
 1573 0237 95070000 		.4byte	0x795
 1574 023b 0B       		.uleb128 0xb
 1575 023c 01       		.uleb128 0x1
 1576 023d 50       		.byte	0x50
 1577 023e 02       		.uleb128 0x2
 1578 023f 74       		.byte	0x74
 1579 0240 00       		.sleb128 0
 1580 0241 00       		.byte	0
 1581 0242 00       		.byte	0
 1582 0243 10       		.uleb128 0x10
 1583 0244 B4030000 		.4byte	.LASF28
 1584 0248 01       		.byte	0x1
 1585 0249 8101     		.2byte	0x181
 1586 024b 00000000 		.4byte	.LFB8
 1587 024f 0C000000 		.4byte	.LFE8-.LFB8
 1588 0253 01       		.uleb128 0x1
 1589 0254 9C       		.byte	0x9c
 1590 0255 68020000 		.4byte	0x268
 1591 0259 11       		.uleb128 0x11
 1592 025a 8D020000 		.4byte	.LASF30
 1593 025e 01       		.byte	0x1
 1594 025f 8101     		.2byte	0x181
 1595 0261 6B000000 		.4byte	0x6b
 1596 0265 01       		.uleb128 0x1
 1597 0266 50       		.byte	0x50
 1598 0267 00       		.byte	0
 1599 0268 13       		.uleb128 0x13
 1600 0269 1C030000 		.4byte	.LASF34
 1601 026d 01       		.byte	0x1
 1602 026e A201     		.2byte	0x1a2
 1603 0270 6B000000 		.4byte	0x6b
 1604 0274 00000000 		.4byte	.LFB9
 1605 0278 5C000000 		.4byte	.LFE9-.LFB9
 1606 027c 01       		.uleb128 0x1
 1607 027d 9C       		.byte	0x9c
 1608 027e C5020000 		.4byte	0x2c5
 1609 0282 14       		.uleb128 0x14
 1610 0283 10040000 		.4byte	.LASF31
 1611 0287 01       		.byte	0x1
 1612 0288 A401     		.2byte	0x1a4
 1613 028a 6B000000 		.4byte	0x6b
 1614 028e 3C000000 		.4byte	.LLST2
 1615 0292 14       		.uleb128 0x14
 1616 0293 72020000 		.4byte	.LASF32
 1617 0297 01       		.byte	0x1
 1618 0298 A701     		.2byte	0x1a7
 1619 029a 6B000000 		.4byte	0x6b
 1620 029e 65000000 		.4byte	.LLST3
 1621 02a2 14       		.uleb128 0x14
 1622 02a3 16000000 		.4byte	.LASF33
 1623 02a7 01       		.byte	0x1
 1624 02a8 A801     		.2byte	0x1a8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 58


 1625 02aa 6B000000 		.4byte	0x6b
 1626 02ae 9B000000 		.4byte	.LLST4
 1627 02b2 0E       		.uleb128 0xe
 1628 02b3 06000000 		.4byte	.LVL17
 1629 02b7 E1010000 		.4byte	0x1e1
 1630 02bb 0E       		.uleb128 0xe
 1631 02bc 4A000000 		.4byte	.LVL27
 1632 02c0 CF010000 		.4byte	0x1cf
 1633 02c4 00       		.byte	0
 1634 02c5 13       		.uleb128 0x13
 1635 02c6 4B040000 		.4byte	.LASF35
 1636 02ca 01       		.byte	0x1
 1637 02cb FD01     		.2byte	0x1fd
 1638 02cd 6B000000 		.4byte	0x6b
 1639 02d1 00000000 		.4byte	.LFB10
 1640 02d5 28000000 		.4byte	.LFE10-.LFB10
 1641 02d9 01       		.uleb128 0x1
 1642 02da 9C       		.byte	0x9c
 1643 02db EE020000 		.4byte	0x2ee
 1644 02df 15       		.uleb128 0x15
 1645 02e0 99040000 		.4byte	.LASF36
 1646 02e4 01       		.byte	0x1
 1647 02e5 FF01     		.2byte	0x1ff
 1648 02e7 6B000000 		.4byte	0x6b
 1649 02eb 01       		.uleb128 0x1
 1650 02ec 50       		.byte	0x50
 1651 02ed 00       		.byte	0
 1652 02ee 13       		.uleb128 0x13
 1653 02ef A6030000 		.4byte	.LASF37
 1654 02f3 01       		.byte	0x1
 1655 02f4 2C02     		.2byte	0x22c
 1656 02f6 6B000000 		.4byte	0x6b
 1657 02fa 00000000 		.4byte	.LFB11
 1658 02fe 78000000 		.4byte	.LFE11-.LFB11
 1659 0302 01       		.uleb128 0x1
 1660 0303 9C       		.byte	0x9c
 1661 0304 5B030000 		.4byte	0x35b
 1662 0308 14       		.uleb128 0x14
 1663 0309 10040000 		.4byte	.LASF31
 1664 030d 01       		.byte	0x1
 1665 030e 2E02     		.2byte	0x22e
 1666 0310 6B000000 		.4byte	0x6b
 1667 0314 AE000000 		.4byte	.LLST5
 1668 0318 14       		.uleb128 0x14
 1669 0319 5F030000 		.4byte	.LASF38
 1670 031d 01       		.byte	0x1
 1671 031e 2F02     		.2byte	0x22f
 1672 0320 6B000000 		.4byte	0x6b
 1673 0324 06010000 		.4byte	.LLST6
 1674 0328 14       		.uleb128 0x14
 1675 0329 72020000 		.4byte	.LASF32
 1676 032d 01       		.byte	0x1
 1677 032e 3202     		.2byte	0x232
 1678 0330 6B000000 		.4byte	0x6b
 1679 0334 19010000 		.4byte	.LLST7
 1680 0338 14       		.uleb128 0x14
 1681 0339 16000000 		.4byte	.LASF33
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 59


 1682 033d 01       		.byte	0x1
 1683 033e 3302     		.2byte	0x233
 1684 0340 6B000000 		.4byte	0x6b
 1685 0344 5A010000 		.4byte	.LLST8
 1686 0348 0E       		.uleb128 0xe
 1687 0349 06000000 		.4byte	.LVL33
 1688 034d E1010000 		.4byte	0x1e1
 1689 0351 0E       		.uleb128 0xe
 1690 0352 64000000 		.4byte	.LVL48
 1691 0356 CF010000 		.4byte	0x1cf
 1692 035a 00       		.byte	0
 1693 035b 13       		.uleb128 0x13
 1694 035c 2D010000 		.4byte	.LASF39
 1695 0360 01       		.byte	0x1
 1696 0361 9202     		.2byte	0x292
 1697 0363 76000000 		.4byte	0x76
 1698 0367 00000000 		.4byte	.LFB12
 1699 036b 12000000 		.4byte	.LFE12-.LFB12
 1700 036f 01       		.uleb128 0x1
 1701 0370 9C       		.byte	0x9c
 1702 0371 88030000 		.4byte	0x388
 1703 0375 0E       		.uleb128 0xe
 1704 0376 06000000 		.4byte	.LVL50
 1705 037a C5020000 		.4byte	0x2c5
 1706 037e 0E       		.uleb128 0xe
 1707 037f 0C000000 		.4byte	.LVL51
 1708 0383 68020000 		.4byte	0x268
 1709 0387 00       		.byte	0
 1710 0388 13       		.uleb128 0x13
 1711 0389 22050000 		.4byte	.LASF40
 1712 038d 01       		.byte	0x1
 1713 038e B302     		.2byte	0x2b3
 1714 0390 6B000000 		.4byte	0x6b
 1715 0394 00000000 		.4byte	.LFB13
 1716 0398 54000000 		.4byte	.LFE13-.LFB13
 1717 039c 01       		.uleb128 0x1
 1718 039d 9C       		.byte	0x9c
 1719 039e C5030000 		.4byte	0x3c5
 1720 03a2 14       		.uleb128 0x14
 1721 03a3 34020000 		.4byte	.LASF41
 1722 03a7 01       		.byte	0x1
 1723 03a8 B602     		.2byte	0x2b6
 1724 03aa 6B000000 		.4byte	0x6b
 1725 03ae 6D010000 		.4byte	.LLST9
 1726 03b2 0E       		.uleb128 0xe
 1727 03b3 06000000 		.4byte	.LVL52
 1728 03b7 E1010000 		.4byte	0x1e1
 1729 03bb 0E       		.uleb128 0xe
 1730 03bc 4C000000 		.4byte	.LVL58
 1731 03c0 CF010000 		.4byte	0x1cf
 1732 03c4 00       		.byte	0
 1733 03c5 10       		.uleb128 0x10
 1734 03c6 DC000000 		.4byte	.LASF42
 1735 03ca 01       		.byte	0x1
 1736 03cb 0303     		.2byte	0x303
 1737 03cd 00000000 		.4byte	.LFB14
 1738 03d1 3C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 60


 1739 03d5 01       		.uleb128 0x1
 1740 03d6 9C       		.byte	0x9c
 1741 03d7 10040000 		.4byte	0x410
 1742 03db 14       		.uleb128 0x14
 1743 03dc 88040000 		.4byte	.LASF27
 1744 03e0 01       		.byte	0x1
 1745 03e1 0503     		.2byte	0x305
 1746 03e3 6B000000 		.4byte	0x6b
 1747 03e7 A1010000 		.4byte	.LLST10
 1748 03eb 0E       		.uleb128 0xe
 1749 03ec 06000000 		.4byte	.LVL60
 1750 03f0 83070000 		.4byte	0x783
 1751 03f4 0E       		.uleb128 0xe
 1752 03f5 1C000000 		.4byte	.LVL61
 1753 03f9 95070000 		.4byte	0x795
 1754 03fd 0E       		.uleb128 0xe
 1755 03fe 20000000 		.4byte	.LVL62
 1756 0402 E1010000 		.4byte	0x1e1
 1757 0406 0E       		.uleb128 0xe
 1758 0407 30000000 		.4byte	.LVL63
 1759 040b CF010000 		.4byte	0x1cf
 1760 040f 00       		.byte	0
 1761 0410 10       		.uleb128 0x10
 1762 0411 AE040000 		.4byte	.LASF43
 1763 0415 01       		.byte	0x1
 1764 0416 4003     		.2byte	0x340
 1765 0418 00000000 		.4byte	.LFB15
 1766 041c 02000000 		.4byte	.LFE15-.LFB15
 1767 0420 01       		.uleb128 0x1
 1768 0421 9C       		.byte	0x9c
 1769 0422 35040000 		.4byte	0x435
 1770 0426 11       		.uleb128 0x11
 1771 0427 7A010000 		.4byte	.LASF44
 1772 042b 01       		.byte	0x1
 1773 042c 4003     		.2byte	0x340
 1774 042e 6B000000 		.4byte	0x6b
 1775 0432 01       		.uleb128 0x1
 1776 0433 50       		.byte	0x50
 1777 0434 00       		.byte	0
 1778 0435 10       		.uleb128 0x10
 1779 0436 F0040000 		.4byte	.LASF45
 1780 043a 01       		.byte	0x1
 1781 043b 6503     		.2byte	0x365
 1782 043d 00000000 		.4byte	.LFB16
 1783 0441 0C000000 		.4byte	.LFE16-.LFB16
 1784 0445 01       		.uleb128 0x1
 1785 0446 9C       		.byte	0x9c
 1786 0447 5A040000 		.4byte	0x45a
 1787 044b 11       		.uleb128 0x11
 1788 044c 36030000 		.4byte	.LASF46
 1789 0450 01       		.byte	0x1
 1790 0451 6503     		.2byte	0x365
 1791 0453 6B000000 		.4byte	0x6b
 1792 0457 01       		.uleb128 0x1
 1793 0458 50       		.byte	0x50
 1794 0459 00       		.byte	0
 1795 045a 10       		.uleb128 0x10
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 61


 1796 045b 04050000 		.4byte	.LASF47
 1797 045f 01       		.byte	0x1
 1798 0460 7A03     		.2byte	0x37a
 1799 0462 00000000 		.4byte	.LFB17
 1800 0466 0C000000 		.4byte	.LFE17-.LFB17
 1801 046a 01       		.uleb128 0x1
 1802 046b 9C       		.byte	0x9c
 1803 046c 7F040000 		.4byte	0x47f
 1804 0470 11       		.uleb128 0x11
 1805 0471 36030000 		.4byte	.LASF46
 1806 0475 01       		.byte	0x1
 1807 0476 7A03     		.2byte	0x37a
 1808 0478 6B000000 		.4byte	0x6b
 1809 047c 01       		.uleb128 0x1
 1810 047d 50       		.byte	0x50
 1811 047e 00       		.byte	0
 1812 047f 10       		.uleb128 0x10
 1813 0480 43050000 		.4byte	.LASF48
 1814 0484 01       		.byte	0x1
 1815 0485 C803     		.2byte	0x3c8
 1816 0487 00000000 		.4byte	.LFB18
 1817 048b 0C000000 		.4byte	.LFE18-.LFB18
 1818 048f 01       		.uleb128 0x1
 1819 0490 9C       		.byte	0x9c
 1820 0491 A4040000 		.4byte	0x4a4
 1821 0495 11       		.uleb128 0x11
 1822 0496 8D020000 		.4byte	.LASF30
 1823 049a 01       		.byte	0x1
 1824 049b C803     		.2byte	0x3c8
 1825 049d 6B000000 		.4byte	0x6b
 1826 04a1 01       		.uleb128 0x1
 1827 04a2 50       		.byte	0x50
 1828 04a3 00       		.byte	0
 1829 04a4 10       		.uleb128 0x10
 1830 04a5 C5040000 		.4byte	.LASF49
 1831 04a9 01       		.byte	0x1
 1832 04aa EA03     		.2byte	0x3ea
 1833 04ac 00000000 		.4byte	.LFB19
 1834 04b0 14000000 		.4byte	.LFE19-.LFB19
 1835 04b4 01       		.uleb128 0x1
 1836 04b5 9C       		.byte	0x9c
 1837 04b6 C9040000 		.4byte	0x4c9
 1838 04ba 11       		.uleb128 0x11
 1839 04bb BA000000 		.4byte	.LASF50
 1840 04bf 01       		.byte	0x1
 1841 04c0 EA03     		.2byte	0x3ea
 1842 04c2 6B000000 		.4byte	0x6b
 1843 04c6 01       		.uleb128 0x1
 1844 04c7 50       		.byte	0x50
 1845 04c8 00       		.byte	0
 1846 04c9 0F       		.uleb128 0xf
 1847 04ca EE020000 		.4byte	.LASF52
 1848 04ce 01       		.byte	0x1
 1849 04cf 2E04     		.2byte	0x42e
 1850 04d1 6B000000 		.4byte	0x6b
 1851 04d5 00000000 		.4byte	.LFB20
 1852 04d9 0C000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 62


 1853 04dd 01       		.uleb128 0x1
 1854 04de 9C       		.byte	0x9c
 1855 04df 10       		.uleb128 0x10
 1856 04e0 1C040000 		.4byte	.LASF53
 1857 04e4 01       		.byte	0x1
 1858 04e5 5204     		.2byte	0x452
 1859 04e7 00000000 		.4byte	.LFB21
 1860 04eb 18000000 		.4byte	.LFE21-.LFB21
 1861 04ef 01       		.uleb128 0x1
 1862 04f0 9C       		.byte	0x9c
 1863 04f1 04050000 		.4byte	0x504
 1864 04f5 11       		.uleb128 0x11
 1865 04f6 BA000000 		.4byte	.LASF50
 1866 04fa 01       		.byte	0x1
 1867 04fb 5204     		.2byte	0x452
 1868 04fd 6B000000 		.4byte	0x6b
 1869 0501 01       		.uleb128 0x1
 1870 0502 50       		.byte	0x50
 1871 0503 00       		.byte	0
 1872 0504 10       		.uleb128 0x10
 1873 0505 79030000 		.4byte	.LASF54
 1874 0509 01       		.byte	0x1
 1875 050a AE04     		.2byte	0x4ae
 1876 050c 00000000 		.4byte	.LFB22
 1877 0510 24000000 		.4byte	.LFE22-.LFB22
 1878 0514 01       		.uleb128 0x1
 1879 0515 9C       		.byte	0x9c
 1880 0516 44050000 		.4byte	0x544
 1881 051a 16       		.uleb128 0x16
 1882 051b C5000000 		.4byte	.LASF55
 1883 051f 01       		.byte	0x1
 1884 0520 AE04     		.2byte	0x4ae
 1885 0522 44050000 		.4byte	0x544
 1886 0526 B4010000 		.4byte	.LLST11
 1887 052a 14       		.uleb128 0x14
 1888 052b 18050000 		.4byte	.LASF56
 1889 052f 01       		.byte	0x1
 1890 0530 B004     		.2byte	0x4b0
 1891 0532 76000000 		.4byte	0x76
 1892 0536 F6010000 		.4byte	.LLST12
 1893 053a 0E       		.uleb128 0xe
 1894 053b 10000000 		.4byte	.LVL73
 1895 053f DF040000 		.4byte	0x4df
 1896 0543 00       		.byte	0
 1897 0544 07       		.uleb128 0x7
 1898 0545 04       		.byte	0x4
 1899 0546 4A050000 		.4byte	0x54a
 1900 054a 17       		.uleb128 0x17
 1901 054b 9A000000 		.4byte	0x9a
 1902 054f 10       		.uleb128 0x10
 1903 0550 5E040000 		.4byte	.LASF57
 1904 0554 01       		.byte	0x1
 1905 0555 D404     		.2byte	0x4d4
 1906 0557 00000000 		.4byte	.LFB23
 1907 055b 24000000 		.4byte	.LFE23-.LFB23
 1908 055f 01       		.uleb128 0x1
 1909 0560 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 63


 1910 0561 9F050000 		.4byte	0x59f
 1911 0565 16       		.uleb128 0x16
 1912 0566 C5000000 		.4byte	.LASF55
 1913 056a 01       		.byte	0x1
 1914 056b D404     		.2byte	0x4d4
 1915 056d 9F050000 		.4byte	0x59f
 1916 0571 44020000 		.4byte	.LLST13
 1917 0575 16       		.uleb128 0x16
 1918 0576 E1030000 		.4byte	.LASF58
 1919 057a 01       		.byte	0x1
 1920 057b D404     		.2byte	0x4d4
 1921 057d 6B000000 		.4byte	0x6b
 1922 0581 70020000 		.4byte	.LLST14
 1923 0585 14       		.uleb128 0x14
 1924 0586 18050000 		.4byte	.LASF56
 1925 058a 01       		.byte	0x1
 1926 058b D704     		.2byte	0x4d7
 1927 058d 6B000000 		.4byte	0x6b
 1928 0591 91020000 		.4byte	.LLST15
 1929 0595 0E       		.uleb128 0xe
 1930 0596 14000000 		.4byte	.LVL82
 1931 059a DF040000 		.4byte	0x4df
 1932 059e 00       		.byte	0
 1933 059f 07       		.uleb128 0x7
 1934 05a0 04       		.byte	0x4
 1935 05a1 A5050000 		.4byte	0x5a5
 1936 05a5 17       		.uleb128 0x17
 1937 05a6 6B000000 		.4byte	0x6b
 1938 05aa 10       		.uleb128 0x10
 1939 05ab A0040000 		.4byte	.LASF59
 1940 05af 01       		.byte	0x1
 1941 05b0 F904     		.2byte	0x4f9
 1942 05b2 00000000 		.4byte	.LFB24
 1943 05b6 20000000 		.4byte	.LFE24-.LFB24
 1944 05ba 01       		.uleb128 0x1
 1945 05bb 9C       		.byte	0x9c
 1946 05bc FC050000 		.4byte	0x5fc
 1947 05c0 16       		.uleb128 0x16
 1948 05c1 BA000000 		.4byte	.LASF50
 1949 05c5 01       		.byte	0x1
 1950 05c6 F904     		.2byte	0x4f9
 1951 05c8 6B000000 		.4byte	0x6b
 1952 05cc C8020000 		.4byte	.LLST16
 1953 05d0 0E       		.uleb128 0xe
 1954 05d1 0C000000 		.4byte	.LVL88
 1955 05d5 DF040000 		.4byte	0x4df
 1956 05d9 0A       		.uleb128 0xa
 1957 05da 12000000 		.4byte	.LVL89
 1958 05de DF040000 		.4byte	0x4df
 1959 05e2 EC050000 		.4byte	0x5ec
 1960 05e6 0B       		.uleb128 0xb
 1961 05e7 01       		.uleb128 0x1
 1962 05e8 50       		.byte	0x50
 1963 05e9 01       		.uleb128 0x1
 1964 05ea 3D       		.byte	0x3d
 1965 05eb 00       		.byte	0
 1966 05ec 0C       		.uleb128 0xc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 64


 1967 05ed 18000000 		.4byte	.LVL90
 1968 05f1 DF040000 		.4byte	0x4df
 1969 05f5 0B       		.uleb128 0xb
 1970 05f6 01       		.uleb128 0x1
 1971 05f7 50       		.byte	0x50
 1972 05f8 01       		.uleb128 0x1
 1973 05f9 3A       		.byte	0x3a
 1974 05fa 00       		.byte	0
 1975 05fb 00       		.byte	0
 1976 05fc 13       		.uleb128 0x13
 1977 05fd 5D010000 		.4byte	.LASF60
 1978 0601 01       		.byte	0x1
 1979 0602 1E05     		.2byte	0x51e
 1980 0604 6B000000 		.4byte	0x6b
 1981 0608 00000000 		.4byte	.LFB25
 1982 060c 24000000 		.4byte	.LFE25-.LFB25
 1983 0610 01       		.uleb128 0x1
 1984 0611 9C       		.byte	0x9c
 1985 0612 27060000 		.4byte	0x627
 1986 0616 14       		.uleb128 0x14
 1987 0617 34020000 		.4byte	.LASF41
 1988 061b 01       		.byte	0x1
 1989 061c 2105     		.2byte	0x521
 1990 061e 6B000000 		.4byte	0x6b
 1991 0622 E9020000 		.4byte	.LLST17
 1992 0626 00       		.byte	0
 1993 0627 10       		.uleb128 0x10
 1994 0628 2A040000 		.4byte	.LASF61
 1995 062c 01       		.byte	0x1
 1996 062d 7405     		.2byte	0x574
 1997 062f 00000000 		.4byte	.LFB26
 1998 0633 24000000 		.4byte	.LFE26-.LFB26
 1999 0637 01       		.uleb128 0x1
 2000 0638 9C       		.byte	0x9c
 2001 0639 60060000 		.4byte	0x660
 2002 063d 14       		.uleb128 0x14
 2003 063e 88040000 		.4byte	.LASF27
 2004 0642 01       		.byte	0x1
 2005 0643 7605     		.2byte	0x576
 2006 0645 6B000000 		.4byte	0x6b
 2007 0649 07030000 		.4byte	.LLST18
 2008 064d 0E       		.uleb128 0xe
 2009 064e 06000000 		.4byte	.LVL93
 2010 0652 83070000 		.4byte	0x783
 2011 0656 0E       		.uleb128 0xe
 2012 0657 1C000000 		.4byte	.LVL94
 2013 065b 95070000 		.4byte	0x795
 2014 065f 00       		.byte	0
 2015 0660 10       		.uleb128 0x10
 2016 0661 CC000000 		.4byte	.LASF62
 2017 0665 01       		.byte	0x1
 2018 0666 CD05     		.2byte	0x5cd
 2019 0668 00000000 		.4byte	.LFB27
 2020 066c 58000000 		.4byte	.LFE27-.LFB27
 2021 0670 01       		.uleb128 0x1
 2022 0671 9C       		.byte	0x9c
 2023 0672 B3060000 		.4byte	0x6b3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 65


 2024 0676 16       		.uleb128 0x16
 2025 0677 A6010000 		.4byte	.LASF63
 2026 067b 01       		.byte	0x1
 2027 067c CD05     		.2byte	0x5cd
 2028 067e 6B000000 		.4byte	0x6b
 2029 0682 1A030000 		.4byte	.LLST19
 2030 0686 18       		.uleb128 0x18
 2031 0687 06000000 		.4byte	.LBB2
 2032 068b 52000000 		.4byte	.LBE2-.LBB2
 2033 068f 14       		.uleb128 0x14
 2034 0690 07030000 		.4byte	.LASF64
 2035 0694 01       		.byte	0x1
 2036 0695 D505     		.2byte	0x5d5
 2037 0697 6B000000 		.4byte	0x6b
 2038 069b 3B030000 		.4byte	.LLST20
 2039 069f 15       		.uleb128 0x15
 2040 06a0 83020000 		.4byte	.LASF65
 2041 06a4 01       		.byte	0x1
 2042 06a5 FB05     		.2byte	0x5fb
 2043 06a7 6B000000 		.4byte	0x6b
 2044 06ab 05       		.uleb128 0x5
 2045 06ac 03       		.byte	0x3
 2046 06ad 05000000 		.4byte	tx_period.5019
 2047 06b1 00       		.byte	0
 2048 06b2 00       		.byte	0
 2049 06b3 10       		.uleb128 0x10
 2050 06b4 EB030000 		.4byte	.LASF66
 2051 06b8 01       		.byte	0x1
 2052 06b9 4606     		.2byte	0x646
 2053 06bb 00000000 		.4byte	.LFB28
 2054 06bf 02000000 		.4byte	.LFE28-.LFB28
 2055 06c3 01       		.uleb128 0x1
 2056 06c4 9C       		.byte	0x9c
 2057 06c5 D8060000 		.4byte	0x6d8
 2058 06c9 11       		.uleb128 0x11
 2059 06ca 7A010000 		.4byte	.LASF44
 2060 06ce 01       		.byte	0x1
 2061 06cf 4606     		.2byte	0x646
 2062 06d1 6B000000 		.4byte	0x6b
 2063 06d5 01       		.uleb128 0x1
 2064 06d6 50       		.byte	0x50
 2065 06d7 00       		.byte	0
 2066 06d8 19       		.uleb128 0x19
 2067 06d9 02040000 		.4byte	.LASF67
 2068 06dd 01       		.byte	0x1
 2069 06de 1C       		.byte	0x1c
 2070 06df 6B000000 		.4byte	0x6b
 2071 06e3 05       		.uleb128 0x5
 2072 06e4 03       		.byte	0x3
 2073 06e5 00000000 		.4byte	LCD_2_initVar
 2074 06e9 1A       		.uleb128 0x1a
 2075 06ea 6B000000 		.4byte	0x6b
 2076 06ee F9060000 		.4byte	0x6f9
 2077 06f2 1B       		.uleb128 0x1b
 2078 06f3 E1000000 		.4byte	0xe1
 2079 06f7 13       		.byte	0x13
 2080 06f8 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 66


 2081 06f9 19       		.uleb128 0x19
 2082 06fa 07000000 		.4byte	.LASF68
 2083 06fe 01       		.byte	0x1
 2084 06ff 24       		.byte	0x24
 2085 0700 0A070000 		.4byte	0x70a
 2086 0704 05       		.uleb128 0x5
 2087 0705 03       		.byte	0x3
 2088 0706 00000000 		.4byte	LCD_2_rxBuffer
 2089 070a 06       		.uleb128 0x6
 2090 070b E9060000 		.4byte	0x6e9
 2091 070f 19       		.uleb128 0x19
 2092 0710 94020000 		.4byte	.LASF69
 2093 0714 01       		.byte	0x1
 2094 0715 25       		.byte	0x25
 2095 0716 B8000000 		.4byte	0xb8
 2096 071a 05       		.uleb128 0x5
 2097 071b 03       		.byte	0x3
 2098 071c 00000000 		.4byte	LCD_2_rxBufferRead
 2099 0720 19       		.uleb128 0x19
 2100 0721 20020000 		.4byte	.LASF70
 2101 0725 01       		.byte	0x1
 2102 0726 26       		.byte	0x26
 2103 0727 B8000000 		.4byte	0xb8
 2104 072b 05       		.uleb128 0x5
 2105 072c 03       		.byte	0x3
 2106 072d 00000000 		.4byte	LCD_2_rxBufferWrite
 2107 0731 19       		.uleb128 0x19
 2108 0732 D7040000 		.4byte	.LASF71
 2109 0736 01       		.byte	0x1
 2110 0737 27       		.byte	0x27
 2111 0738 B8000000 		.4byte	0xb8
 2112 073c 05       		.uleb128 0x5
 2113 073d 03       		.byte	0x3
 2114 073e 00000000 		.4byte	LCD_2_rxBufferLoopDetect
 2115 0742 19       		.uleb128 0x19
 2116 0743 5B020000 		.4byte	.LASF72
 2117 0747 01       		.byte	0x1
 2118 0748 28       		.byte	0x28
 2119 0749 B8000000 		.4byte	0xb8
 2120 074d 05       		.uleb128 0x5
 2121 074e 03       		.byte	0x3
 2122 074f 00000000 		.4byte	LCD_2_rxBufferOverflow
 2123 0753 1C       		.uleb128 0x1c
 2124 0754 4C020000 		.4byte	.LASF80
 2125 0758 03       		.byte	0x3
 2126 0759 89       		.byte	0x89
 2127 075a CE000000 		.4byte	0xce
 2128 075e 6D070000 		.4byte	0x76d
 2129 0762 1D       		.uleb128 0x1d
 2130 0763 6B000000 		.4byte	0x6b
 2131 0767 1D       		.uleb128 0x1d
 2132 0768 CE000000 		.4byte	0xce
 2133 076c 00       		.byte	0
 2134 076d 1E       		.uleb128 0x1e
 2135 076e 95010000 		.4byte	.LASF73
 2136 0772 03       		.byte	0x3
 2137 0773 8C       		.byte	0x8c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 67


 2138 0774 83070000 		.4byte	0x783
 2139 0778 1D       		.uleb128 0x1d
 2140 0779 6B000000 		.4byte	0x6b
 2141 077d 1D       		.uleb128 0x1d
 2142 077e 6B000000 		.4byte	0x6b
 2143 0782 00       		.byte	0
 2144 0783 1F       		.uleb128 0x1f
 2145 0784 09020000 		.4byte	.LASF81
 2146 0788 03       		.byte	0x3
 2147 0789 7E       		.byte	0x7e
 2148 078a 6B000000 		.4byte	0x6b
 2149 078e 20       		.uleb128 0x20
 2150 078f 73040000 		.4byte	.LASF75
 2151 0793 04       		.byte	0x4
 2152 0794 27       		.byte	0x27
 2153 0795 1E       		.uleb128 0x1e
 2154 0796 28000000 		.4byte	.LASF74
 2155 079a 03       		.byte	0x3
 2156 079b 7F       		.byte	0x7f
 2157 079c A6070000 		.4byte	0x7a6
 2158 07a0 1D       		.uleb128 0x1d
 2159 07a1 6B000000 		.4byte	0x6b
 2160 07a5 00       		.byte	0
 2161 07a6 20       		.uleb128 0x20
 2162 07a7 CD030000 		.4byte	.LASF76
 2163 07ab 04       		.byte	0x4
 2164 07ac 28       		.byte	0x28
 2165 07ad 00       		.byte	0
 2166              		.section	.debug_abbrev,"",%progbits
 2167              	.Ldebug_abbrev0:
 2168 0000 01       		.uleb128 0x1
 2169 0001 11       		.uleb128 0x11
 2170 0002 01       		.byte	0x1
 2171 0003 25       		.uleb128 0x25
 2172 0004 0E       		.uleb128 0xe
 2173 0005 13       		.uleb128 0x13
 2174 0006 0B       		.uleb128 0xb
 2175 0007 03       		.uleb128 0x3
 2176 0008 0E       		.uleb128 0xe
 2177 0009 1B       		.uleb128 0x1b
 2178 000a 0E       		.uleb128 0xe
 2179 000b 55       		.uleb128 0x55
 2180 000c 17       		.uleb128 0x17
 2181 000d 11       		.uleb128 0x11
 2182 000e 01       		.uleb128 0x1
 2183 000f 10       		.uleb128 0x10
 2184 0010 17       		.uleb128 0x17
 2185 0011 00       		.byte	0
 2186 0012 00       		.byte	0
 2187 0013 02       		.uleb128 0x2
 2188 0014 24       		.uleb128 0x24
 2189 0015 00       		.byte	0
 2190 0016 0B       		.uleb128 0xb
 2191 0017 0B       		.uleb128 0xb
 2192 0018 3E       		.uleb128 0x3e
 2193 0019 0B       		.uleb128 0xb
 2194 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 68


 2195 001b 0E       		.uleb128 0xe
 2196 001c 00       		.byte	0
 2197 001d 00       		.byte	0
 2198 001e 03       		.uleb128 0x3
 2199 001f 24       		.uleb128 0x24
 2200 0020 00       		.byte	0
 2201 0021 0B       		.uleb128 0xb
 2202 0022 0B       		.uleb128 0xb
 2203 0023 3E       		.uleb128 0x3e
 2204 0024 0B       		.uleb128 0xb
 2205 0025 03       		.uleb128 0x3
 2206 0026 08       		.uleb128 0x8
 2207 0027 00       		.byte	0
 2208 0028 00       		.byte	0
 2209 0029 04       		.uleb128 0x4
 2210 002a 16       		.uleb128 0x16
 2211 002b 00       		.byte	0
 2212 002c 03       		.uleb128 0x3
 2213 002d 0E       		.uleb128 0xe
 2214 002e 3A       		.uleb128 0x3a
 2215 002f 0B       		.uleb128 0xb
 2216 0030 3B       		.uleb128 0x3b
 2217 0031 0B       		.uleb128 0xb
 2218 0032 49       		.uleb128 0x49
 2219 0033 13       		.uleb128 0x13
 2220 0034 00       		.byte	0
 2221 0035 00       		.byte	0
 2222 0036 05       		.uleb128 0x5
 2223 0037 16       		.uleb128 0x16
 2224 0038 00       		.byte	0
 2225 0039 03       		.uleb128 0x3
 2226 003a 0E       		.uleb128 0xe
 2227 003b 3A       		.uleb128 0x3a
 2228 003c 0B       		.uleb128 0xb
 2229 003d 3B       		.uleb128 0x3b
 2230 003e 05       		.uleb128 0x5
 2231 003f 49       		.uleb128 0x49
 2232 0040 13       		.uleb128 0x13
 2233 0041 00       		.byte	0
 2234 0042 00       		.byte	0
 2235 0043 06       		.uleb128 0x6
 2236 0044 35       		.uleb128 0x35
 2237 0045 00       		.byte	0
 2238 0046 49       		.uleb128 0x49
 2239 0047 13       		.uleb128 0x13
 2240 0048 00       		.byte	0
 2241 0049 00       		.byte	0
 2242 004a 07       		.uleb128 0x7
 2243 004b 0F       		.uleb128 0xf
 2244 004c 00       		.byte	0
 2245 004d 0B       		.uleb128 0xb
 2246 004e 0B       		.uleb128 0xb
 2247 004f 49       		.uleb128 0x49
 2248 0050 13       		.uleb128 0x13
 2249 0051 00       		.byte	0
 2250 0052 00       		.byte	0
 2251 0053 08       		.uleb128 0x8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 69


 2252 0054 15       		.uleb128 0x15
 2253 0055 00       		.byte	0
 2254 0056 27       		.uleb128 0x27
 2255 0057 19       		.uleb128 0x19
 2256 0058 00       		.byte	0
 2257 0059 00       		.byte	0
 2258 005a 09       		.uleb128 0x9
 2259 005b 2E       		.uleb128 0x2e
 2260 005c 01       		.byte	0x1
 2261 005d 3F       		.uleb128 0x3f
 2262 005e 19       		.uleb128 0x19
 2263 005f 03       		.uleb128 0x3
 2264 0060 0E       		.uleb128 0xe
 2265 0061 3A       		.uleb128 0x3a
 2266 0062 0B       		.uleb128 0xb
 2267 0063 3B       		.uleb128 0x3b
 2268 0064 0B       		.uleb128 0xb
 2269 0065 27       		.uleb128 0x27
 2270 0066 19       		.uleb128 0x19
 2271 0067 11       		.uleb128 0x11
 2272 0068 01       		.uleb128 0x1
 2273 0069 12       		.uleb128 0x12
 2274 006a 06       		.uleb128 0x6
 2275 006b 40       		.uleb128 0x40
 2276 006c 18       		.uleb128 0x18
 2277 006d 9742     		.uleb128 0x2117
 2278 006f 19       		.uleb128 0x19
 2279 0070 01       		.uleb128 0x1
 2280 0071 13       		.uleb128 0x13
 2281 0072 00       		.byte	0
 2282 0073 00       		.byte	0
 2283 0074 0A       		.uleb128 0xa
 2284 0075 898201   		.uleb128 0x4109
 2285 0078 01       		.byte	0x1
 2286 0079 11       		.uleb128 0x11
 2287 007a 01       		.uleb128 0x1
 2288 007b 31       		.uleb128 0x31
 2289 007c 13       		.uleb128 0x13
 2290 007d 01       		.uleb128 0x1
 2291 007e 13       		.uleb128 0x13
 2292 007f 00       		.byte	0
 2293 0080 00       		.byte	0
 2294 0081 0B       		.uleb128 0xb
 2295 0082 8A8201   		.uleb128 0x410a
 2296 0085 00       		.byte	0
 2297 0086 02       		.uleb128 0x2
 2298 0087 18       		.uleb128 0x18
 2299 0088 9142     		.uleb128 0x2111
 2300 008a 18       		.uleb128 0x18
 2301 008b 00       		.byte	0
 2302 008c 00       		.byte	0
 2303 008d 0C       		.uleb128 0xc
 2304 008e 898201   		.uleb128 0x4109
 2305 0091 01       		.byte	0x1
 2306 0092 11       		.uleb128 0x11
 2307 0093 01       		.uleb128 0x1
 2308 0094 31       		.uleb128 0x31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 70


 2309 0095 13       		.uleb128 0x13
 2310 0096 00       		.byte	0
 2311 0097 00       		.byte	0
 2312 0098 0D       		.uleb128 0xd
 2313 0099 34       		.uleb128 0x34
 2314 009a 00       		.byte	0
 2315 009b 03       		.uleb128 0x3
 2316 009c 0E       		.uleb128 0xe
 2317 009d 3A       		.uleb128 0x3a
 2318 009e 0B       		.uleb128 0xb
 2319 009f 3B       		.uleb128 0x3b
 2320 00a0 0B       		.uleb128 0xb
 2321 00a1 49       		.uleb128 0x49
 2322 00a2 13       		.uleb128 0x13
 2323 00a3 02       		.uleb128 0x2
 2324 00a4 17       		.uleb128 0x17
 2325 00a5 00       		.byte	0
 2326 00a6 00       		.byte	0
 2327 00a7 0E       		.uleb128 0xe
 2328 00a8 898201   		.uleb128 0x4109
 2329 00ab 00       		.byte	0
 2330 00ac 11       		.uleb128 0x11
 2331 00ad 01       		.uleb128 0x1
 2332 00ae 31       		.uleb128 0x31
 2333 00af 13       		.uleb128 0x13
 2334 00b0 00       		.byte	0
 2335 00b1 00       		.byte	0
 2336 00b2 0F       		.uleb128 0xf
 2337 00b3 2E       		.uleb128 0x2e
 2338 00b4 00       		.byte	0
 2339 00b5 3F       		.uleb128 0x3f
 2340 00b6 19       		.uleb128 0x19
 2341 00b7 03       		.uleb128 0x3
 2342 00b8 0E       		.uleb128 0xe
 2343 00b9 3A       		.uleb128 0x3a
 2344 00ba 0B       		.uleb128 0xb
 2345 00bb 3B       		.uleb128 0x3b
 2346 00bc 05       		.uleb128 0x5
 2347 00bd 27       		.uleb128 0x27
 2348 00be 19       		.uleb128 0x19
 2349 00bf 49       		.uleb128 0x49
 2350 00c0 13       		.uleb128 0x13
 2351 00c1 11       		.uleb128 0x11
 2352 00c2 01       		.uleb128 0x1
 2353 00c3 12       		.uleb128 0x12
 2354 00c4 06       		.uleb128 0x6
 2355 00c5 40       		.uleb128 0x40
 2356 00c6 18       		.uleb128 0x18
 2357 00c7 9742     		.uleb128 0x2117
 2358 00c9 19       		.uleb128 0x19
 2359 00ca 00       		.byte	0
 2360 00cb 00       		.byte	0
 2361 00cc 10       		.uleb128 0x10
 2362 00cd 2E       		.uleb128 0x2e
 2363 00ce 01       		.byte	0x1
 2364 00cf 3F       		.uleb128 0x3f
 2365 00d0 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 71


 2366 00d1 03       		.uleb128 0x3
 2367 00d2 0E       		.uleb128 0xe
 2368 00d3 3A       		.uleb128 0x3a
 2369 00d4 0B       		.uleb128 0xb
 2370 00d5 3B       		.uleb128 0x3b
 2371 00d6 05       		.uleb128 0x5
 2372 00d7 27       		.uleb128 0x27
 2373 00d8 19       		.uleb128 0x19
 2374 00d9 11       		.uleb128 0x11
 2375 00da 01       		.uleb128 0x1
 2376 00db 12       		.uleb128 0x12
 2377 00dc 06       		.uleb128 0x6
 2378 00dd 40       		.uleb128 0x40
 2379 00de 18       		.uleb128 0x18
 2380 00df 9742     		.uleb128 0x2117
 2381 00e1 19       		.uleb128 0x19
 2382 00e2 01       		.uleb128 0x1
 2383 00e3 13       		.uleb128 0x13
 2384 00e4 00       		.byte	0
 2385 00e5 00       		.byte	0
 2386 00e6 11       		.uleb128 0x11
 2387 00e7 05       		.uleb128 0x5
 2388 00e8 00       		.byte	0
 2389 00e9 03       		.uleb128 0x3
 2390 00ea 0E       		.uleb128 0xe
 2391 00eb 3A       		.uleb128 0x3a
 2392 00ec 0B       		.uleb128 0xb
 2393 00ed 3B       		.uleb128 0x3b
 2394 00ee 05       		.uleb128 0x5
 2395 00ef 49       		.uleb128 0x49
 2396 00f0 13       		.uleb128 0x13
 2397 00f1 02       		.uleb128 0x2
 2398 00f2 18       		.uleb128 0x18
 2399 00f3 00       		.byte	0
 2400 00f4 00       		.byte	0
 2401 00f5 12       		.uleb128 0x12
 2402 00f6 2E       		.uleb128 0x2e
 2403 00f7 00       		.byte	0
 2404 00f8 3F       		.uleb128 0x3f
 2405 00f9 19       		.uleb128 0x19
 2406 00fa 03       		.uleb128 0x3
 2407 00fb 0E       		.uleb128 0xe
 2408 00fc 3A       		.uleb128 0x3a
 2409 00fd 0B       		.uleb128 0xb
 2410 00fe 3B       		.uleb128 0x3b
 2411 00ff 05       		.uleb128 0x5
 2412 0100 27       		.uleb128 0x27
 2413 0101 19       		.uleb128 0x19
 2414 0102 11       		.uleb128 0x11
 2415 0103 01       		.uleb128 0x1
 2416 0104 12       		.uleb128 0x12
 2417 0105 06       		.uleb128 0x6
 2418 0106 40       		.uleb128 0x40
 2419 0107 18       		.uleb128 0x18
 2420 0108 9742     		.uleb128 0x2117
 2421 010a 19       		.uleb128 0x19
 2422 010b 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 72


 2423 010c 00       		.byte	0
 2424 010d 13       		.uleb128 0x13
 2425 010e 2E       		.uleb128 0x2e
 2426 010f 01       		.byte	0x1
 2427 0110 3F       		.uleb128 0x3f
 2428 0111 19       		.uleb128 0x19
 2429 0112 03       		.uleb128 0x3
 2430 0113 0E       		.uleb128 0xe
 2431 0114 3A       		.uleb128 0x3a
 2432 0115 0B       		.uleb128 0xb
 2433 0116 3B       		.uleb128 0x3b
 2434 0117 05       		.uleb128 0x5
 2435 0118 27       		.uleb128 0x27
 2436 0119 19       		.uleb128 0x19
 2437 011a 49       		.uleb128 0x49
 2438 011b 13       		.uleb128 0x13
 2439 011c 11       		.uleb128 0x11
 2440 011d 01       		.uleb128 0x1
 2441 011e 12       		.uleb128 0x12
 2442 011f 06       		.uleb128 0x6
 2443 0120 40       		.uleb128 0x40
 2444 0121 18       		.uleb128 0x18
 2445 0122 9742     		.uleb128 0x2117
 2446 0124 19       		.uleb128 0x19
 2447 0125 01       		.uleb128 0x1
 2448 0126 13       		.uleb128 0x13
 2449 0127 00       		.byte	0
 2450 0128 00       		.byte	0
 2451 0129 14       		.uleb128 0x14
 2452 012a 34       		.uleb128 0x34
 2453 012b 00       		.byte	0
 2454 012c 03       		.uleb128 0x3
 2455 012d 0E       		.uleb128 0xe
 2456 012e 3A       		.uleb128 0x3a
 2457 012f 0B       		.uleb128 0xb
 2458 0130 3B       		.uleb128 0x3b
 2459 0131 05       		.uleb128 0x5
 2460 0132 49       		.uleb128 0x49
 2461 0133 13       		.uleb128 0x13
 2462 0134 02       		.uleb128 0x2
 2463 0135 17       		.uleb128 0x17
 2464 0136 00       		.byte	0
 2465 0137 00       		.byte	0
 2466 0138 15       		.uleb128 0x15
 2467 0139 34       		.uleb128 0x34
 2468 013a 00       		.byte	0
 2469 013b 03       		.uleb128 0x3
 2470 013c 0E       		.uleb128 0xe
 2471 013d 3A       		.uleb128 0x3a
 2472 013e 0B       		.uleb128 0xb
 2473 013f 3B       		.uleb128 0x3b
 2474 0140 05       		.uleb128 0x5
 2475 0141 49       		.uleb128 0x49
 2476 0142 13       		.uleb128 0x13
 2477 0143 02       		.uleb128 0x2
 2478 0144 18       		.uleb128 0x18
 2479 0145 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 73


 2480 0146 00       		.byte	0
 2481 0147 16       		.uleb128 0x16
 2482 0148 05       		.uleb128 0x5
 2483 0149 00       		.byte	0
 2484 014a 03       		.uleb128 0x3
 2485 014b 0E       		.uleb128 0xe
 2486 014c 3A       		.uleb128 0x3a
 2487 014d 0B       		.uleb128 0xb
 2488 014e 3B       		.uleb128 0x3b
 2489 014f 05       		.uleb128 0x5
 2490 0150 49       		.uleb128 0x49
 2491 0151 13       		.uleb128 0x13
 2492 0152 02       		.uleb128 0x2
 2493 0153 17       		.uleb128 0x17
 2494 0154 00       		.byte	0
 2495 0155 00       		.byte	0
 2496 0156 17       		.uleb128 0x17
 2497 0157 26       		.uleb128 0x26
 2498 0158 00       		.byte	0
 2499 0159 49       		.uleb128 0x49
 2500 015a 13       		.uleb128 0x13
 2501 015b 00       		.byte	0
 2502 015c 00       		.byte	0
 2503 015d 18       		.uleb128 0x18
 2504 015e 0B       		.uleb128 0xb
 2505 015f 01       		.byte	0x1
 2506 0160 11       		.uleb128 0x11
 2507 0161 01       		.uleb128 0x1
 2508 0162 12       		.uleb128 0x12
 2509 0163 06       		.uleb128 0x6
 2510 0164 00       		.byte	0
 2511 0165 00       		.byte	0
 2512 0166 19       		.uleb128 0x19
 2513 0167 34       		.uleb128 0x34
 2514 0168 00       		.byte	0
 2515 0169 03       		.uleb128 0x3
 2516 016a 0E       		.uleb128 0xe
 2517 016b 3A       		.uleb128 0x3a
 2518 016c 0B       		.uleb128 0xb
 2519 016d 3B       		.uleb128 0x3b
 2520 016e 0B       		.uleb128 0xb
 2521 016f 49       		.uleb128 0x49
 2522 0170 13       		.uleb128 0x13
 2523 0171 3F       		.uleb128 0x3f
 2524 0172 19       		.uleb128 0x19
 2525 0173 02       		.uleb128 0x2
 2526 0174 18       		.uleb128 0x18
 2527 0175 00       		.byte	0
 2528 0176 00       		.byte	0
 2529 0177 1A       		.uleb128 0x1a
 2530 0178 01       		.uleb128 0x1
 2531 0179 01       		.byte	0x1
 2532 017a 49       		.uleb128 0x49
 2533 017b 13       		.uleb128 0x13
 2534 017c 01       		.uleb128 0x1
 2535 017d 13       		.uleb128 0x13
 2536 017e 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 74


 2537 017f 00       		.byte	0
 2538 0180 1B       		.uleb128 0x1b
 2539 0181 21       		.uleb128 0x21
 2540 0182 00       		.byte	0
 2541 0183 49       		.uleb128 0x49
 2542 0184 13       		.uleb128 0x13
 2543 0185 2F       		.uleb128 0x2f
 2544 0186 0B       		.uleb128 0xb
 2545 0187 00       		.byte	0
 2546 0188 00       		.byte	0
 2547 0189 1C       		.uleb128 0x1c
 2548 018a 2E       		.uleb128 0x2e
 2549 018b 01       		.byte	0x1
 2550 018c 3F       		.uleb128 0x3f
 2551 018d 19       		.uleb128 0x19
 2552 018e 03       		.uleb128 0x3
 2553 018f 0E       		.uleb128 0xe
 2554 0190 3A       		.uleb128 0x3a
 2555 0191 0B       		.uleb128 0xb
 2556 0192 3B       		.uleb128 0x3b
 2557 0193 0B       		.uleb128 0xb
 2558 0194 27       		.uleb128 0x27
 2559 0195 19       		.uleb128 0x19
 2560 0196 49       		.uleb128 0x49
 2561 0197 13       		.uleb128 0x13
 2562 0198 3C       		.uleb128 0x3c
 2563 0199 19       		.uleb128 0x19
 2564 019a 01       		.uleb128 0x1
 2565 019b 13       		.uleb128 0x13
 2566 019c 00       		.byte	0
 2567 019d 00       		.byte	0
 2568 019e 1D       		.uleb128 0x1d
 2569 019f 05       		.uleb128 0x5
 2570 01a0 00       		.byte	0
 2571 01a1 49       		.uleb128 0x49
 2572 01a2 13       		.uleb128 0x13
 2573 01a3 00       		.byte	0
 2574 01a4 00       		.byte	0
 2575 01a5 1E       		.uleb128 0x1e
 2576 01a6 2E       		.uleb128 0x2e
 2577 01a7 01       		.byte	0x1
 2578 01a8 3F       		.uleb128 0x3f
 2579 01a9 19       		.uleb128 0x19
 2580 01aa 03       		.uleb128 0x3
 2581 01ab 0E       		.uleb128 0xe
 2582 01ac 3A       		.uleb128 0x3a
 2583 01ad 0B       		.uleb128 0xb
 2584 01ae 3B       		.uleb128 0x3b
 2585 01af 0B       		.uleb128 0xb
 2586 01b0 27       		.uleb128 0x27
 2587 01b1 19       		.uleb128 0x19
 2588 01b2 3C       		.uleb128 0x3c
 2589 01b3 19       		.uleb128 0x19
 2590 01b4 01       		.uleb128 0x1
 2591 01b5 13       		.uleb128 0x13
 2592 01b6 00       		.byte	0
 2593 01b7 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 75


 2594 01b8 1F       		.uleb128 0x1f
 2595 01b9 2E       		.uleb128 0x2e
 2596 01ba 00       		.byte	0
 2597 01bb 3F       		.uleb128 0x3f
 2598 01bc 19       		.uleb128 0x19
 2599 01bd 03       		.uleb128 0x3
 2600 01be 0E       		.uleb128 0xe
 2601 01bf 3A       		.uleb128 0x3a
 2602 01c0 0B       		.uleb128 0xb
 2603 01c1 3B       		.uleb128 0x3b
 2604 01c2 0B       		.uleb128 0xb
 2605 01c3 27       		.uleb128 0x27
 2606 01c4 19       		.uleb128 0x19
 2607 01c5 49       		.uleb128 0x49
 2608 01c6 13       		.uleb128 0x13
 2609 01c7 3C       		.uleb128 0x3c
 2610 01c8 19       		.uleb128 0x19
 2611 01c9 00       		.byte	0
 2612 01ca 00       		.byte	0
 2613 01cb 20       		.uleb128 0x20
 2614 01cc 2E       		.uleb128 0x2e
 2615 01cd 00       		.byte	0
 2616 01ce 3F       		.uleb128 0x3f
 2617 01cf 19       		.uleb128 0x19
 2618 01d0 03       		.uleb128 0x3
 2619 01d1 0E       		.uleb128 0xe
 2620 01d2 3A       		.uleb128 0x3a
 2621 01d3 0B       		.uleb128 0xb
 2622 01d4 3B       		.uleb128 0x3b
 2623 01d5 0B       		.uleb128 0xb
 2624 01d6 27       		.uleb128 0x27
 2625 01d7 19       		.uleb128 0x19
 2626 01d8 3C       		.uleb128 0x3c
 2627 01d9 19       		.uleb128 0x19
 2628 01da 00       		.byte	0
 2629 01db 00       		.byte	0
 2630 01dc 00       		.byte	0
 2631              		.section	.debug_loc,"",%progbits
 2632              	.Ldebug_loc0:
 2633              	.LLST0:
 2634 0000 08000000 		.4byte	.LVL3
 2635 0004 2F000000 		.4byte	.LVL4-1
 2636 0008 0100     		.2byte	0x1
 2637 000a 50       		.byte	0x50
 2638 000b 2F000000 		.4byte	.LVL4-1
 2639 000f 38000000 		.4byte	.LVL6
 2640 0013 0100     		.2byte	0x1
 2641 0015 54       		.byte	0x54
 2642 0016 00000000 		.4byte	0
 2643 001a 00000000 		.4byte	0
 2644              	.LLST1:
 2645 001e 08000000 		.4byte	.LVL11
 2646 0022 15000000 		.4byte	.LVL12-1
 2647 0026 0100     		.2byte	0x1
 2648 0028 50       		.byte	0x50
 2649 0029 15000000 		.4byte	.LVL12-1
 2650 002d 36000000 		.4byte	.LVL15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 76


 2651 0031 0100     		.2byte	0x1
 2652 0033 54       		.byte	0x54
 2653 0034 00000000 		.4byte	0
 2654 0038 00000000 		.4byte	0
 2655              	.LLST2:
 2656 003c 22000000 		.4byte	.LVL20
 2657 0040 40000000 		.4byte	.LVL25
 2658 0044 0100     		.2byte	0x1
 2659 0046 54       		.byte	0x54
 2660 0047 46000000 		.4byte	.LVL26
 2661 004b 4E000000 		.4byte	.LVL28
 2662 004f 0100     		.2byte	0x1
 2663 0051 54       		.byte	0x54
 2664 0052 4E000000 		.4byte	.LVL28
 2665 0056 5C000000 		.4byte	.LFE9
 2666 005a 0100     		.2byte	0x1
 2667 005c 50       		.byte	0x50
 2668 005d 00000000 		.4byte	0
 2669 0061 00000000 		.4byte	0
 2670              	.LLST3:
 2671 0065 0C000000 		.4byte	.LVL18
 2672 0069 24000000 		.4byte	.LVL21
 2673 006d 0100     		.2byte	0x1
 2674 006f 52       		.byte	0x52
 2675 0070 24000000 		.4byte	.LVL21
 2676 0074 26000000 		.4byte	.LVL22
 2677 0078 0300     		.2byte	0x3
 2678 007a 72       		.byte	0x72
 2679 007b 7F       		.sleb128 -1
 2680 007c 9F       		.byte	0x9f
 2681 007d 26000000 		.4byte	.LVL22
 2682 0081 3A000000 		.4byte	.LVL24
 2683 0085 0100     		.2byte	0x1
 2684 0087 52       		.byte	0x52
 2685 0088 40000000 		.4byte	.LVL25
 2686 008c 46000000 		.4byte	.LVL26
 2687 0090 0100     		.2byte	0x1
 2688 0092 52       		.byte	0x52
 2689 0093 00000000 		.4byte	0
 2690 0097 00000000 		.4byte	0
 2691              	.LLST4:
 2692 009b 10000000 		.4byte	.LVL19
 2693 009f 49000000 		.4byte	.LVL27-1
 2694 00a3 0100     		.2byte	0x1
 2695 00a5 51       		.byte	0x51
 2696 00a6 00000000 		.4byte	0
 2697 00aa 00000000 		.4byte	0
 2698              	.LLST5:
 2699 00ae 02000000 		.4byte	.LVL32
 2700 00b2 22000000 		.4byte	.LVL36
 2701 00b6 0200     		.2byte	0x2
 2702 00b8 30       		.byte	0x30
 2703 00b9 9F       		.byte	0x9f
 2704 00ba 22000000 		.4byte	.LVL36
 2705 00be 40000000 		.4byte	.LVL41
 2706 00c2 0100     		.2byte	0x1
 2707 00c4 54       		.byte	0x54
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 77


 2708 00c5 40000000 		.4byte	.LVL41
 2709 00c9 52000000 		.4byte	.LVL44
 2710 00cd 0200     		.2byte	0x2
 2711 00cf 30       		.byte	0x30
 2712 00d0 9F       		.byte	0x9f
 2713 00d1 52000000 		.4byte	.LVL44
 2714 00d5 5A000000 		.4byte	.LVL45
 2715 00d9 0100     		.2byte	0x1
 2716 00db 54       		.byte	0x54
 2717 00dc 5A000000 		.4byte	.LVL45
 2718 00e0 5E000000 		.4byte	.LVL46
 2719 00e4 0200     		.2byte	0x2
 2720 00e6 30       		.byte	0x30
 2721 00e7 9F       		.byte	0x9f
 2722 00e8 5E000000 		.4byte	.LVL46
 2723 00ec 68000000 		.4byte	.LVL49
 2724 00f0 0100     		.2byte	0x1
 2725 00f2 54       		.byte	0x54
 2726 00f3 68000000 		.4byte	.LVL49
 2727 00f7 78000000 		.4byte	.LFE11
 2728 00fb 0100     		.2byte	0x1
 2729 00fd 50       		.byte	0x50
 2730 00fe 00000000 		.4byte	0
 2731 0102 00000000 		.4byte	0
 2732              	.LLST6:
 2733 0106 46000000 		.4byte	.LVL42
 2734 010a 60000000 		.4byte	.LVL47
 2735 010e 0100     		.2byte	0x1
 2736 0110 53       		.byte	0x53
 2737 0111 00000000 		.4byte	0
 2738 0115 00000000 		.4byte	0
 2739              	.LLST7:
 2740 0119 0C000000 		.4byte	.LVL34
 2741 011d 24000000 		.4byte	.LVL37
 2742 0121 0100     		.2byte	0x1
 2743 0123 52       		.byte	0x52
 2744 0124 24000000 		.4byte	.LVL37
 2745 0128 26000000 		.4byte	.LVL38
 2746 012c 0300     		.2byte	0x3
 2747 012e 72       		.byte	0x72
 2748 012f 7F       		.sleb128 -1
 2749 0130 9F       		.byte	0x9f
 2750 0131 26000000 		.4byte	.LVL38
 2751 0135 3A000000 		.4byte	.LVL40
 2752 0139 0100     		.2byte	0x1
 2753 013b 52       		.byte	0x52
 2754 013c 40000000 		.4byte	.LVL41
 2755 0140 4E000000 		.4byte	.LVL43
 2756 0144 0100     		.2byte	0x1
 2757 0146 52       		.byte	0x52
 2758 0147 5A000000 		.4byte	.LVL45
 2759 014b 5E000000 		.4byte	.LVL46
 2760 014f 0100     		.2byte	0x1
 2761 0151 52       		.byte	0x52
 2762 0152 00000000 		.4byte	0
 2763 0156 00000000 		.4byte	0
 2764              	.LLST8:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 78


 2765 015a 10000000 		.4byte	.LVL35
 2766 015e 63000000 		.4byte	.LVL48-1
 2767 0162 0100     		.2byte	0x1
 2768 0164 51       		.byte	0x51
 2769 0165 00000000 		.4byte	0
 2770 0169 00000000 		.4byte	0
 2771              	.LLST9:
 2772 016d 36000000 		.4byte	.LVL53
 2773 0171 38000000 		.4byte	.LVL54
 2774 0175 0100     		.2byte	0x1
 2775 0177 54       		.byte	0x54
 2776 0178 44000000 		.4byte	.LVL55
 2777 017c 46000000 		.4byte	.LVL56
 2778 0180 0100     		.2byte	0x1
 2779 0182 54       		.byte	0x54
 2780 0183 48000000 		.4byte	.LVL57
 2781 0187 50000000 		.4byte	.LVL59
 2782 018b 0100     		.2byte	0x1
 2783 018d 54       		.byte	0x54
 2784 018e 50000000 		.4byte	.LVL59
 2785 0192 54000000 		.4byte	.LFE13
 2786 0196 0100     		.2byte	0x1
 2787 0198 50       		.byte	0x50
 2788 0199 00000000 		.4byte	0
 2789 019d 00000000 		.4byte	0
 2790              	.LLST10:
 2791 01a1 06000000 		.4byte	.LVL60
 2792 01a5 1B000000 		.4byte	.LVL61-1
 2793 01a9 0100     		.2byte	0x1
 2794 01ab 50       		.byte	0x50
 2795 01ac 00000000 		.4byte	0
 2796 01b0 00000000 		.4byte	0
 2797              	.LLST11:
 2798 01b4 00000000 		.4byte	.LVL70
 2799 01b8 0C000000 		.4byte	.LVL72
 2800 01bc 0100     		.2byte	0x1
 2801 01be 50       		.byte	0x50
 2802 01bf 0C000000 		.4byte	.LVL72
 2803 01c3 16000000 		.4byte	.LVL76
 2804 01c7 0100     		.2byte	0x1
 2805 01c9 55       		.byte	0x55
 2806 01ca 16000000 		.4byte	.LVL76
 2807 01ce 18000000 		.4byte	.LVL77
 2808 01d2 0100     		.2byte	0x1
 2809 01d4 50       		.byte	0x50
 2810 01d5 18000000 		.4byte	.LVL77
 2811 01d9 20000000 		.4byte	.LVL78
 2812 01dd 0100     		.2byte	0x1
 2813 01df 55       		.byte	0x55
 2814 01e0 20000000 		.4byte	.LVL78
 2815 01e4 24000000 		.4byte	.LFE22
 2816 01e8 0400     		.2byte	0x4
 2817 01ea F3       		.byte	0xf3
 2818 01eb 01       		.uleb128 0x1
 2819 01ec 50       		.byte	0x50
 2820 01ed 9F       		.byte	0x9f
 2821 01ee 00000000 		.4byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 79


 2822 01f2 00000000 		.4byte	0
 2823              	.LLST12:
 2824 01f6 04000000 		.4byte	.LVL71
 2825 01fa 0C000000 		.4byte	.LVL72
 2826 01fe 0200     		.2byte	0x2
 2827 0200 30       		.byte	0x30
 2828 0201 9F       		.byte	0x9f
 2829 0202 0C000000 		.4byte	.LVL72
 2830 0206 12000000 		.4byte	.LVL74
 2831 020a 0100     		.2byte	0x1
 2832 020c 54       		.byte	0x54
 2833 020d 12000000 		.4byte	.LVL74
 2834 0211 14000000 		.4byte	.LVL75
 2835 0215 0300     		.2byte	0x3
 2836 0217 74       		.byte	0x74
 2837 0218 7F       		.sleb128 -1
 2838 0219 9F       		.byte	0x9f
 2839 021a 14000000 		.4byte	.LVL75
 2840 021e 16000000 		.4byte	.LVL76
 2841 0222 0100     		.2byte	0x1
 2842 0224 54       		.byte	0x54
 2843 0225 16000000 		.4byte	.LVL76
 2844 0229 18000000 		.4byte	.LVL77
 2845 022d 0200     		.2byte	0x2
 2846 022f 30       		.byte	0x30
 2847 0230 9F       		.byte	0x9f
 2848 0231 18000000 		.4byte	.LVL77
 2849 0235 20000000 		.4byte	.LVL78
 2850 0239 0100     		.2byte	0x1
 2851 023b 54       		.byte	0x54
 2852 023c 00000000 		.4byte	0
 2853 0240 00000000 		.4byte	0
 2854              	.LLST13:
 2855 0244 00000000 		.4byte	.LVL79
 2856 0248 0E000000 		.4byte	.LVL81
 2857 024c 0100     		.2byte	0x1
 2858 024e 50       		.byte	0x50
 2859 024f 0E000000 		.4byte	.LVL81
 2860 0253 1E000000 		.4byte	.LVL86
 2861 0257 0100     		.2byte	0x1
 2862 0259 55       		.byte	0x55
 2863 025a 1E000000 		.4byte	.LVL86
 2864 025e 24000000 		.4byte	.LFE23
 2865 0262 0400     		.2byte	0x4
 2866 0264 F3       		.byte	0xf3
 2867 0265 01       		.uleb128 0x1
 2868 0266 50       		.byte	0x50
 2869 0267 9F       		.byte	0x9f
 2870 0268 00000000 		.4byte	0
 2871 026c 00000000 		.4byte	0
 2872              	.LLST14:
 2873 0270 00000000 		.4byte	.LVL79
 2874 0274 0E000000 		.4byte	.LVL81
 2875 0278 0100     		.2byte	0x1
 2876 027a 51       		.byte	0x51
 2877 027b 0E000000 		.4byte	.LVL81
 2878 027f 24000000 		.4byte	.LFE23
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 80


 2879 0283 0400     		.2byte	0x4
 2880 0285 F3       		.byte	0xf3
 2881 0286 01       		.uleb128 0x1
 2882 0287 51       		.byte	0x51
 2883 0288 9F       		.byte	0x9f
 2884 0289 00000000 		.4byte	0
 2885 028d 00000000 		.4byte	0
 2886              	.LLST15:
 2887 0291 06000000 		.4byte	.LVL80
 2888 0295 0E000000 		.4byte	.LVL81
 2889 0299 0200     		.2byte	0x2
 2890 029b 30       		.byte	0x30
 2891 029c 9F       		.byte	0x9f
 2892 029d 0E000000 		.4byte	.LVL81
 2893 02a1 16000000 		.4byte	.LVL83
 2894 02a5 0100     		.2byte	0x1
 2895 02a7 54       		.byte	0x54
 2896 02a8 16000000 		.4byte	.LVL83
 2897 02ac 18000000 		.4byte	.LVL84
 2898 02b0 0300     		.2byte	0x3
 2899 02b2 74       		.byte	0x74
 2900 02b3 7F       		.sleb128 -1
 2901 02b4 9F       		.byte	0x9f
 2902 02b5 18000000 		.4byte	.LVL84
 2903 02b9 1C000000 		.4byte	.LVL85
 2904 02bd 0100     		.2byte	0x1
 2905 02bf 54       		.byte	0x54
 2906 02c0 00000000 		.4byte	0
 2907 02c4 00000000 		.4byte	0
 2908              	.LLST16:
 2909 02c8 00000000 		.4byte	.LVL87
 2910 02cc 0B000000 		.4byte	.LVL88-1
 2911 02d0 0100     		.2byte	0x1
 2912 02d2 50       		.byte	0x50
 2913 02d3 0B000000 		.4byte	.LVL88-1
 2914 02d7 20000000 		.4byte	.LFE24
 2915 02db 0400     		.2byte	0x4
 2916 02dd F3       		.byte	0xf3
 2917 02de 01       		.uleb128 0x1
 2918 02df 50       		.byte	0x50
 2919 02e0 9F       		.byte	0x9f
 2920 02e1 00000000 		.4byte	0
 2921 02e5 00000000 		.4byte	0
 2922              	.LLST17:
 2923 02e9 06000000 		.4byte	.LVL91
 2924 02ed 1C000000 		.4byte	.LVL92
 2925 02f1 0100     		.2byte	0x1
 2926 02f3 53       		.byte	0x53
 2927 02f4 1C000000 		.4byte	.LVL92
 2928 02f8 24000000 		.4byte	.LFE25
 2929 02fc 0100     		.2byte	0x1
 2930 02fe 50       		.byte	0x50
 2931 02ff 00000000 		.4byte	0
 2932 0303 00000000 		.4byte	0
 2933              	.LLST18:
 2934 0307 06000000 		.4byte	.LVL93
 2935 030b 1B000000 		.4byte	.LVL94-1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 81


 2936 030f 0100     		.2byte	0x1
 2937 0311 50       		.byte	0x50
 2938 0312 00000000 		.4byte	0
 2939 0316 00000000 		.4byte	0
 2940              	.LLST19:
 2941 031a 00000000 		.4byte	.LVL95
 2942 031e 3C000000 		.4byte	.LVL100
 2943 0322 0100     		.2byte	0x1
 2944 0324 50       		.byte	0x50
 2945 0325 3C000000 		.4byte	.LVL100
 2946 0329 58000000 		.4byte	.LFE27
 2947 032d 0400     		.2byte	0x4
 2948 032f F3       		.byte	0xf3
 2949 0330 01       		.uleb128 0x1
 2950 0331 50       		.byte	0x50
 2951 0332 9F       		.byte	0x9f
 2952 0333 00000000 		.4byte	0
 2953 0337 00000000 		.4byte	0
 2954              	.LLST20:
 2955 033b 22000000 		.4byte	.LVL96
 2956 033f 28000000 		.4byte	.LVL97
 2957 0343 0100     		.2byte	0x1
 2958 0345 53       		.byte	0x53
 2959 0346 34000000 		.4byte	.LVL98
 2960 034a 3A000000 		.4byte	.LVL99
 2961 034e 0100     		.2byte	0x1
 2962 0350 53       		.byte	0x53
 2963 0351 00000000 		.4byte	0
 2964 0355 00000000 		.4byte	0
 2965              		.section	.debug_aranges,"",%progbits
 2966 0000 FC000000 		.4byte	0xfc
 2967 0004 0200     		.2byte	0x2
 2968 0006 00000000 		.4byte	.Ldebug_info0
 2969 000a 04       		.byte	0x4
 2970 000b 00       		.byte	0
 2971 000c 0000     		.2byte	0
 2972 000e 0000     		.2byte	0
 2973 0010 00000000 		.4byte	.LFB1
 2974 0014 3C000000 		.4byte	.LFE1-.LFB1
 2975 0018 00000000 		.4byte	.LFB2
 2976 001c 44000000 		.4byte	.LFE2-.LFB2
 2977 0020 00000000 		.4byte	.LFB0
 2978 0024 1C000000 		.4byte	.LFE0-.LFB0
 2979 0028 00000000 		.4byte	.LFB4
 2980 002c 04000000 		.4byte	.LFE4-.LFB4
 2981 0030 00000000 		.4byte	.LFB5
 2982 0034 02000000 		.4byte	.LFE5-.LFB5
 2983 0038 00000000 		.4byte	.LFB6
 2984 003c 0C000000 		.4byte	.LFE6-.LFB6
 2985 0040 00000000 		.4byte	.LFB7
 2986 0044 0C000000 		.4byte	.LFE7-.LFB7
 2987 0048 00000000 		.4byte	.LFB3
 2988 004c 44000000 		.4byte	.LFE3-.LFB3
 2989 0050 00000000 		.4byte	.LFB8
 2990 0054 0C000000 		.4byte	.LFE8-.LFB8
 2991 0058 00000000 		.4byte	.LFB9
 2992 005c 5C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 82


 2993 0060 00000000 		.4byte	.LFB10
 2994 0064 28000000 		.4byte	.LFE10-.LFB10
 2995 0068 00000000 		.4byte	.LFB11
 2996 006c 78000000 		.4byte	.LFE11-.LFB11
 2997 0070 00000000 		.4byte	.LFB12
 2998 0074 12000000 		.4byte	.LFE12-.LFB12
 2999 0078 00000000 		.4byte	.LFB13
 3000 007c 54000000 		.4byte	.LFE13-.LFB13
 3001 0080 00000000 		.4byte	.LFB14
 3002 0084 3C000000 		.4byte	.LFE14-.LFB14
 3003 0088 00000000 		.4byte	.LFB15
 3004 008c 02000000 		.4byte	.LFE15-.LFB15
 3005 0090 00000000 		.4byte	.LFB16
 3006 0094 0C000000 		.4byte	.LFE16-.LFB16
 3007 0098 00000000 		.4byte	.LFB17
 3008 009c 0C000000 		.4byte	.LFE17-.LFB17
 3009 00a0 00000000 		.4byte	.LFB18
 3010 00a4 0C000000 		.4byte	.LFE18-.LFB18
 3011 00a8 00000000 		.4byte	.LFB19
 3012 00ac 14000000 		.4byte	.LFE19-.LFB19
 3013 00b0 00000000 		.4byte	.LFB20
 3014 00b4 0C000000 		.4byte	.LFE20-.LFB20
 3015 00b8 00000000 		.4byte	.LFB21
 3016 00bc 18000000 		.4byte	.LFE21-.LFB21
 3017 00c0 00000000 		.4byte	.LFB22
 3018 00c4 24000000 		.4byte	.LFE22-.LFB22
 3019 00c8 00000000 		.4byte	.LFB23
 3020 00cc 24000000 		.4byte	.LFE23-.LFB23
 3021 00d0 00000000 		.4byte	.LFB24
 3022 00d4 20000000 		.4byte	.LFE24-.LFB24
 3023 00d8 00000000 		.4byte	.LFB25
 3024 00dc 24000000 		.4byte	.LFE25-.LFB25
 3025 00e0 00000000 		.4byte	.LFB26
 3026 00e4 24000000 		.4byte	.LFE26-.LFB26
 3027 00e8 00000000 		.4byte	.LFB27
 3028 00ec 58000000 		.4byte	.LFE27-.LFB27
 3029 00f0 00000000 		.4byte	.LFB28
 3030 00f4 02000000 		.4byte	.LFE28-.LFB28
 3031 00f8 00000000 		.4byte	0
 3032 00fc 00000000 		.4byte	0
 3033              		.section	.debug_ranges,"",%progbits
 3034              	.Ldebug_ranges0:
 3035 0000 00000000 		.4byte	.LFB1
 3036 0004 3C000000 		.4byte	.LFE1
 3037 0008 00000000 		.4byte	.LFB2
 3038 000c 44000000 		.4byte	.LFE2
 3039 0010 00000000 		.4byte	.LFB0
 3040 0014 1C000000 		.4byte	.LFE0
 3041 0018 00000000 		.4byte	.LFB4
 3042 001c 04000000 		.4byte	.LFE4
 3043 0020 00000000 		.4byte	.LFB5
 3044 0024 02000000 		.4byte	.LFE5
 3045 0028 00000000 		.4byte	.LFB6
 3046 002c 0C000000 		.4byte	.LFE6
 3047 0030 00000000 		.4byte	.LFB7
 3048 0034 0C000000 		.4byte	.LFE7
 3049 0038 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 83


 3050 003c 44000000 		.4byte	.LFE3
 3051 0040 00000000 		.4byte	.LFB8
 3052 0044 0C000000 		.4byte	.LFE8
 3053 0048 00000000 		.4byte	.LFB9
 3054 004c 5C000000 		.4byte	.LFE9
 3055 0050 00000000 		.4byte	.LFB10
 3056 0054 28000000 		.4byte	.LFE10
 3057 0058 00000000 		.4byte	.LFB11
 3058 005c 78000000 		.4byte	.LFE11
 3059 0060 00000000 		.4byte	.LFB12
 3060 0064 12000000 		.4byte	.LFE12
 3061 0068 00000000 		.4byte	.LFB13
 3062 006c 54000000 		.4byte	.LFE13
 3063 0070 00000000 		.4byte	.LFB14
 3064 0074 3C000000 		.4byte	.LFE14
 3065 0078 00000000 		.4byte	.LFB15
 3066 007c 02000000 		.4byte	.LFE15
 3067 0080 00000000 		.4byte	.LFB16
 3068 0084 0C000000 		.4byte	.LFE16
 3069 0088 00000000 		.4byte	.LFB17
 3070 008c 0C000000 		.4byte	.LFE17
 3071 0090 00000000 		.4byte	.LFB18
 3072 0094 0C000000 		.4byte	.LFE18
 3073 0098 00000000 		.4byte	.LFB19
 3074 009c 14000000 		.4byte	.LFE19
 3075 00a0 00000000 		.4byte	.LFB20
 3076 00a4 0C000000 		.4byte	.LFE20
 3077 00a8 00000000 		.4byte	.LFB21
 3078 00ac 18000000 		.4byte	.LFE21
 3079 00b0 00000000 		.4byte	.LFB22
 3080 00b4 24000000 		.4byte	.LFE22
 3081 00b8 00000000 		.4byte	.LFB23
 3082 00bc 24000000 		.4byte	.LFE23
 3083 00c0 00000000 		.4byte	.LFB24
 3084 00c4 20000000 		.4byte	.LFE24
 3085 00c8 00000000 		.4byte	.LFB25
 3086 00cc 24000000 		.4byte	.LFE25
 3087 00d0 00000000 		.4byte	.LFB26
 3088 00d4 24000000 		.4byte	.LFE26
 3089 00d8 00000000 		.4byte	.LFB27
 3090 00dc 58000000 		.4byte	.LFE27
 3091 00e0 00000000 		.4byte	.LFB28
 3092 00e4 02000000 		.4byte	.LFE28
 3093 00e8 00000000 		.4byte	0
 3094 00ec 00000000 		.4byte	0
 3095              		.section	.debug_line,"",%progbits
 3096              	.Ldebug_line0:
 3097 0000 31030000 		.section	.debug_str,"MS",%progbits,1
 3097      02006300 
 3097      00000201 
 3097      FB0E0D00 
 3097      01010101 
 3098              	.LASF10:
 3099 0000 75696E74 		.ascii	"uint16\000"
 3099      313600
 3100              	.LASF68:
 3101 0007 4C43445F 		.ascii	"LCD_2_rxBuffer\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 84


 3101      325F7278 
 3101      42756666 
 3101      657200
 3102              	.LASF33:
 3103 0016 6C6F635F 		.ascii	"loc_rxBufferWrite\000"
 3103      72784275 
 3103      66666572 
 3103      57726974 
 3103      6500
 3104              	.LASF74:
 3105 0028 43794578 		.ascii	"CyExitCriticalSection\000"
 3105      69744372 
 3105      69746963 
 3105      616C5365 
 3105      6374696F 
 3106              	.LASF77:
 3107 003e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3107      4320342E 
 3107      382E3420 
 3107      32303134 
 3107      30353236 
 3108 0071 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3108      20726576 
 3108      6973696F 
 3108      6E203231 
 3108      31333538 
 3109 00a4 67202D66 		.ascii	"g -ffunction-sections\000"
 3109      66756E63 
 3109      74696F6E 
 3109      2D736563 
 3109      74696F6E 
 3110              	.LASF50:
 3111 00ba 74784461 		.ascii	"txDataByte\000"
 3111      74614279 
 3111      746500
 3112              	.LASF55:
 3113 00c5 73747269 		.ascii	"string\000"
 3113      6E6700
 3114              	.LASF62:
 3115 00cc 4C43445F 		.ascii	"LCD_2_SendBreak\000"
 3115      325F5365 
 3115      6E644272 
 3115      65616B00 
 3116              	.LASF42:
 3117 00dc 4C43445F 		.ascii	"LCD_2_ClearRxBuffer\000"
 3117      325F436C 
 3117      65617252 
 3117      78427566 
 3117      66657200 
 3118              	.LASF7:
 3119 00f0 6C6F6E67 		.ascii	"long long unsigned int\000"
 3119      206C6F6E 
 3119      6720756E 
 3119      7369676E 
 3119      65642069 
 3120              	.LASF22:
 3121 0107 4C43445F 		.ascii	"LCD_2_Start\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 85


 3121      325F5374 
 3121      61727400 
 3122              	.LASF6:
 3123 0113 6C6F6E67 		.ascii	"long long int\000"
 3123      206C6F6E 
 3123      6720696E 
 3123      7400
 3124              	.LASF0:
 3125 0121 7369676E 		.ascii	"signed char\000"
 3125      65642063 
 3125      68617200 
 3126              	.LASF39:
 3127 012d 4C43445F 		.ascii	"LCD_2_GetByte\000"
 3127      325F4765 
 3127      74427974 
 3127      6500
 3128              	.LASF4:
 3129 013b 6C6F6E67 		.ascii	"long int\000"
 3129      20696E74 
 3129      00
 3130              	.LASF25:
 3131 0144 4C43445F 		.ascii	"LCD_2_DisableRxInt\000"
 3131      325F4469 
 3131      7361626C 
 3131      65527849 
 3131      6E7400
 3132              	.LASF9:
 3133 0157 75696E74 		.ascii	"uint8\000"
 3133      3800
 3134              	.LASF60:
 3135 015d 4C43445F 		.ascii	"LCD_2_GetTxBufferSize\000"
 3135      325F4765 
 3135      74547842 
 3135      75666665 
 3135      7253697A 
 3136              	.LASF13:
 3137 0173 646F7562 		.ascii	"double\000"
 3137      6C6500
 3138              	.LASF44:
 3139 017a 61646472 		.ascii	"addressMode\000"
 3139      6573734D 
 3139      6F646500 
 3140              	.LASF11:
 3141 0186 75696E74 		.ascii	"uint32\000"
 3141      333200
 3142              	.LASF29:
 3143 018d 636F6E74 		.ascii	"control\000"
 3143      726F6C00 
 3144              	.LASF73:
 3145 0195 4379496E 		.ascii	"CyIntSetPriority\000"
 3145      74536574 
 3145      5072696F 
 3145      72697479 
 3145      00
 3146              	.LASF63:
 3147 01a6 7265744D 		.ascii	"retMode\000"
 3147      6F646500 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 86


 3148              	.LASF8:
 3149 01ae 756E7369 		.ascii	"unsigned int\000"
 3149      676E6564 
 3149      20696E74 
 3149      00
 3150              	.LASF5:
 3151 01bb 6C6F6E67 		.ascii	"long unsigned int\000"
 3151      20756E73 
 3151      69676E65 
 3151      6420696E 
 3151      7400
 3152              	.LASF79:
 3153 01cd 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\NMUX\\Unificada\\U"
 3153      73657273 
 3153      5C526563 
 3153      65706369 
 3153      6F6E5C44 
 3154 01fa 6E696669 		.ascii	"nificada.cydsn\000"
 3154      63616461 
 3154      2E637964 
 3154      736E00
 3155              	.LASF81:
 3156 0209 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3156      74657243 
 3156      72697469 
 3156      63616C53 
 3156      65637469 
 3157              	.LASF70:
 3158 0220 4C43445F 		.ascii	"LCD_2_rxBufferWrite\000"
 3158      325F7278 
 3158      42756666 
 3158      65725772 
 3158      69746500 
 3159              	.LASF41:
 3160 0234 73697A65 		.ascii	"size\000"
 3160      00
 3161              	.LASF3:
 3162 0239 73686F72 		.ascii	"short unsigned int\000"
 3162      7420756E 
 3162      7369676E 
 3162      65642069 
 3162      6E7400
 3163              	.LASF80:
 3164 024c 4379496E 		.ascii	"CyIntSetVector\000"
 3164      74536574 
 3164      56656374 
 3164      6F7200
 3165              	.LASF72:
 3166 025b 4C43445F 		.ascii	"LCD_2_rxBufferOverflow\000"
 3166      325F7278 
 3166      42756666 
 3166      65724F76 
 3166      6572666C 
 3167              	.LASF32:
 3168 0272 6C6F635F 		.ascii	"loc_rxBufferRead\000"
 3168      72784275 
 3168      66666572 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 87


 3168      52656164 
 3168      00
 3169              	.LASF65:
 3170 0283 74785F70 		.ascii	"tx_period\000"
 3170      6572696F 
 3170      6400
 3171              	.LASF30:
 3172 028d 696E7453 		.ascii	"intSrc\000"
 3172      726300
 3173              	.LASF69:
 3174 0294 4C43445F 		.ascii	"LCD_2_rxBufferRead\000"
 3174      325F7278 
 3174      42756666 
 3174      65725265 
 3174      616400
 3175              	.LASF24:
 3176 02a7 4C43445F 		.ascii	"LCD_2_EnableRxInt\000"
 3176      325F456E 
 3176      61626C65 
 3176      5278496E 
 3176      7400
 3177              	.LASF51:
 3178 02b9 4C43445F 		.ascii	"LCD_2_ReadControlRegister\000"
 3178      325F5265 
 3178      6164436F 
 3178      6E74726F 
 3178      6C526567 
 3179              	.LASF23:
 3180 02d3 4C43445F 		.ascii	"LCD_2_WriteControlRegister\000"
 3180      325F5772 
 3180      69746543 
 3180      6F6E7472 
 3180      6F6C5265 
 3181              	.LASF52:
 3182 02ee 4C43445F 		.ascii	"LCD_2_ReadTxStatus\000"
 3182      325F5265 
 3182      61645478 
 3182      53746174 
 3182      757300
 3183              	.LASF17:
 3184 0301 72656733 		.ascii	"reg32\000"
 3184      3200
 3185              	.LASF64:
 3186 0307 746D7053 		.ascii	"tmpStat\000"
 3186      74617400 
 3187              	.LASF21:
 3188 030f 4C43445F 		.ascii	"LCD_2_Enable\000"
 3188      325F456E 
 3188      61626C65 
 3188      00
 3189              	.LASF34:
 3190 031c 4C43445F 		.ascii	"LCD_2_ReadRxData\000"
 3190      325F5265 
 3190      61645278 
 3190      44617461 
 3190      00
 3191              	.LASF19:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 88


 3192 032d 73697A65 		.ascii	"sizetype\000"
 3192      74797065 
 3192      00
 3193              	.LASF46:
 3194 0336 61646472 		.ascii	"address\000"
 3194      65737300 
 3195              	.LASF78:
 3196 033e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\LCD_2.c\000"
 3196      6E657261 
 3196      7465645F 
 3196      536F7572 
 3196      63655C50 
 3197              	.LASF38:
 3198 035f 72785374 		.ascii	"rxStatus\000"
 3198      61747573 
 3198      00
 3199              	.LASF26:
 3200 0368 4C43445F 		.ascii	"LCD_2_Stop\000"
 3200      325F5374 
 3200      6F7000
 3201              	.LASF12:
 3202 0373 666C6F61 		.ascii	"float\000"
 3202      7400
 3203              	.LASF54:
 3204 0379 4C43445F 		.ascii	"LCD_2_PutString\000"
 3204      325F5075 
 3204      74537472 
 3204      696E6700 
 3205              	.LASF16:
 3206 0389 72656738 		.ascii	"reg8\000"
 3206      00
 3207              	.LASF1:
 3208 038e 756E7369 		.ascii	"unsigned char\000"
 3208      676E6564 
 3208      20636861 
 3208      7200
 3209              	.LASF2:
 3210 039c 73686F72 		.ascii	"short int\000"
 3210      7420696E 
 3210      7400
 3211              	.LASF37:
 3212 03a6 4C43445F 		.ascii	"LCD_2_GetChar\000"
 3212      325F4765 
 3212      74436861 
 3212      7200
 3213              	.LASF28:
 3214 03b4 4C43445F 		.ascii	"LCD_2_SetRxInterruptMode\000"
 3214      325F5365 
 3214      74527849 
 3214      6E746572 
 3214      72757074 
 3215              	.LASF76:
 3216 03cd 4C43445F 		.ascii	"LCD_2_IntClock_Stop\000"
 3216      325F496E 
 3216      74436C6F 
 3216      636B5F53 
 3216      746F7000 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 89


 3217              	.LASF58:
 3218 03e1 62797465 		.ascii	"byteCount\000"
 3218      436F756E 
 3218      7400
 3219              	.LASF66:
 3220 03eb 4C43445F 		.ascii	"LCD_2_SetTxAddressMode\000"
 3220      325F5365 
 3220      74547841 
 3220      64647265 
 3220      73734D6F 
 3221              	.LASF67:
 3222 0402 4C43445F 		.ascii	"LCD_2_initVar\000"
 3222      325F696E 
 3222      69745661 
 3222      7200
 3223              	.LASF31:
 3224 0410 72784461 		.ascii	"rxData\000"
 3224      746100
 3225              	.LASF15:
 3226 0417 63686172 		.ascii	"char\000"
 3226      00
 3227              	.LASF53:
 3228 041c 4C43445F 		.ascii	"LCD_2_PutChar\000"
 3228      325F5075 
 3228      74436861 
 3228      7200
 3229              	.LASF61:
 3230 042a 4C43445F 		.ascii	"LCD_2_ClearTxBuffer\000"
 3230      325F436C 
 3230      65617254 
 3230      78427566 
 3230      66657200 
 3231              	.LASF18:
 3232 043e 63796973 		.ascii	"cyisraddress\000"
 3232      72616464 
 3232      72657373 
 3232      00
 3233              	.LASF35:
 3234 044b 4C43445F 		.ascii	"LCD_2_ReadRxStatus\000"
 3234      325F5265 
 3234      61645278 
 3234      53746174 
 3234      757300
 3235              	.LASF57:
 3236 045e 4C43445F 		.ascii	"LCD_2_PutArray\000"
 3236      325F5075 
 3236      74417272 
 3236      617900
 3237              	.LASF14:
 3238 046d 63686172 		.ascii	"char8\000"
 3238      3800
 3239              	.LASF75:
 3240 0473 4C43445F 		.ascii	"LCD_2_IntClock_Start\000"
 3240      325F496E 
 3240      74436C6F 
 3240      636B5F53 
 3240      74617274 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 90


 3241              	.LASF27:
 3242 0488 656E6162 		.ascii	"enableInterrupts\000"
 3242      6C65496E 
 3242      74657272 
 3242      75707473 
 3242      00
 3243              	.LASF36:
 3244 0499 73746174 		.ascii	"status\000"
 3244      757300
 3245              	.LASF59:
 3246 04a0 4C43445F 		.ascii	"LCD_2_PutCRLF\000"
 3246      325F5075 
 3246      7443524C 
 3246      4600
 3247              	.LASF43:
 3248 04ae 4C43445F 		.ascii	"LCD_2_SetRxAddressMode\000"
 3248      325F5365 
 3248      74527841 
 3248      64647265 
 3248      73734D6F 
 3249              	.LASF49:
 3250 04c5 4C43445F 		.ascii	"LCD_2_WriteTxData\000"
 3250      325F5772 
 3250      69746554 
 3250      78446174 
 3250      6100
 3251              	.LASF71:
 3252 04d7 4C43445F 		.ascii	"LCD_2_rxBufferLoopDetect\000"
 3252      325F7278 
 3252      42756666 
 3252      65724C6F 
 3252      6F704465 
 3253              	.LASF45:
 3254 04f0 4C43445F 		.ascii	"LCD_2_SetRxAddress1\000"
 3254      325F5365 
 3254      74527841 
 3254      64647265 
 3254      73733100 
 3255              	.LASF47:
 3256 0504 4C43445F 		.ascii	"LCD_2_SetRxAddress2\000"
 3256      325F5365 
 3256      74527841 
 3256      64647265 
 3256      73733200 
 3257              	.LASF56:
 3258 0518 6275665F 		.ascii	"buf_index\000"
 3258      696E6465 
 3258      7800
 3259              	.LASF40:
 3260 0522 4C43445F 		.ascii	"LCD_2_GetRxBufferSize\000"
 3260      325F4765 
 3260      74527842 
 3260      75666665 
 3260      7253697A 
 3261              	.LASF20:
 3262 0538 4C43445F 		.ascii	"LCD_2_Init\000"
 3262      325F496E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccSqeGlZ.s 			page 91


 3262      697400
 3263              	.LASF48:
 3264 0543 4C43445F 		.ascii	"LCD_2_SetTxInterruptMode\000"
 3264      325F5365 
 3264      74547849 
 3264      6E746572 
 3264      72757074 
 3265              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
